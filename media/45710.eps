%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1__6.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Lisa Taiga
%%CreationDate: 1/30/2018
%%BoundingBox: 0 0 641 450
%%HiResBoundingBox: 0 0 640.8962 450
%%CropBox: 0 0 640.8962 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.2 x242 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 6 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">jjj4</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-01-30T22:55:32+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-01-30T22:55:33+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-01-30T22:55:33+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>20</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAFAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9AyeYbPQtE1DV7744rZY6RRsnqSSOeEcS8zGoaSRgq8mA3FSM03ZBJ4vh+lv&#xA;z9GBXP5veal1We2a68uWLBpBbadPPeSTp6MZeRb2aGF4bdlWj8T8R+zRW2zd0N3Hs2LZvoPnKPzH&#xA;pF0klv8Ao7U4grNZmVJS0EhBhuYnWnOKQbBqfaDAVoGOF2gLwyr8btmP6hae2hm/RfKLi0xErRCW&#xA;vHkSxUMRU0r1yPZ/9yPj95Tl+pjXlq8/M+fW501+y0m30iN2XnbTyyzH4CV9MFF6kqT6lDTtmYFm&#xA;I0Kr7fx8lTzRe/mJb6nbReX7LS57CZlX1bu4khkVuNWDp6bchsSOBLU7ZbDho24+TisV+hka2sl3&#xA;pH1fUljM00CperAWEXMrST0y1G48q0rvTKiLFN+LIYSEo8w8517yf5ni1gny/bWL6bFFCsVrdMS0&#xA;khmJmkmkaB2ReDcV4u32fFqrTPDt6avzc6XauokbMj8NkRoXknzRDpN1HqaaXJfrMDaTGKSb9wF9&#xA;Pg6xC3o54erz+L7ZSg4hiJ4fTsPUgdp6i/rLINL8oC212y1NHij9CNlnhhheFGdkdSyq7uwHxDqT&#xA;khhqVhun2rKenlincpE8/iGC6xK41+/9MojxXEwVkdhIkcc1SQoCniwUry3+LkPbL3UcuqC9NopU&#xA;a0YKFVWjmkZXYtwUhzRZFpy+L4T26da5+Ls3JOPEKrzdbm7VxY5cJux3L0ml5zIZPRZVX01jkVWC&#xA;pNGWZFUI+/FaU8Ae1MwZRMSQebsIyEgJDk9M0uC7XylYQwzCS6FqVhmIFK0+Dsa023pvhhKMZAy3&#xA;j1RlEpQIjtLowK61zzhpOqeXdJ1jX7CDUrx70XkBCk3AluB9R+rr6a/3afu2qV5HxO+XRzYpxkQO&#xA;kq9/RxfCzXEXvcb3HxVf8UfmDoOlBNet01K++tiC3n0+NC9xFJIixyNbslYm+KjKpei1bp8WavFx&#xA;g7nn9nlfV6DHp4xhKUhxV3fHc/Z8fiGa+V/N/l/zDLcppM/rvZPF9Y+Erx9RpFUVIHeJslppSN3b&#xA;janTSxECTEfzP85R6Rq82n6fpulXGp/VHu3+txTXF1L8LLGIoYIJeVHAryetOinLjAHosNTliKE5&#xA;Ad1lj+o/mBeWNvHdTeUbK9jm1FrNV063lmmRHWlsjW/wMZpXimJ4VUAL/MCUYonoGZ7QzjlOR+J/&#xA;SpXHm3WoHt7jUPKum2S/V5nm02cSQ3Jo1IpXozC3Uio4yLUmgr8Y4ssMb5Modp6ivrkzz8p9Qa/T&#xA;V5Z7axguEuAYV06X10S0njWWCKSWihpADU7dCNhjGAHINefVZMoAnLiY55sf80n8zaimn6denTbu&#xA;WBoVS5ogFoztSGeKWM231kQpXkjLV6SfATSfFEDe+L3bfNxeKV0AK6m9/g7zzq35vjWrNtI0SQWu&#xA;pWItru2Fw0sULlEd5GeD0mt5UeZ41kjZiwSoWvGkZDzZwgZHaviQPvZrq8uqReSoDeqYtQiMccrP&#xA;Krksj8PV9QKFPOnMHiOu4B2yTBC3/mO80DyVp9/aQwSxLx9dpbmKFFhLEVWaYrGDVl2Y+3XFa69A&#xA;lfl/zne3XmtdP02//TOjXbTC6mZkiuNPkh5CRGikHrGsrKgVl+GhHY4eAHGbJB+1iSeMcIuNWU+r&#xA;KfPvHn+6qGCVFKrbEHbb/fg99vDAySnz9qGvWXmO1aDV20zTZo7aL9yirI0zXJHH1LpXtX5qQPSj&#xA;Hrn9mv2SV678kmvfzX0XVNY0/wAreXtRv7fV72S3SI/VfVi9JQtxIeMkkVwA0KMGk3Cjl3xMTZJ6&#xA;/jZEJAUI/bv87Zd+WkOqx6EjanePc3RVBJHNM11LE3xMQ05WFZAwcMKRLxqVqVChZzuhfLp+Pgxi&#xA;IiRF+obHe/P3dWPfm/518w6c8Gj+XZfQuZFVtQuhD6phSVuENCJEYNI44U41IaqkcTlbN5/+Xvnz&#xA;zjoWsrb6td32pWJueN3FMHlA+tyww1V5gXDxTSIqIjcWUswB+J1NIt6jrnljT9cs4W1G+axtdLu4&#xA;79LgMgj9ZI5IoyzSELxDSBtupAG3TNJ2OK4/h+n8finJznk831WKbRfM3lvQLbXrvU/LX1W1h1W5&#xA;tvqDwSOJzE5nMlwoFY+Jm5RyVSpXvTd2O5xt+96JpPljTbe5fVrTzBLrFzAJopAJLeWNYbuWN0gA&#xA;UM0cURi/dKp+dcwu0D+5Pw+8NuLnSfavaand+Trm10uWNL2WN1SQ/vEKlz6gHHerJyC+ByPZ+2Ad&#xA;efLfqWRiDOjtdPE/y20rW7rzxZmwjbSJ7OWS41S7SGf0rv8Aeqkqt6z1flCkiIzCis/qKqlq5mkw&#xA;24Td/Y5GTS5IxkZwEBHkd/VvW1+QtM/zYtfMdn5o9a/E2vafKPrOnWsCTwPaPGSEMUkcvFHCyUEq&#xA;ryqteNd8zMWCRjxCPH3+TqZ5sXEYzmcZ6Hajfv7vwHq/kWDULHyVp6ardS3M624kM1zG0UyxSEvF&#xA;HKrvK/OKNlRizVNKnfMPNKMLJPpDfCyB3vPvzP8A+VU6tri6f5t1aS0c2sVzG0bLEskcVxxFukkd&#xA;Lh35OzNGvRW5bfCRDHljOPFE3Es+Ak11dZyfll/hS5i+u3em6UL0AF1mgmE/pgBv3R9QgInoVnrU&#xA;xEbsCxtjMxNsTi4vSfx83p3lg6adHsTpbM+nGOtq7iYMYzWhP1gmX/gsCvLfMX1j9PajLBIrxPcS&#xA;wvLNJ+5VWkdq1HILxPJWOxp23BJYo7S/Md/Yaf6VkVFrEQsQYI7clLfY9IshrUt32p7ZtIZ8Eojj&#xA;BsCve6mem1MZHgMeEm/d+LSd555HW5s5isTRemhnkRY0IEbEtxaVVOwNTQinftgZ8vHMy73YafD4&#xA;cBHuenWLNH5Ms2tiOSWBMTVVl2jFDVeS0zGygGJDnaYA5IiXKw81sW87+ZdTsPMVneJY2GmvLaXV&#xA;rcWx+sMnNXmCPJbRuOahA3psVJX7TUw4MFC/4Rv+OidVqog1GPCfdfuNncNeTZrzUo5L1/Mc+rRR&#xA;N6bwS2dvbG0lKJMVkrEjhuLjb+Iy/DrMF7wse6P6JNENLrM0fRk4T/Wlv/sWXflhJ5ea515NGES+&#xA;hfJDfBLZrZ/rKF/UMlYoebFid9/fLtTLGRHgjw9/6HF0/j3LxJ8fdv8APp1TfzL5h8mWOo+lrltb&#xA;G5lilhWW4SJi1vHGZZwWfpEqVL1+EV36jNHk7QMZSAhKXAQCRXVzxj5b82HeZtV8qeb9I06Hyvr8&#xA;+hyX85ura6015IRcLbCRJR/o01uT8TUep7eIFGWuIEicc/RV8uvx3+DKIjtEkb8u9PvLPmLyTbaT&#xA;YWFzqS6reXUJsjfXVJXvntFW3uFV5Gcy/ElWXk1dzvucs/OAcVxn6avbv+KJgEgCvx3sr8v67omr&#xA;W7SaS3KAPIpIjaMFo5WicioXkOaGjDZuoJBrl0NRGUzDcSAui1mO19HlHnDzd5ru/Ntx5bCyW2ka&#xA;uLq3H1mxUzRR2aMGECrKfrCXZQ8Cw5UfYKaVtJNE/pUQkaoHr07kvupv8CXN/o/k/Sb7S11a0/0K&#xA;3ksRLENSnRSLj63zmTjAJY0ZGHpgg77McTKI+qQj70WAORJ8v0vSBeaje/l1Zyap6yakVigvGu4k&#xA;tZJZ4pPSkk9FW4KszIXVQ9OJySELqmk6Vd+VdFn1ef6pHYkMHlcrHKq1Y29wGjflA3pK7ArT4Rk8&#xA;cMkyRAdLtqy5McKM+XJLfJn+HvMd/ayjXdKv20yKBVtNKv5LiX1UKyKbiUSq8qK8J9MSJ05V3LVH&#xA;hyo7bDm2eNHYE79On9tJ8qn/AJWK7VjpUAKXAc/6L1Cnc03rT298ilKfPsHlG183QatrWnLe3n1O&#xA;KKyXl9YnkKXDN/olkZKetA7I/qiLlxJAb9nBLGJxlEkix02RKVVQ67+73Mf+o6D5d873f1JIG8xX&#xA;tlCk92LKCMzXuoXbI85lRmnEkiI7MnEKQjHkDWhlEmIo0RXy/b3prglvyP8AZ+Azv8uNZ0O80K3s&#xA;dJsjpsdpa2sv6P8ATZVgW5i5rHyp6fNCGVlViVpv1GLKVUKSj80PIs+pTR+ZLG8hs7iwgK3nriKN&#xA;Gt0kWQublgGiMShnqxKbbr3Cxed/lv8Ak/aa5fW2sXeo2FzZWUxN1Fplz9YLvG4kgRpkmmCqqqDS&#xA;tfip0VSSh7zY/o305vS+xxHr+pWnGh68tvGua/ReFv4d9LttycXVAH/Aff8ARXQf8s/Ttme1o6H9&#xA;Cfo6T6n6H1Gvx/VePDlt/vvavTKNTweGeP6WULvZUt/Q+pRcfV9PfjXl6nU9eO+R0nD4Q4brz580&#xA;zu91KL9HepL6XqepX99x58q/5VP45kCllxULuujc31Cqet6la/u+XPr/AJNf4ZOPF0aZcO10vuPq&#xA;31G49T1PS4n1K15Up25Zi6vh8KXH9Nb02wuxTCdT/wCVefX7D9I+p9frJ+i/W4+pXb1Pq9d/Dlw+&#xA;nNNpuDgHh+NwdKpyJXe/DaYf8679Tk/46P1Ov73+89Ktf2v2evjl5v8A2/7ERu9qtNdM+pfXouP1&#xA;71qHj9Z5UpxPXlv8sGDg8cX4vH/S5cjzRK+HpSQ6v/gL6/f+v9Y/SNZPW9D1efKvx8afB16cvoze&#xA;73s4pqt0u/5Bx6Q5/X/W9bavrepX1E9WlPhpzpypv1498AtTSIT/AJV39Wfh9b4+ivT1q8KjjT9m&#xA;v8tdutPi5Y7p2ZZp/wCjP0DZen6v1L6v8Hq8efp8fi9Svw9OuCXmyhzHDz8m1/QlfhpX241/DJRv&#xA;hNfT9jHLXEOP6vPmh4/8KcX9L0OPqt6nH06er+3Wn7fj3zGx+FXp4fhTk4/F/h4vhaI0z9B+vP8A&#xA;o/hz9Y/W/R4f3/f1eG/Px5b5kOMEt1j9E/pKf1PrPrUX1fR+r8adq+p8WaXU/leKXHfTi515X0dl&#xA;g+kfR8eO/sY5Y/8AKvOFj+j68P3v6N+r/o/j1Prehw26158fpyE/yvq4uLpxXxfDi/RbaK2rwvL6&#xA;0Q/+EOVrz+tc9/qVfqnLpv6Xf7P8vbBL8r6r4+nF9Xw4v0Wy22/uvL60/wDKX6I9aX6h9Z/uxX1v&#xA;T4cdqcfT9qU9szNJ4PiS4L463u7+1xtV9I+iv6N/pZBJ6Pq78q96V4/TmxcB03pVHKtf8mvT6MVQ&#xA;uufUP0XJ9d5fVduXDrSv3U8a7U64qhx/hn9BwfWPq/6Jp+6+uceFaNWvrftfarX3y3Fx36Lvyac3&#xA;h1+84avrXP4oLSv+VffpJf0T+j/0jRafVfT9WlH4V4b0+3Svvln73hPPh6tX7nijy4uiIP6I/wAV&#xA;rx9f9JcDz419Lj6Ypyr7dKd8xnLRmo/of1z9erz9MU58/TpzHGn+6/U50pT4shkrhN93T9jKN9Ep&#xA;j/wL9Zm4el9cqPX+36/H1j9r9v0vV6/s+OZObj24u4fL8fFxdP4dHg7z8+qa+Xf8P/oi1/w/6H6H&#xA;9JPqX1Sn1b0qfD6PD4OP+rmOOZ5/b9n7HIRl99S+pXH170/qXpv9a9fj6XpcTz9Tl8PHjXlXamSV&#xA;JPJX+Bf0dN/g76j9R9X9/wDo/wBPh6tB9vh340pXtk53e9fCv0MMdVtfxv8AS//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:e0706c11-9728-9a45-9e18-1e0c0e3758b8</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:e0706c11-9728-9a45-9e18-1e0c0e3758b8</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:09d9e650-dd5b-44a7-b60f-01df95033529</stRef:instanceID>
            <stRef:documentID>xmp.did:57876900-3956-2742-a3cd-fee5762c692f</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:34f71515-7c62-a646-9edc-56802b5aa451</stEvt:instanceID>
                  <stEvt:when>2018-01-11T16:20:07+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e0706c11-9728-9a45-9e18-1e0c0e3758b8</stEvt:instanceID>
                  <stEvt:when>2018-01-30T22:55:33+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
640.896 450 li
640.896 0 li
cp
clp
-.000244141 441.895 mo
-.000244141 450.146 li
640.896 450.146 li
640.896 416.178 li
-.000244141 441.895 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 .45098 .490196 rgb
f
.000320884 306.158 mo
.000320884 423.428 li
640.897 423.428 li
640.897 334.788 li
.000320884 306.158 li
.901961 .831373 .32549 rgb
f
640.896 36.2164 mo
640.896 -.000385815 li
-.000244141 -.000385815 li
-.000244141 18.6944 li
640.896 36.2164 li
cp
1 .45098 .490196 rgb
f
469.038 411.014 mo
449.107 411.014 432.949 394.856 432.949 374.925 cv
432.949 354.993 449.107 338.836 469.038 338.836 cv
488.97 338.836 505.127 354.993 505.127 374.925 cv
505.127 394.856 488.97 411.014 469.038 411.014 cv
.588235 .541176 .211765 rgb
f
467.038 337.836 mo
447.107 337.836 430.948 353.993 430.948 373.925 cv
430.948 393.856 447.107 410.014 467.038 410.014 cv
486.97 410.014 503.127 393.856 503.127 373.925 cv
503.127 353.993 486.97 337.836 467.038 337.836 cv
cp
1 1 1 rgb
f
370.247 411.014 mo
350.316 411.014 334.158 394.856 334.158 374.925 cv
334.158 354.993 350.316 338.836 370.247 338.836 cv
390.179 338.836 406.336 354.993 406.336 374.925 cv
406.336 394.856 390.179 411.014 370.247 411.014 cv
.588235 .541176 .211765 rgb
f
368.247 337.836 mo
348.316 337.836 332.158 353.993 332.158 373.925 cv
332.158 393.856 348.316 410.014 368.247 410.014 cv
388.179 410.014 404.336 393.856 404.336 373.925 cv
404.336 353.993 388.179 337.836 368.247 337.836 cv
cp
1 1 1 rgb
f
271.287 411.014 mo
251.356 411.014 235.199 394.856 235.199 374.925 cv
235.199 354.993 251.356 338.836 271.287 338.836 cv
291.219 338.836 307.376 354.993 307.376 374.925 cv
307.376 394.856 291.219 411.014 271.287 411.014 cv
.588235 .541176 .211765 rgb
f
269.287 337.836 mo
249.356 337.836 233.198 353.993 233.198 373.925 cv
233.198 393.856 249.356 410.014 269.287 410.014 cv
289.219 410.014 305.376 393.856 305.376 373.925 cv
305.376 353.993 289.219 337.836 269.287 337.836 cv
cp
1 1 1 rgb
f
74.5364 411.014 mo
54.6048 411.014 38.4475 394.856 38.4475 374.925 cv
38.4475 354.993 54.6048 338.836 74.5364 338.836 cv
94.468 338.836 110.625 354.993 110.625 374.925 cv
110.625 394.856 94.468 411.014 74.5364 411.014 cv
.588235 .541176 .211765 rgb
f
72.5364 337.836 mo
52.6047 337.836 36.4475 353.993 36.4475 373.925 cv
36.4475 393.856 52.6047 410.014 72.5364 410.014 cv
92.468 410.014 108.625 393.856 108.625 373.925 cv
108.625 353.993 92.468 337.836 72.5364 337.836 cv
cp
1 1 1 rgb
f
566.913 411.014 mo
546.982 411.014 530.824 394.856 530.824 374.925 cv
530.824 354.993 546.982 338.836 566.913 338.836 cv
586.845 338.836 603.003 354.993 603.003 374.925 cv
603.003 394.856 586.845 411.014 566.913 411.014 cv
.588235 .541176 .211765 rgb
f
564.913 337.836 mo
544.982 337.836 528.824 353.993 528.824 373.925 cv
528.824 393.856 544.982 410.014 564.913 410.014 cv
584.845 410.014 601.002 393.856 601.002 373.925 cv
601.002 353.993 584.845 337.836 564.913 337.836 cv
cp
1 1 1 rgb
f
171.411 411.014 mo
151.48 411.014 135.323 394.856 135.323 374.925 cv
135.323 354.993 151.48 338.836 171.411 338.836 cv
191.343 338.836 207.501 354.993 207.501 374.925 cv
207.501 394.856 191.343 411.014 171.411 411.014 cv
.588235 .541176 .211765 rgb
f
169.411 337.836 mo
149.48 337.836 133.323 353.993 133.323 373.925 cv
133.323 393.856 149.48 410.014 169.411 410.014 cv
189.343 410.014 205.5 393.856 205.5 373.925 cv
205.5 353.993 189.343 337.836 169.411 337.836 cv
cp
1 1 1 rgb
f
568.325 350.633 mo
569.239 351.696 569.955 352.705 569.986 353.004 cv
569.913 353.302 568.845 354.042 567.782 354.52 cv
567.627 354.591 567.508 354.729 567.46 354.896 cv
567.448 354.931 567.359 355.236 567.234 355.678 cv
567.156 355.469 567.078 355.254 566.994 355.027 cv
567.531 353.463 568.028 351.732 568.325 350.633 cv
cp
.34902 .756863 1 rgb
f
564.482 359.313 mo
564.618 359.593 564.822 359.832 565.067 360.024 cv
562.44 362.381 556.679 367.616 554.094 374.273 cv
552.197 379.15 551.558 384.594 551.044 388.969 cv
550.626 392.551 550.191 396.252 549.205 396.252 cv
549.194 396.252 li
548.883 396.24 548.615 395.906 548.448 395.631 cv
546.8 392.939 546.788 383.973 550.519 376.051 cv
554.076 368.494 560.614 362.728 563.759 359.958 cv
564.028 359.719 564.267 359.51 564.482 359.313 cv
cp
f
582.669 375.107 mo
586.621 383.505 586.501 392.83 584.675 395.815 cv
584.09 396.776 583.415 396.99 582.949 397.008 cv
582.89 397.008 li
580.855 397.008 580.46 393.683 579.875 388.669 cv
579.368 384.365 578.741 379.005 576.897 374.265 cv
574.365 367.74 568.767 362.738 566.074 360.332 cv
565.961 360.231 565.854 360.129 565.752 360.04 cv
566.236 360.04 566.677 359.873 567.035 359.592 cv
569.661 361.944 575.428 367.179 578.013 373.835 cv
579.906 378.712 580.544 384.156 581.058 388.532 cv
581.482 392.113 581.917 395.815 582.902 395.815 cv
582.914 395.815 li
583.218 395.803 583.487 395.468 583.66 395.194 cv
585.308 392.502 585.32 383.535 581.589 375.614 cv
578.031 368.057 571.489 362.29 568.349 359.52 cv
568.08 359.288 567.841 359.072 567.626 358.876 cv
567.77 358.589 567.853 358.267 567.853 357.926 cv
567.853 357.747 567.829 357.568 567.787 357.401 cv
568.092 357.706 568.575 358.13 569.137 358.625 cv
572.336 361.448 579.004 367.322 582.669 375.107 cv
cp
0 0 0 rgb
f
570.551 352.578 mo
570.551 353.64 568.862 354.595 567.906 355.055 cv
567.811 355.389 567.632 356.01 567.442 356.691 cv
567.327 356.529 567.191 356.38 567.03 356.261 cv
566.898 355.968 566.755 355.622 566.612 355.24 cv
566.737 354.798 566.826 354.494 566.838 354.458 cv
566.886 354.291 567.005 354.154 567.16 354.082 cv
568.223 353.605 569.291 352.864 569.364 352.566 cv
569.333 352.267 568.617 351.258 567.703 350.196 cv
567.406 351.295 566.909 353.026 566.372 354.589 cv
566.163 353.993 565.948 353.342 565.745 352.668 cv
566.152 351.342 566.546 349.945 566.832 348.829 cv
566.886 348.614 567.047 348.453 567.262 348.399 cv
567.471 348.339 567.692 348.405 567.841 348.567 cv
568.659 349.432 570.551 351.551 570.551 352.578 cv
cp
f
567.787 357.401 mo
567.829 357.568 567.853 357.747 567.853 357.926 cv
567.853 358.267 567.77 358.589 567.626 358.876 cv
567.459 358.733 567.304 358.595 567.172 358.47 cv
567.239 358.302 567.274 358.117 567.274 357.926 cv
567.274 357.789 567.256 357.658 567.22 357.532 cv
567.274 357.336 567.327 357.127 567.375 356.929 cv
567.513 357.121 li
567.573 357.192 567.668 357.294 567.787 357.401 cv
cp
f
567.787 357.401 mo
567.668 357.294 567.573 357.192 567.513 357.121 cv
567.375 356.929 li
567.442 356.691 li
567.603 356.9 567.716 357.145 567.787 357.401 cv
cp
f
567.442 356.691 mo
567.375 356.929 li
567.268 356.756 567.155 356.529 567.03 356.261 cv
567.191 356.38 567.327 356.529 567.442 356.691 cv
cp
f
567.626 358.876 mo
567.489 359.156 567.28 359.401 567.035 359.592 cv
566.868 359.443 li
566.612 359.216 li
566.683 359.138 li
566.904 358.965 567.072 358.738 567.172 358.47 cv
567.304 358.595 567.459 358.733 567.626 358.876 cv
cp
f
567.22 357.532 mo
567.256 357.658 567.274 357.789 567.274 357.926 cv
567.274 358.117 567.239 358.302 567.172 358.47 cv
567.018 358.32 li
567.077 358.076 567.149 357.807 567.22 357.532 cv
cp
f
567.375 356.929 mo
567.327 357.127 567.274 357.336 567.22 357.532 cv
567.095 357.049 566.731 356.655 566.265 356.488 cv
566.313 356.297 566.366 356.112 566.414 355.933 cv
566.641 356.005 566.844 356.118 567.03 356.261 cv
567.155 356.529 567.268 356.756 567.375 356.929 cv
cp
f
567.22 357.532 mo
567.149 357.807 567.077 358.076 567.018 358.32 cv
566.868 358.183 566.748 358.064 566.659 357.956 cv
566.659 357.926 li
566.659 357.556 566.439 357.24 566.115 357.097 cv
566.104 357.067 li
566.157 356.876 566.211 356.679 566.265 356.488 cv
566.731 356.655 567.095 357.049 567.22 357.532 cv
cp
f
566.868 359.443 mo
567.035 359.592 li
566.677 359.873 566.236 360.04 565.752 360.04 cv
565.745 360.034 li
566.163 359.658 566.432 359.407 566.612 359.216 cv
566.868 359.443 li
cp
f
567.018 358.32 mo
567.172 358.47 li
567.072 358.738 566.904 358.965 566.683 359.138 cv
566.832 358.965 566.898 358.846 566.928 358.702 cv
566.957 358.583 566.988 358.458 567.018 358.32 cv
cp
f
567.018 358.32 mo
566.988 358.458 566.957 358.583 566.928 358.702 cv
566.898 358.846 566.832 358.965 566.683 359.138 cv
566.594 359.198 li
566.42 359.043 566.259 358.894 566.115 358.762 cv
566.426 358.625 566.648 358.315 566.659 357.956 cv
566.748 358.064 566.868 358.183 567.018 358.32 cv
cp
f
566.683 359.138 mo
566.612 359.216 li
566.594 359.198 li
566.683 359.138 li
cp
f
566.659 357.926 mo
566.659 357.956 li
566.587 357.873 li
566.439 357.688 566.278 357.425 566.115 357.097 cv
566.439 357.24 566.659 357.556 566.659 357.926 cv
cp
f
566.587 357.873 mo
566.659 357.956 li
566.648 358.315 566.426 358.625 566.115 358.762 cv
565.948 358.613 565.818 358.482 565.74 358.398 cv
565.781 358.35 li
565.806 358.261 li
565.961 358.231 566.08 358.093 566.08 357.926 cv
566.08 357.819 566.027 357.723 565.948 357.658 cv
565.996 357.473 566.05 357.276 566.098 357.085 cv
566.115 357.097 li
566.278 357.425 566.439 357.688 566.587 357.873 cv
cp
f
566.612 355.24 mo
566.755 355.622 566.898 355.968 567.03 356.261 cv
566.844 356.118 566.641 356.005 566.414 355.933 cv
566.486 355.682 566.552 355.443 566.612 355.24 cv
cp
f
566.612 359.216 mo
566.432 359.407 566.163 359.658 565.745 360.034 cv
565.316 359.651 565.047 359.401 564.874 359.21 cv
564.886 359.198 li
565.125 359.365 565.423 359.461 565.74 359.461 cv
566.056 359.461 566.349 359.365 566.594 359.198 cv
566.612 359.216 li
cp
f
566.612 355.24 mo
566.552 355.443 566.486 355.682 566.414 355.933 cv
566.259 355.879 566.092 355.843 565.919 355.831 cv
566.074 355.443 566.224 355.026 566.372 354.589 cv
566.456 354.817 566.533 355.031 566.612 355.24 cv
cp
f
566.414 355.933 mo
566.366 356.112 566.313 356.297 566.265 356.488 cv
566.122 356.434 565.961 356.398 565.793 356.392 cv
565.745 356.273 li
565.806 356.13 565.865 355.986 565.919 355.831 cv
566.092 355.843 566.259 355.879 566.414 355.933 cv
cp
f
565.745 352.668 mo
565.948 353.342 566.163 353.993 566.372 354.589 cv
566.224 355.026 566.074 355.443 565.919 355.831 cv
565.74 355.819 li
565.567 355.831 li
565.411 355.437 565.262 355.013 565.107 354.578 cv
565.322 353.986 565.537 353.336 565.745 352.668 cv
cp
f
566.265 356.488 mo
566.211 356.679 566.157 356.876 566.104 357.067 cv
566.002 356.864 565.901 356.637 565.793 356.392 cv
565.961 356.398 566.122 356.434 566.265 356.488 cv
cp
f
566.115 358.762 mo
566.259 358.894 566.42 359.043 566.594 359.198 cv
566.349 359.365 566.056 359.461 565.74 359.461 cv
565.423 359.461 565.125 359.365 564.886 359.198 cv
565.06 359.043 565.221 358.894 565.364 358.762 cv
565.477 358.816 565.609 358.846 565.74 358.846 cv
565.871 358.846 566.002 358.816 566.115 358.762 cv
cp
f
566.104 357.067 mo
566.115 357.097 li
566.098 357.085 li
566.104 357.067 li
cp
f
566.104 357.067 mo
566.098 357.085 li
565.985 357.037 565.865 357.013 565.74 357.013 cv
565.615 357.013 565.49 357.037 565.382 357.091 cv
565.376 357.079 li
565.484 356.876 565.584 356.643 565.692 356.392 cv
565.698 356.392 li
565.74 356.392 li
565.793 356.392 li
565.901 356.637 566.002 356.864 566.104 357.067 cv
cp
f
566.098 357.085 mo
566.05 357.276 565.996 357.473 565.948 357.658 cv
565.74 357.586 li
565.531 357.664 li
565.484 357.479 565.43 357.282 565.382 357.091 cv
565.49 357.037 565.615 357.013 565.74 357.013 cv
565.865 357.013 565.985 357.037 566.098 357.085 cv
cp
f
565.948 357.658 mo
566.027 357.723 566.08 357.819 566.08 357.926 cv
566.08 358.093 565.961 358.231 565.806 358.261 cv
565.847 358.076 565.895 357.867 565.948 357.658 cv
cp
f
566.115 358.762 mo
566.002 358.816 565.871 358.846 565.74 358.846 cv
565.609 358.846 565.477 358.816 565.364 358.762 cv
565.531 358.613 565.662 358.482 565.74 358.398 cv
565.818 358.482 565.948 358.613 566.115 358.762 cv
cp
f
565.74 355.819 mo
565.919 355.831 li
565.865 355.986 565.806 356.13 565.745 356.273 cv
565.686 356.13 565.626 355.986 565.567 355.831 cv
565.74 355.819 li
cp
f
565.806 358.261 mo
565.781 358.35 li
565.74 358.398 li
565.698 358.35 li
565.674 358.261 li
565.74 358.267 li
565.806 358.261 li
cp
f
565.745 356.273 mo
565.793 356.392 li
565.74 356.392 li
565.698 356.392 li
565.745 356.273 li
cp
f
565.745 360.034 mo
565.752 360.04 li
565.74 360.04 li
565.745 360.034 li
cp
f
565.745 356.273 mo
565.698 356.392 li
565.692 356.392 li
565.525 356.398 565.364 356.428 565.214 356.488 cv
565.167 356.297 565.114 356.112 565.066 355.933 cv
565.227 355.879 565.394 355.843 565.567 355.831 cv
565.626 355.986 565.686 356.13 565.745 356.273 cv
cp
f
565.745 360.034 mo
565.74 360.04 li
565.25 360.04 564.803 359.873 564.445 359.586 cv
564.612 359.443 li
564.874 359.21 li
565.047 359.401 565.316 359.651 565.745 360.034 cv
cp
f
565.698 358.35 mo
565.74 358.398 li
565.662 358.482 565.531 358.613 565.364 358.762 cv
565.053 358.625 564.838 358.315 564.826 357.95 cv
564.898 357.873 li
565.047 357.688 565.208 357.425 565.369 357.097 cv
565.382 357.091 li
565.43 357.282 565.484 357.479 565.531 357.664 cv
565.453 357.723 565.4 357.819 565.4 357.926 cv
565.4 358.093 565.519 358.231 565.674 358.261 cv
565.698 358.35 li
cp
f
565.74 360.04 mo
565.638 360.129 565.531 360.225 565.411 360.332 cv
562.719 362.738 557.12 367.74 554.583 374.265 cv
552.744 379.005 552.117 384.365 551.611 388.669 cv
551.019 393.683 550.631 397.008 548.596 397.008 cv
548.53 397.008 li
548.071 396.99 547.396 396.776 546.805 395.815 cv
544.978 392.83 544.859 383.505 548.817 375.107 cv
552.482 367.322 559.144 361.448 562.349 358.625 cv
562.91 358.13 563.394 357.706 563.698 357.401 cv
563.656 357.568 563.633 357.747 563.633 357.926 cv
563.633 358.267 563.716 358.589 563.86 358.876 cv
563.645 359.072 563.406 359.281 563.137 359.52 cv
559.991 362.29 553.454 368.057 549.897 375.614 cv
546.166 383.535 546.178 392.502 547.825 395.194 cv
547.992 395.468 548.261 395.803 548.572 395.815 cv
548.583 395.815 li
549.569 395.815 550.004 392.113 550.422 388.532 cv
550.936 384.156 551.574 378.712 553.473 373.835 cv
556.058 367.179 561.818 361.944 564.445 359.586 cv
564.803 359.873 565.25 360.04 565.74 360.04 cv
cp
f
565.745 352.668 mo
565.537 353.336 565.322 353.986 565.107 354.578 cv
564.57 353.014 564.08 351.295 563.781 350.196 cv
562.863 351.258 562.147 352.274 562.122 352.584 cv
562.188 352.87 563.256 353.605 564.32 354.082 cv
564.481 354.154 564.6 354.291 564.648 354.458 cv
564.654 354.494 564.749 354.804 564.868 355.246 cv
564.725 355.628 564.582 355.981 564.445 356.273 cv
564.289 356.392 564.152 356.536 564.038 356.697 cv
563.854 356.016 563.68 355.389 563.579 355.055 cv
562.617 354.595 560.929 353.64 560.929 352.578 cv
560.929 351.551 562.826 349.432 563.639 348.567 cv
563.788 348.405 564.015 348.339 564.224 348.399 cv
564.433 348.453 564.6 348.614 564.654 348.829 cv
564.946 349.945 565.328 351.342 565.745 352.668 cv
cp
f
565.531 357.664 mo
565.584 357.873 565.632 358.076 565.674 358.261 cv
565.519 358.231 565.4 358.093 565.4 357.926 cv
565.4 357.819 565.453 357.723 565.531 357.664 cv
cp
f
565.692 356.392 mo
565.584 356.643 565.484 356.876 565.376 357.079 cv
565.328 356.882 565.275 356.685 565.214 356.488 cv
565.364 356.428 565.525 356.398 565.692 356.392 cv
cp
f
565.376 357.079 mo
565.382 357.091 li
565.369 357.097 li
565.376 357.079 li
cp
f
565.376 357.079 mo
565.369 357.097 li
565.047 357.24 564.826 357.556 564.826 357.926 cv
564.826 357.95 li
564.737 358.058 564.612 358.183 564.462 358.326 cv
564.403 358.082 564.331 357.807 564.259 357.532 cv
564.391 357.049 564.749 356.655 565.214 356.488 cv
565.275 356.685 565.328 356.882 565.376 357.079 cv
cp
f
565.066 355.933 mo
565.114 356.112 565.167 356.297 565.214 356.488 cv
564.749 356.655 564.391 357.049 564.259 357.532 cv
564.205 357.336 564.152 357.127 564.104 356.929 cv
564.212 356.762 564.325 356.536 564.445 356.273 cv
564.629 356.124 564.838 356.01 565.066 355.933 cv
cp
f
565.107 354.578 mo
565.262 355.013 565.411 355.437 565.567 355.831 cv
565.394 355.843 565.227 355.879 565.066 355.933 cv
564.993 355.682 564.928 355.449 564.868 355.246 cv
564.952 355.031 565.03 354.81 565.107 354.578 cv
cp
f
564.868 355.246 mo
564.928 355.449 564.993 355.682 565.066 355.933 cv
564.838 356.01 564.629 356.124 564.445 356.273 cv
564.582 355.981 564.725 355.628 564.868 355.246 cv
cp
f
565.369 357.097 mo
565.208 357.425 565.047 357.688 564.898 357.873 cv
564.826 357.95 li
564.826 357.926 li
564.826 357.556 565.047 357.24 565.369 357.097 cv
cp
f
565.364 358.762 mo
565.221 358.894 565.06 359.043 564.886 359.198 cv
564.803 359.138 li
564.648 358.965 564.582 358.846 564.552 358.702 cv
564.529 358.589 564.498 358.464 564.462 358.332 cv
564.462 358.326 li
564.612 358.183 564.737 358.058 564.826 357.95 cv
564.838 358.315 565.053 358.625 565.364 358.762 cv
cp
f
564.886 359.198 mo
564.874 359.21 li
564.803 359.138 li
564.886 359.198 li
cp
f
564.803 359.138 mo
564.874 359.21 li
564.612 359.443 li
564.445 359.586 li
564.199 359.395 563.996 359.156 563.86 358.876 cv
564.027 358.733 564.176 358.595 564.307 358.47 cv
564.408 358.738 564.582 358.965 564.803 359.138 cv
cp
f
564.803 359.138 mo
564.582 358.965 564.408 358.738 564.307 358.47 cv
564.462 358.332 li
564.498 358.464 564.529 358.589 564.552 358.702 cv
564.582 358.846 564.648 358.965 564.803 359.138 cv
cp
f
564.462 358.326 mo
564.462 358.332 li
564.307 358.47 li
564.241 358.302 564.205 358.117 564.205 357.926 cv
564.205 357.789 564.224 357.658 564.259 357.532 cv
564.331 357.807 564.403 358.082 564.462 358.326 cv
cp
f
564.038 356.697 mo
564.152 356.536 564.289 356.392 564.445 356.273 cv
564.325 356.536 564.212 356.762 564.104 356.929 cv
564.038 356.697 li
cp
f
564.259 357.532 mo
564.224 357.658 564.205 357.789 564.205 357.926 cv
564.205 358.117 564.241 358.302 564.307 358.47 cv
564.176 358.595 564.027 358.733 563.86 358.876 cv
563.716 358.589 563.633 358.267 563.633 357.926 cv
563.633 357.747 563.656 357.568 563.698 357.401 cv
563.818 357.294 563.913 357.192 563.973 357.121 cv
564.104 356.929 li
564.152 357.127 564.205 357.336 564.259 357.532 cv
cp
f
564.038 356.697 mo
564.104 356.929 li
563.973 357.121 li
563.913 357.192 563.818 357.294 563.698 357.401 cv
563.764 357.145 563.883 356.906 564.038 356.697 cv
cp
f
196.45 370.703 mo
196.44 370.923 li
196.424 371.075 li
196.398 371.228 li
196.351 371.433 li
196.309 371.58 li
196.251 371.753 li
196.026 372.331 195.62 372.908 195.032 373.475 cv
190.738 370.089 181.353 367.914 170.871 367.914 cv
160.395 367.914 151.011 370.089 146.71 373.475 cv
146.295 373.082 145.975 372.677 145.743 372.273 cv
145.649 372.1 li
145.565 371.926 li
145.497 371.753 li
145.429 371.58 145.381 371.401 145.35 371.228 cv
145.323 371.075 li
145.308 370.923 li
145.297 370.703 li
145.297 366.003 157.008 362.033 170.871 362.033 cv
184.735 362.033 196.45 366.003 196.45 370.703 cv
cp
.34902 .756863 1 rgb
f
196.861 370.472 mo
196.865 374.179 196.865 379.262 193.384 383.469 cv
191.199 386.105 187.975 388.022 183.648 389.24 cv
183.873 388.841 184.041 388.41 184.152 387.964 cv
187.88 386.793 190.69 385.07 192.575 382.797 cv
195.611 379.131 195.799 374.63 195.81 371.16 cv
195.962 370.729 196.041 370.288 196.041 369.847 cv
196.041 368.549 195.379 367.321 194.171 366.202 cv
192.002 363.85 187.734 362.132 181.715 361.187 cv
178.055 360.51 173.875 360.127 169.411 360.127 cv
164.958 360.127 160.788 360.505 157.134 361.182 cv
151.1 362.127 146.81 363.85 144.641 366.213 cv
143.444 367.331 142.787 368.555 142.787 369.847 cv
142.787 370.288 142.865 370.729 143.018 371.16 cv
143.024 374.63 143.212 379.131 146.253 382.797 cv
149.535 386.756 155.653 389.056 164.486 389.655 cv
166.25 390.038 168.236 390.374 170.372 390.547 cv
170.441 390.658 170.514 390.763 170.593 390.862 cv
170.204 390.862 169.811 390.868 169.411 390.868 cv
157.412 390.868 149.572 388.447 145.445 383.469 cv
141.957 379.262 141.963 374.179 141.963 370.472 cv
141.968 370.156 li
141.968 363.351 152.224 359.292 169.411 359.292 cv
186.599 359.292 196.861 363.351 196.861 370.156 cv
196.861 370.472 li
cp
0 0 0 rgb
f
196.041 369.847 mo
196.041 370.288 195.962 370.729 195.81 371.16 cv
195.726 371.391 li
195.657 371.538 195.589 371.685 195.511 371.826 cv
195.368 372.073 li
195.238 372.283 195.09 372.488 194.928 372.693 cv
194.644 373.04 194.314 373.376 193.935 373.712 cv
193.908 373.733 li
193.709 373.885 193.437 373.88 193.247 373.712 cv
193.095 373.58 192.938 373.449 192.764 373.323 cv
193.778 372.562 194.476 371.748 194.791 370.897 cv
194.849 370.724 li
194.891 370.577 li
194.938 370.372 li
194.964 370.219 li
194.98 370.068 li
194.99 369.847 li
194.99 365.147 183.275 361.177 169.411 361.177 cv
155.548 361.177 143.837 365.147 143.837 369.847 cv
143.848 370.068 li
143.864 370.219 li
143.89 370.372 li
143.921 370.545 143.969 370.724 144.037 370.897 cv
144.106 371.07 li
144.19 371.244 li
144.283 371.417 li
144.652 372.084 145.255 372.719 146.064 373.323 cv
145.891 373.449 145.733 373.58 145.581 373.712 cv
145.481 373.796 145.355 373.843 145.235 373.843 cv
145.124 373.843 145.008 373.801 144.919 373.733 cv
144.893 373.712 li
144.515 373.376 144.184 373.04 143.901 372.693 cv
143.738 372.488 143.591 372.283 143.459 372.073 cv
143.307 371.811 li
143.234 371.674 143.165 371.532 143.108 371.391 cv
143.018 371.16 li
142.865 370.729 142.787 370.288 142.787 369.847 cv
142.787 368.555 143.444 367.331 144.641 366.213 cv
144.762 366.103 144.882 365.998 145.014 365.887 cv
145.365 365.593 145.754 365.304 146.185 365.026 cv
146.284 364.963 146.384 364.9 146.484 364.837 cv
147.603 364.144 148.952 363.508 150.501 362.941 cv
150.769 362.847 151.042 362.747 151.321 362.658 cv
151.61 362.558 151.908 362.464 152.208 362.374 cv
152.429 362.306 152.655 362.237 152.88 362.174 cv
153.048 362.127 153.216 362.08 153.384 362.033 cv
153.62 361.97 153.857 361.907 154.093 361.849 cv
154.729 361.686 155.385 361.539 156.057 361.397 cv
156.189 361.366 156.32 361.339 156.451 361.318 cv
156.677 361.271 156.903 361.229 157.134 361.182 cv
160.788 360.505 164.958 360.127 169.411 360.127 cv
173.875 360.127 178.055 360.51 181.715 361.187 cv
182.13 361.266 182.534 361.345 182.939 361.434 cv
183.206 361.486 183.475 361.549 183.732 361.608 cv
183.868 361.639 li
184.157 361.707 184.446 361.776 184.73 361.849 cv
185.055 361.928 185.375 362.012 185.686 362.101 cv
186.946 362.453 188.112 362.841 189.172 363.267 cv
189.572 363.424 189.954 363.592 190.323 363.76 cv
190.448 363.818 190.569 363.876 190.685 363.934 cv
191.283 364.223 191.84 364.522 192.344 364.837 cv
192.528 364.947 192.706 365.063 192.874 365.178 cv
193.079 365.315 193.279 365.462 193.462 365.609 cv
193.636 365.74 193.799 365.872 193.956 366.008 cv
194.171 366.202 li
195.379 367.321 196.041 368.549 196.041 369.847 cv
cp
f
193.573 372.619 mo
194.161 372.052 194.566 371.475 194.791 370.897 cv
194.476 371.748 193.778 372.562 192.764 373.323 cv
188.62 370.188 179.389 368.109 169.411 368.109 cv
159.434 368.109 150.202 370.188 146.064 373.323 cv
145.255 372.719 144.652 372.084 144.283 371.417 cv
144.515 371.821 144.835 372.226 145.25 372.619 cv
149.551 369.233 158.935 367.058 169.411 367.058 cv
179.893 367.058 189.278 369.233 193.573 372.619 cv
cp
f
194.928 372.693 mo
194.65 373.04 194.319 373.381 193.935 373.712 cv
194.314 373.376 194.644 373.04 194.928 372.693 cv
cp
f
193.462 365.609 mo
193.636 365.735 193.799 365.872 193.956 366.008 cv
193.799 365.872 193.636 365.74 193.462 365.609 cv
cp
f
193.247 373.712 mo
193.437 373.88 193.709 373.885 193.908 373.733 cv
191.856 375.492 188.443 376.973 184.115 377.997 cv
183.994 377.645 183.826 377.319 183.616 377.015 cv
187.575 376.096 190.78 374.815 192.764 373.323 cv
192.938 373.449 193.095 373.58 193.247 373.712 cv
cp
f
192.874 365.178 mo
192.706 365.063 192.528 364.947 192.344 364.837 cv
192.528 364.947 192.701 365.063 192.874 365.178 cv
cp
f
190.685 363.934 mo
190.569 363.876 190.448 363.818 190.323 363.76 cv
190.443 363.818 190.569 363.871 190.685 363.934 cv
cp
f
185.686 362.101 mo
186.946 362.447 188.112 362.841 189.172 363.267 cv
188.112 362.841 186.946 362.453 185.686 362.101 cv
cp
f
185.686 362.101 mo
185.375 362.012 185.055 361.928 184.73 361.849 cv
185.055 361.928 185.375 362.012 185.686 362.101 cv
cp
f
185.507 382.991 mo
185.507 383.679 184.977 384.267 184.299 384.351 cv
184.31 383.248 li
184.394 383.191 184.456 383.096 184.456 382.991 cv
184.399 382.844 li
184.315 382.807 li
184.325 381.752 li
184.619 381.762 184.893 381.872 185.108 382.072 cv
185.365 382.308 185.507 382.634 185.507 382.991 cv
cp
f
184.73 361.849 mo
184.446 361.776 184.157 361.707 183.868 361.639 cv
184.157 361.702 184.446 361.776 184.73 361.849 cv
cp
f
184.115 377.997 mo
184.273 378.448 184.352 378.926 184.346 379.43 cv
184.325 381.752 li
184.157 381.752 li
183.574 381.799 li
183.511 381.142 183.416 380.486 183.29 379.835 cv
183.296 379.42 li
183.296 379 183.223 378.595 183.075 378.233 cv
183.427 378.16 183.774 378.081 184.115 377.997 cv
cp
f
184.325 381.752 mo
184.315 382.807 li
184.268 382.797 li
184.246 382.802 li
183.653 382.854 li
183.637 382.503 183.606 382.151 183.574 381.799 cv
184.157 381.752 li
184.325 381.752 li
cp
f
184.315 382.807 mo
184.31 383.248 li
184.157 383.311 li
183.674 383.353 li
183.669 383.185 183.663 383.017 183.653 382.854 cv
184.246 382.802 li
184.268 382.797 li
184.315 382.807 li
cp
f
184.31 383.248 mo
184.299 384.351 li
184.246 384.356 li
183.685 384.403 li
183.69 384.051 183.685 383.7 183.674 383.353 cv
184.157 383.311 li
184.31 383.248 li
cp
f
184.299 384.351 mo
184.273 386.95 li
184.268 387.297 184.226 387.633 184.152 387.964 cv
183.889 388.048 183.627 388.127 183.354 388.2 cv
183.564 386.929 183.679 385.664 183.685 384.403 cv
184.246 384.356 li
184.299 384.351 li
cp
f
183.354 388.2 mo
183.627 388.127 183.889 388.048 184.152 387.964 cv
184.041 388.41 183.873 388.841 183.648 389.24 cv
183.443 389.303 183.233 389.356 183.023 389.408 cv
183.102 389.339 183.159 389.24 183.186 389.13 cv
183.248 388.82 183.307 388.51 183.354 388.2 cv
cp
f
183.732 361.608 mo
183.475 361.549 183.206 361.486 182.939 361.434 cv
183.206 361.486 183.469 361.545 183.732 361.608 cv
cp
f
183.616 377.015 mo
183.826 377.319 183.994 377.645 184.115 377.997 cv
183.774 378.081 183.427 378.16 183.075 378.233 cv
182.996 378.018 182.892 377.818 182.76 377.634 cv
182.755 377.624 li
182.666 377.498 182.566 377.377 182.45 377.267 cv
182.844 377.188 183.239 377.099 183.616 377.015 cv
cp
f
183.674 383.353 mo
183.685 383.7 183.69 384.051 183.685 384.403 cv
183.248 384.44 li
183.259 383.39 li
183.674 383.353 li
cp
f
183.248 384.44 mo
183.685 384.403 li
183.679 385.664 183.564 386.929 183.354 388.2 cv
183.217 388.242 183.075 388.279 182.934 388.316 cv
183.117 387.88 183.217 387.418 183.223 386.94 cv
183.248 384.44 li
cp
f
183.653 382.854 mo
183.663 383.017 183.669 383.185 183.674 383.353 cv
183.259 383.39 li
183.265 382.886 li
183.653 382.854 li
cp
f
183.653 382.854 mo
183.265 382.886 li
183.275 381.825 li
183.574 381.799 li
183.606 382.151 183.637 382.503 183.653 382.854 cv
cp
f
183.023 389.408 mo
183.233 389.356 183.443 389.303 183.648 389.24 cv
182.87 390.61 181.458 391.624 179.851 391.792 cv
174.222 392.364 li
174.064 392.38 173.911 392.391 173.76 392.391 cv
172.736 392.391 171.785 392.034 171.05 391.361 cv
170.882 391.209 170.73 391.041 170.593 390.862 cv
171.092 390.852 171.585 390.841 172.069 390.826 cv
172.641 391.225 173.355 391.398 174.112 391.319 cv
179.746 390.747 li
180.566 390.663 181.322 390.301 181.92 389.755 cv
182.214 389.686 182.514 389.613 182.808 389.534 cv
183.023 389.408 li
cp
f
183.574 381.799 mo
183.275 381.825 li
183.29 379.835 li
183.416 380.486 183.511 381.142 183.574 381.799 cv
cp
f
183.354 388.2 mo
183.307 388.51 183.248 388.82 183.186 389.13 cv
183.159 389.24 183.102 389.339 183.023 389.408 cv
182.698 389.497 182.366 389.581 182.025 389.655 cv
182.413 389.276 182.729 388.82 182.934 388.316 cv
183.075 388.279 183.217 388.242 183.354 388.2 cv
cp
f
183.29 379.835 mo
183.275 381.825 li
182.524 381.893 li
182.413 380.759 182.219 379.635 181.941 378.517 cv
181.642 378.559 181.311 378.601 180.948 378.643 cv
181.631 378.527 182.298 378.396 182.949 378.259 cv
183.086 378.784 183.201 379.31 183.29 379.835 cv
cp
f
183.275 381.825 mo
183.265 382.886 li
182.608 382.943 li
182.587 382.592 182.561 382.24 182.524 381.893 cv
183.275 381.825 li
cp
f
183.265 382.886 mo
183.259 383.39 li
182.629 383.443 li
182.624 383.279 182.614 383.111 182.608 382.943 cv
183.265 382.886 li
cp
f
183.259 383.39 mo
183.248 384.44 li
182.634 384.493 li
182.64 384.141 182.64 383.794 182.629 383.443 cv
183.259 383.39 li
cp
f
183.248 384.44 mo
183.223 386.94 li
183.217 387.418 183.117 387.88 182.934 388.316 cv
182.708 388.379 182.477 388.437 182.24 388.494 cv
182.488 387.16 182.618 385.821 182.634 384.493 cv
183.248 384.44 li
cp
f
183.054 376.385 mo
183.265 376.579 183.453 376.789 183.616 377.015 cv
183.239 377.099 182.844 377.188 182.45 377.267 cv
182.351 377.162 li
181.726 376.595 180.891 376.332 179.992 376.427 cv
174.364 376.999 li
173.345 377.104 172.426 377.645 171.785 378.417 cv
171.381 378.448 170.977 378.48 170.567 378.511 cv
170.456 378.511 li
171.229 377.141 172.647 376.122 174.253 375.954 cv
179.888 375.381 li
180.045 375.366 180.203 375.356 180.355 375.356 cv
181.379 375.356 182.324 375.713 183.054 376.385 cv
cp
f
183.075 378.233 mo
182.949 378.259 li
182.918 378.102 182.876 377.949 182.834 377.792 cv
182.76 377.634 li
182.892 377.818 182.996 378.018 183.075 378.233 cv
cp
f
182.834 377.792 mo
182.876 377.949 182.918 378.102 182.949 378.259 cv
182.298 378.396 181.631 378.527 180.948 378.643 cv
178.533 378.926 174.863 379.231 171.134 379.52 cv
171.281 379.147 171.481 378.795 171.733 378.48 cv
174.763 378.385 177.656 378.102 180.313 377.661 cv
180.392 377.65 li
181.122 377.571 181.746 377.493 182.245 377.414 cv
182.45 377.382 182.645 377.466 182.755 377.624 cv
182.76 377.634 li
182.834 377.792 li
cp
f
183.023 389.408 mo
182.808 389.534 li
182.514 389.613 182.214 389.686 181.92 389.755 cv
182.025 389.655 li
182.366 389.581 182.698 389.497 183.023 389.408 cv
cp
f
182.629 383.443 mo
182.64 383.794 182.64 384.141 182.634 384.493 cv
180.917 384.64 li
180.802 384.645 li
180.487 384.645 180.193 384.535 179.961 384.325 cv
179.709 384.089 179.568 383.763 179.568 383.406 cv
179.568 382.697 180.119 382.098 180.827 382.035 cv
182.524 381.893 li
182.561 382.24 182.587 382.592 182.608 382.943 cv
180.917 383.086 li
180.754 383.096 180.617 383.248 180.617 383.406 cv
180.676 383.547 li
180.827 383.595 li
182.629 383.443 li
cp
f
182.45 377.267 mo
182.566 377.377 182.666 377.498 182.755 377.624 cv
182.645 377.466 182.45 377.382 182.245 377.414 cv
181.746 377.493 181.122 377.571 180.392 377.65 cv
181.096 377.535 181.783 377.409 182.45 377.267 cv
cp
f
182.934 388.316 mo
182.729 388.82 182.413 389.276 182.025 389.655 cv
179.899 390.143 177.535 390.484 174.92 390.673 cv
174.521 390.689 174.127 390.694 173.739 390.694 cv
173.093 390.694 172.457 390.679 171.832 390.647 cv
171.759 390.584 li
171.507 390.359 171.307 390.09 171.16 389.797 cv
172.3 389.776 173.403 389.723 174.463 389.65 cv
176.937 389.597 179.546 389.293 182.219 388.599 cv
182.24 388.494 li
182.477 388.437 182.708 388.379 182.934 388.316 cv
cp
f
182.24 388.494 mo
182.219 388.599 li
179.546 389.293 176.937 389.597 174.463 389.65 cv
177.346 389.445 179.946 389.061 182.24 388.494 cv
cp
f
182.025 389.655 mo
181.92 389.755 li
179.526 390.327 177.167 390.605 174.92 390.673 cv
177.535 390.484 179.899 390.143 182.025 389.655 cv
cp
f
171.785 378.417 mo
174.999 378.165 178.103 377.907 180.313 377.661 cv
177.656 378.102 174.763 378.385 171.733 378.48 cv
171.785 378.417 li
cp
f
171.134 379.52 mo
174.863 379.231 178.533 378.926 180.948 378.643 cv
177.955 379.157 174.642 379.472 171.123 379.551 cv
171.134 379.52 li
cp
f
173.739 390.694 mo
174.127 390.694 174.521 390.689 174.92 390.673 cv
174.001 390.747 173.051 390.795 172.069 390.826 cv
171.832 390.647 li
172.457 390.679 173.093 390.694 173.739 390.694 cv
cp
f
171.044 389.571 mo
172.148 389.644 173.292 389.676 174.463 389.65 cv
173.403 389.723 172.3 389.776 171.16 389.797 cv
171.044 389.571 li
cp
f
171.832 390.647 mo
172.069 390.826 li
171.585 390.841 171.092 390.852 170.593 390.862 cv
170.514 390.763 170.441 390.658 170.372 390.547 cv
170.85 390.589 171.339 390.626 171.832 390.647 cv
cp
f
171.759 390.584 mo
171.832 390.647 li
171.339 390.626 170.85 390.589 170.372 390.547 cv
170.226 390.317 170.105 390.069 170.015 389.812 cv
170.404 389.812 170.782 389.807 171.16 389.797 cv
171.307 390.09 171.507 390.359 171.759 390.584 cv
cp
f
171.785 378.417 mo
171.733 378.48 li
171.349 378.496 170.96 378.506 170.567 378.511 cv
170.977 378.48 171.381 378.448 171.785 378.417 cv
cp
f
171.733 378.48 mo
171.481 378.795 171.281 379.147 171.134 379.52 cv
170.945 379.535 170.756 379.551 170.567 379.562 cv
170.383 379.567 170.199 379.567 170.015 379.567 cv
170.12 379.205 170.268 378.853 170.451 378.522 cv
170.567 378.511 li
170.96 378.506 171.349 378.496 171.733 378.48 cv
cp
f
171.134 379.52 mo
171.123 379.551 li
170.94 379.556 170.756 379.562 170.567 379.562 cv
170.756 379.551 170.945 379.535 171.134 379.52 cv
cp
f
171.044 389.571 mo
171.16 389.797 li
170.782 389.807 170.404 389.812 170.015 389.812 cv
169.973 389.702 169.937 389.592 169.906 389.476 cv
170.278 389.513 170.661 389.545 171.044 389.571 cv
cp
f
171.123 379.551 mo
170.971 379.95 170.887 380.37 170.882 380.806 cv
170.814 388.326 li
170.814 388.773 170.892 389.193 171.044 389.571 cv
170.661 389.545 170.278 389.513 169.906 389.476 cv
169.811 389.109 169.758 388.72 169.763 388.321 cv
169.831 380.796 li
169.837 380.391 169.895 379.992 170.005 379.609 cv
170.189 379.593 170.377 379.577 170.567 379.562 cv
170.756 379.562 170.94 379.556 171.123 379.551 cv
cp
f
170.567 378.511 mo
170.451 378.522 li
170.456 378.511 li
170.567 378.511 li
cp
f
170.567 379.562 mo
170.377 379.577 170.189 379.593 170.005 379.609 cv
170.015 379.567 li
170.199 379.567 170.383 379.567 170.567 379.562 cv
cp
f
170.456 378.511 mo
170.451 378.522 li
169.522 378.59 168.587 378.664 167.679 378.732 cv
165.61 378.89 163.593 379.042 161.839 379.184 cv
154.151 378.385 147.996 376.374 144.919 373.733 cv
145.008 373.801 145.124 373.843 145.235 373.843 cv
145.355 373.843 145.481 373.796 145.581 373.712 cv
145.733 373.58 145.891 373.449 146.064 373.323 cv
150.102 376.353 159.166 378.522 169.411 378.522 cv
169.763 378.522 170.11 378.522 170.456 378.511 cv
cp
f
170.451 378.522 mo
170.268 378.853 170.12 379.205 170.015 379.567 cv
169.816 379.572 169.616 379.572 169.411 379.572 cv
166.77 379.572 164.229 379.436 161.839 379.184 cv
163.593 379.042 165.61 378.89 167.679 378.732 cv
168.587 378.664 169.522 378.59 170.451 378.522 cv
cp
f
170.015 389.812 mo
170.105 390.069 170.226 390.317 170.372 390.547 cv
168.236 390.374 166.25 390.038 164.486 389.655 cv
166.045 389.765 167.684 389.818 169.411 389.818 cv
169.616 389.818 169.816 389.818 170.015 389.812 cv
cp
f
170.015 379.567 mo
170.005 379.609 li
169.248 379.667 168.497 379.719 167.757 379.777 cv
163.383 380.108 159.25 380.423 157.37 380.665 cv
156.335 380.801 155.422 381.988 155.29 383.369 cv
155.228 384.089 155.306 385.848 157.49 386.556 cv
157.701 386.625 157.938 386.704 158.199 386.793 cv
160.563 387.581 164.753 388.977 169.906 389.476 cv
169.937 389.592 169.973 389.702 170.015 389.812 cv
169.816 389.818 169.616 389.818 169.411 389.818 cv
167.684 389.818 166.045 389.765 164.486 389.655 cv
161.592 389.03 159.292 388.263 157.864 387.785 cv
157.607 387.701 157.375 387.623 157.17 387.56 cv
154.791 386.788 154.099 384.839 154.245 383.269 cv
154.424 381.389 155.705 379.819 157.234 379.625 cv
158.241 379.493 159.875 379.346 161.839 379.184 cv
164.229 379.436 166.77 379.572 169.411 379.572 cv
169.616 379.572 169.816 379.572 170.015 379.567 cv
cp
f
156.451 361.318 mo
156.32 361.339 156.189 361.366 156.057 361.397 cv
156.189 361.371 156.32 361.339 156.451 361.318 cv
cp
f
154.093 361.849 mo
153.857 361.907 153.62 361.97 153.384 362.033 cv
153.62 361.97 153.852 361.907 154.093 361.849 cv
cp
f
152.88 362.174 mo
152.655 362.237 152.429 362.306 152.208 362.374 cv
152.429 362.306 152.655 362.237 152.88 362.174 cv
cp
f
152.208 362.374 mo
151.908 362.464 151.61 362.558 151.321 362.658 cv
151.61 362.558 151.904 362.464 152.208 362.374 cv
cp
f
151.321 362.658 mo
151.042 362.747 150.769 362.847 150.501 362.941 cv
150.769 362.841 151.042 362.747 151.321 362.658 cv
cp
f
146.484 364.837 mo
146.384 364.9 146.284 364.963 146.185 365.026 cv
146.28 364.963 146.379 364.9 146.484 364.837 cv
cp
f
144.641 366.213 mo
144.762 366.103 144.882 365.992 145.014 365.887 cv
144.882 365.998 144.762 366.103 144.641 366.213 cv
cp
f
144.19 371.244 mo
144.283 371.417 li
144.19 371.244 li
cp
f
144.106 371.07 mo
144.19 371.244 li
144.106 371.07 li
cp
f
144.037 370.897 mo
144.106 371.07 li
144.037 370.897 li
cp
f
143.901 372.693 mo
144.184 373.04 144.515 373.376 144.893 373.712 cv
144.51 373.381 144.179 373.04 143.901 372.693 cv
cp
f
143.864 370.219 mo
143.89 370.372 li
143.864 370.219 li
cp
f
143.837 369.847 mo
143.848 370.068 li
143.837 369.847 li
cp
f
143.901 372.693 mo
143.733 372.493 143.585 372.283 143.459 372.073 cv
143.591 372.283 143.738 372.488 143.901 372.693 cv
cp
f
143.108 371.391 mo
143.165 371.532 143.234 371.674 143.307 371.811 cv
143.228 371.669 143.165 371.532 143.108 371.391 cv
cp
f
91.6692 362.646 mo
78.8059 374.395 li
78.7083 374.456 li
78.5979 374.474 li
78.3733 374.371 li
73.3118 368.828 li
73.2327 368.609 li
73.3293 368.396 li
86.1995 356.652 li
86.3215 356.543 86.5168 356.548 86.6262 356.676 cv
91.6877 362.219 li
91.7727 362.439 li
91.6692 362.646 li
cp
72.8909 376.692 mo
70.2112 373.762 li
72.4036 371.758 li
75.0842 374.693 li
72.8909 376.692 li
cp
68.968 380.261 mo
66.2942 377.331 li
68.4817 375.333 li
71.1555 378.263 li
68.968 380.261 li
cp
93.2532 360.8 mo
93.0588 360.24 92.7659 359.716 92.4124 359.241 cv
92.2239 358.991 92.0842 358.827 91.8215 358.559 cv
91.0305 357.706 li
90.2561 356.841 li
90.0315 356.573 89.8547 356.397 89.6292 356.189 cv
89.1907 355.794 88.6907 355.459 88.1487 355.209 cv
87.0647 354.697 85.8342 354.545 84.6223 354.928 cv
80.6692 359.229 76.5579 363.359 72.3792 367.421 cv
72.1965 367.598 72.0081 367.78 71.8254 367.957 cv
69.6633 370.095 67.4338 372.16 65.2346 374.261 cv
63.5842 375.802 li
63.176 376.211 62.9319 376.783 62.8958 377.435 cv
62.8596 378.08 63.0237 378.799 63.3713 379.457 cv
63.5354 379.78 63.7727 380.127 63.9856 380.371 cv
64.9915 381.473 li
65.9778 382.557 li
66.2454 382.831 66.5442 383.075 66.8547 383.276 cv
67.4827 383.678 68.1829 383.909 68.8284 383.934 cv
69.4797 383.958 70.0706 383.769 70.5159 383.392 cv
72.2024 381.893 li
74.4934 379.896 76.7532 377.867 79.0793 375.906 cv
79.2444 375.766 79.4143 375.619 79.5793 375.473 cv
84.0315 371.66 88.5452 367.915 93.217 364.339 cv
93.7043 363.163 93.6614 361.927 93.2532 360.8 cv
cp
.34902 .756863 1 rgb
f
94.1721 359.977 mo
94.385 361.621 93.6604 363.028 92.4299 363.4 cv
92.9172 362.224 92.8743 360.988 92.4661 359.861 cv
92.2717 359.301 91.9797 358.777 91.6262 358.302 cv
91.4368 358.052 91.2971 357.888 91.0354 357.62 cv
90.2434 356.767 li
89.47 355.902 li
89.2444 355.634 89.0676 355.457 88.842 355.25 cv
88.4036 354.854 87.9045 354.519 87.3625 354.27 cv
86.2786 353.758 85.0481 353.606 83.8352 353.989 cv
84.3225 352.796 85.7913 352.205 87.4114 352.57 cv
88.2151 352.734 89.0559 353.137 89.8167 353.697 cv
90.1887 353.971 90.5598 354.331 90.8586 354.641 cv
91.6506 355.488 li
92.4241 356.353 li
92.6858 356.651 93.0334 357.089 93.2649 357.473 cv
93.7581 358.283 94.0803 359.154 94.1721 359.977 cv
cp
0 0 0 rgb
f
90.2493 361.463 mo
85.5959 356.371 li
73.1829 367.706 li
77.8362 372.798 li
90.2493 361.463 li
cp
90.9016 361.28 mo
90.9866 361.5 li
90.8831 361.707 li
78.0188 373.456 li
77.9211 373.517 li
77.8118 373.535 li
77.5862 373.432 li
72.5247 367.889 li
72.4456 367.67 li
72.5432 367.457 li
85.4133 355.713 li
85.5354 355.604 85.7297 355.609 85.8391 355.737 cv
90.9016 361.28 li
cp
f
86.5823 361.311 mo
87.3557 360.897 li
86.3752 360.141 li
85.6565 360.525 li
85.5354 360.586 85.3831 360.562 85.2913 360.458 cv
84.9075 360.044 li
84.5237 360.257 li
84.7922 360.549 li
84.8528 360.623 84.8831 360.714 84.8645 360.811 cv
84.8528 360.902 84.7922 360.982 84.7063 361.025 cv
83.0129 361.92 li
82.7092 362.078 82.5198 362.206 82.3499 362.364 cv
82.2034 362.499 82.1487 362.663 82.1848 362.87 cv
82.2219 363.144 82.4104 363.467 82.7209 363.802 cv
82.9221 364.027 83.1477 364.24 83.3176 364.375 cv
83.7502 364.112 li
83.6594 364.015 li
83.1477 363.449 83.4944 363.047 83.6165 362.937 cv
83.7688 362.797 84.012 362.657 84.1887 362.566 cv
85.6389 361.81 li
85.76 361.749 85.9124 361.774 86.0042 361.877 cv
86.7346 362.681 li
87.1311 362.474 li
86.5032 361.786 li
86.4368 361.719 86.4124 361.621 86.4241 361.53 cv
86.4426 361.439 86.4973 361.359 86.5823 361.311 cv
cp
88.0989 360.702 mo
88.179 360.769 88.2209 360.866 88.2151 360.97 cv
88.2024 361.073 88.1477 361.165 88.0569 361.214 cv
87.2161 361.664 li
87.843 362.352 li
87.9104 362.425 87.9348 362.517 87.9231 362.614 cv
87.9045 362.706 87.843 362.785 87.7639 362.827 cv
86.8137 363.333 li
86.6926 363.394 86.5403 363.37 86.4485 363.266 cv
85.7112 362.462 li
84.469 363.108 li
84.2737 363.211 84.1096 363.315 84.0247 363.388 cv
83.9944 363.424 84.0002 363.479 84.1096 363.607 cv
84.2131 363.717 84.3293 363.845 84.4446 363.942 cv
84.5178 364.009 84.554 364.107 84.5481 364.204 cv
84.5422 364.296 84.4875 364.387 84.4016 364.436 cv
83.4583 365.002 li
83.3059 365.045 li
83.1477 365.002 li
82.8977 364.85 82.5256 364.496 82.2698 364.216 cv
81.8743 363.777 81.6428 363.358 81.5823 362.967 cv
81.5149 362.559 81.6428 362.182 81.9417 361.914 cv
82.1418 361.725 82.3801 361.567 82.7268 361.384 cv
84.0735 360.671 li
83.8108 360.379 li
83.7444 360.312 83.72 360.214 83.7317 360.123 cv
83.7502 360.032 83.8049 359.952 83.8909 359.904 cv
84.8284 359.392 li
84.9504 359.325 85.1028 359.349 85.2004 359.453 cv
85.5774 359.873 li
86.2659 359.514 li
86.3752 359.453 86.5032 359.465 86.595 359.538 cv
88.0989 360.702 li
cp
f
63.8635 382.964 mo
63.6321 382.727 63.4915 382.568 63.3147 382.38 cv
62.803 381.819 li
62.554 381.545 62.3225 381.296 62.0784 381.021 cv
60.9456 382.952 59.3801 384.797 57.8274 386.43 cv
59.9465 384.779 62.1458 383.287 63.8635 382.964 cv
cp
92.4299 363.4 mo
88.2942 367.889 83.9944 372.189 79.6272 376.429 cv
77.4641 378.561 75.2356 380.631 73.0364 382.733 cv
72.4817 383.263 71.9456 383.762 71.3489 384.298 cv
70.6428 384.92 69.6682 385.248 68.6018 385.218 cv
67.5608 385.193 66.4397 384.84 65.4104 384.201 cv
65.2942 384.298 65.1907 384.396 65.0696 384.493 cv
64.9417 384.603 li
64.759 384.621 li
62.675 384.871 59.1184 387.8 56.5237 389.944 cv
53.1614 392.716 52.1438 393.55 51.1448 392.46 cv
50.1282 391.345 51.054 390.438 53.801 387.764 cv
56.0608 385.559 59.1614 382.532 60.8665 379.383 cv
60.8059 379.279 60.7502 379.182 60.6956 379.072 cv
60.1292 377.976 59.8733 376.794 59.9407 375.734 cv
60.0139 374.669 60.428 373.73 61.1038 373.079 cv
61.7004 372.536 62.2366 372.049 62.8215 371.544 cv
65.1116 369.546 67.3713 367.511 69.6985 365.55 cv
74.3157 361.591 78.9875 357.699 83.8352 353.989 cv
79.8821 358.29 75.7708 362.42 71.593 366.482 cv
71.4104 366.659 71.2209 366.841 71.0383 367.018 cv
68.8762 369.156 66.6467 371.221 64.4475 373.322 cv
62.7971 374.863 li
62.3889 375.271 62.1458 375.844 62.1086 376.496 cv
62.0725 377.141 62.2366 377.86 62.5842 378.518 cv
62.7483 378.84 62.9866 379.188 63.1995 379.431 cv
64.2043 380.534 li
65.1907 381.618 li
65.4592 381.892 65.7571 382.136 66.0686 382.337 cv
66.6956 382.739 67.3958 382.97 68.0413 382.995 cv
68.6936 383.019 69.2844 382.83 69.7288 382.453 cv
71.4163 380.954 li
73.7063 378.956 75.9661 376.928 78.2932 374.967 cv
78.4573 374.827 78.6282 374.68 78.7922 374.534 cv
83.2444 370.721 87.7581 366.975 92.4299 363.4 cv
cp
f
71.6174 370.819 mo
74.2971 373.755 li
72.1047 375.753 li
69.4241 372.823 li
71.6174 370.819 li
cp
f
67.6946 374.394 mo
70.3684 377.324 li
68.1819 379.322 li
65.5081 376.392 li
67.6946 374.394 li
cp
f
276.858 381.108 mo
276.858 380.772 li
276.858 376.675 li
272.179 376.675 li
272.179 371.997 li
267.746 371.997 li
267.746 376.675 li
263.068 376.675 li
263.068 380.772 li
263.068 381.108 li
267.673 381.108 li
267.746 381.108 li
267.746 385.603 li
267.746 385.787 li
272.179 385.787 li
272.179 385.603 li
272.179 381.108 li
272.252 381.108 li
276.858 381.108 li
cp
279.426 366.393 mo
279.473 366.183 279.499 365.963 279.499 365.742 cv
279.499 364.109 278.176 362.786 276.542 362.786 cv
263.377 362.786 li
261.749 362.786 260.426 364.109 260.426 365.758 cv
260.426 365.979 260.452 366.189 260.494 366.399 cv
261.015 367.339 262.018 367.979 263.167 367.979 cv
276.758 367.979 li
277.903 367.979 278.906 367.339 279.426 366.393 cv
cp
291.593 361.352 mo
291.593 390.723 li
291.593 391.332 291.094 391.831 290.485 391.831 cv
249.441 391.831 li
248.831 391.831 248.332 391.332 248.332 390.723 cv
248.332 361.352 li
248.332 360.743 248.831 360.244 249.441 360.244 cv
271.071 360.244 li
290.485 360.244 li
291.078 360.244 291.556 360.712 291.588 361.299 cv
291.593 361.352 li
cp
.34902 .756863 1 rgb
f
290.647 389.859 mo
290.647 360.489 li
290.642 360.436 li
290.61 359.848 290.132 359.381 289.538 359.381 cv
270.124 359.381 li
248.494 359.381 li
247.885 359.381 247.386 359.88 247.386 360.489 cv
247.386 389.859 li
247.386 390.469 247.885 390.967 248.494 390.967 cv
289.538 390.967 li
290.148 390.967 290.647 390.469 290.647 389.859 cv
cp
292.122 361.429 mo
292.122 389.886 li
292.122 391.661 290.678 393.11 288.898 393.11 cv
249.135 393.11 li
247.355 393.11 245.91 391.661 245.91 389.886 cv
245.91 361.429 li
245.91 359.654 247.355 358.21 249.135 358.21 cv
288.898 358.21 li
290.678 358.21 292.122 359.654 292.122 361.429 cv
cp
0 0 0 rgb
f
276.941 364.895 mo
276.941 364.133 276.337 363.535 275.596 363.535 cv
262.431 363.535 li
261.691 363.535 261.092 364.133 261.092 364.879 cv
261.092 365.635 261.691 366.239 262.431 366.239 cv
275.596 366.239 li
276.337 366.239 276.941 365.635 276.941 364.895 cv
cp
278.553 364.879 mo
278.553 365.1 278.527 365.32 278.48 365.53 cv
277.959 366.475 276.956 367.116 275.812 367.116 cv
262.221 367.116 li
261.072 367.116 260.069 366.475 259.548 365.535 cv
259.506 365.325 259.48 365.115 259.48 364.895 cv
259.48 363.246 260.803 361.922 262.431 361.922 cv
275.596 361.922 li
277.23 361.922 278.553 363.246 278.553 364.879 cv
cp
f
275.911 379.908 mo
275.911 380.244 li
271.306 380.244 li
271.233 380.244 li
271.233 384.739 li
271.233 384.923 li
266.8 384.923 li
266.8 384.739 li
266.8 380.244 li
266.727 380.244 li
262.121 380.244 li
262.121 379.908 li
262.121 375.812 li
266.8 375.812 li
266.8 371.133 li
271.233 371.133 li
271.233 375.812 li
275.911 375.812 li
275.911 379.908 li
cp
f
492.947 386.594 mo
492.043 386.09 491.734 384.751 491.986 382.509 cv
492.006 382.33 492.116 382.172 492.28 382.094 cv
492.448 382.047 li
492.253 381.338 492.227 380.503 492.259 379.778 cv
492.284 379.269 li
492.284 379.227 li
492.374 377.515 492.322 375.992 492.122 374.695 cv
492.09 374.459 492.216 374.227 492.432 374.133 cv
492.647 374.038 492.9 374.096 493.051 374.28 cv
493.099 374.338 li
492.858 374.017 492.715 373.66 492.657 373.498 cv
490.631 367.842 486.897 368.687 486.43 368.818 cv
486.282 368.855 li
485.936 368.892 485.579 368.965 485.227 369.087 cv
485.065 369.134 484.906 369.197 484.743 369.265 cv
484.555 369.344 484.339 369.312 484.193 369.175 cv
484.082 369.076 li
483.941 368.955 li
481.483 367.017 477.796 367.784 476.588 368.031 cv
476.468 368.057 476.268 368.104 476.016 368.168 cv
474.262 368.598 470.156 369.611 467.935 368.855 cv
467.703 368.698 li
465.051 365.563 462.352 365.337 462.053 365.321 cv
461.822 365.311 461.622 365.148 461.57 364.922 cv
461.517 364.691 461.617 364.455 461.822 364.344 cv
462.489 363.966 463.617 364.182 464.657 364.533 cv
463.067 363.137 461.328 362.59 461.307 362.585 cv
461.071 362.512 460.913 362.286 460.934 362.045 cv
460.95 361.797 461.139 361.598 461.381 361.561 cv
462.069 361.462 462.83 361.577 463.434 361.724 cv
462.241 359.303 459.831 358.641 459.721 358.61 cv
459.464 358.542 459.296 358.295 459.332 358.032 cv
459.369 357.775 459.59 357.581 459.853 357.581 cv
459.858 357.581 li
460.209 357.581 460.52 357.586 460.787 357.586 cv
458.556 355.38 454.974 355.039 454.932 355.034 cv
454.696 355.013 454.501 354.834 454.459 354.603 cv
454.423 354.367 454.543 354.13 454.764 354.036 cv
454.99 353.931 455.252 353.852 455.536 353.784 cv
454.565 353.7 453.798 353.837 453.236 354.015 cv
452.984 354.099 452.716 353.984 452.601 353.747 cv
452.485 353.511 452.559 353.227 452.779 353.08 cv
452.91 352.991 453.063 352.897 453.22 352.813 cv
452.433 352.859 451.687 353.028 450.989 353.327 cv
450.788 353.411 450.552 353.359 450.406 353.201 cv
450.29 353.08 450.18 352.965 450.07 352.855 cv
450.112 353.012 450.148 353.159 450.185 353.296 cv
450.227 353.469 450.18 353.658 450.054 353.784 cv
449.933 353.915 449.749 353.973 449.571 353.942 cv
449.087 353.842 448.583 353.842 448.115 353.894 cv
448.268 354.015 li
448.409 354.157 448.457 354.361 448.4 354.546 cv
448.342 354.734 448.179 354.871 447.99 354.908 cv
447.439 355.002 447.034 355.218 446.74 355.485 cv
447.501 355.055 448.199 354.902 448.578 354.85 cv
448.809 354.818 449.034 354.939 449.129 355.154 cv
449.224 355.364 449.171 355.617 448.998 355.769 cv
448.195 356.467 447.454 357.234 446.856 357.99 cv
447.013 358.211 li
447.128 358.384 447.318 358.678 447.123 359.004 cv
446.125 360.721 445.705 361.309 445.217 361.95 cv
444.976 362.276 444.671 362.386 444.471 362.459 cv
444.329 362.522 li
444.235 363.053 444.335 363.221 444.356 363.247 cv
444.366 363.257 444.387 363.294 444.503 363.305 cv
444.907 363.352 445.243 363.656 445.485 363.882 cv
445.601 363.982 li
445.737 364.035 li
445.784 364.056 li
446.036 364.029 446.189 363.83 446.498 363.347 cv
446.892 362.727 447.433 361.877 448.773 362.003 cv
450.264 362.139 451.351 360.863 451.362 360.847 cv
451.497 360.684 451.724 360.621 451.923 360.684 cv
452.128 360.747 452.27 360.926 452.29 361.141 cv
452.669 365.526 455.815 371.287 455.846 371.344 cv
455.893 371.428 455.914 371.523 455.914 371.623 cv
455.84 373.204 456.355 374.831 457.432 376.47 cv
457.516 376.596 457.542 376.764 457.494 376.911 cv
457.448 377.063 457.337 377.184 457.19 377.242 cv
451.844 379.432 449.533 380.613 449.14 380.991 cv
449.14 381.317 449.639 382.362 450.037 383.213 cv
450.867 384.945 451.986 387.298 452.469 389.929 cv
453.194 390.354 455.526 391.746 456.791 393.027 cv
457.09 392.455 457.527 391.609 457.909 390.79 cv
456.99 390.428 455.037 389.666 453.682 389.231 cv
453.514 389.173 453.383 389.036 453.335 388.868 cv
452.727 386.626 451.566 382.839 451.051 382.204 cv
450.931 382.057 450.899 381.858 450.973 381.679 cv
451.041 381.501 451.203 381.375 451.393 381.354 cv
451.44 381.348 455.899 380.781 459.59 380.209 cv
459.873 380.167 460.136 380.356 460.184 380.639 cv
460.577 382.908 461.832 386.558 461.848 386.594 cv
461.896 386.741 461.879 386.899 461.801 387.03 cv
461.265 387.949 461.812 388.753 461.832 388.784 cv
461.896 388.874 461.932 388.979 461.932 389.084 cv
461.963 392.943 li
461.963 393.064 461.927 393.174 461.854 393.269 cv
460.63 394.86 460.42 396.766 460.394 397.649 cv
462.137 397.649 li
462.132 395.259 462.72 393.757 462.998 393.169 cv
462.09 391.32 462.615 389.078 462.641 388.984 cv
462.725 388.795 li
463.308 388.007 462.804 387.025 462.798 387.014 cv
462.725 386.878 462.72 386.71 462.782 386.563 cv
463.524 384.846 463.802 381.522 463.854 379.831 cv
463.854 379.673 463.928 379.526 464.054 379.432 cv
464.174 379.337 464.337 379.3 464.49 379.332 cv
467.761 380.046 471.3 378.938 473.696 377.882 cv
473.868 377.803 474.078 377.83 474.231 377.951 cv
474.383 378.071 474.456 378.271 474.42 378.46 cv
474.394 378.591 li
473.858 382.976 479.051 387.093 479.104 387.135 cv
479.282 387.272 479.351 387.513 479.272 387.729 cv
478.783 389.089 478.264 392.759 478.264 392.796 cv
478.248 392.906 478.196 393.006 478.122 393.085 cv
476.578 394.723 476.121 396.12 476.106 396.178 cv
476.064 396.273 li
476.053 396.294 475.832 396.703 475.57 397.649 cv
477.566 397.649 li
477.586 396.052 li
477.592 395.963 li
477.896 394.277 478.642 393.011 478.905 392.607 cv
478.999 390.265 480.065 387.981 480.495 387.146 cv
479.85 386.263 479.598 384.798 479.645 383.701 cv
479.656 383.48 479.797 383.291 480.007 383.223 cv
480.217 383.16 480.448 383.228 480.585 383.401 cv
482.008 385.224 483.515 386.416 483.531 386.426 cv
483.709 386.568 483.778 386.804 483.704 387.02 cv
483.137 388.6 482.538 392.838 482.533 392.88 cv
482.517 392.99 482.47 393.09 482.397 393.169 cv
481.651 393.957 480.643 395.217 480.06 396.74 cv
479.996 396.892 li
479.781 397.359 479.582 397.922 479.404 398.572 cv
481.876 398.572 li
481.876 397.969 481.876 397.024 481.918 396.603 cv
482.108 394.603 483.09 393.137 483.437 392.681 cv
483.546 389.95 484.807 387.288 485.284 386.368 cv
484.308 385.071 484.082 382.546 484.445 381.343 cv
486.099 375.871 486.329 372.626 485.216 370.494 cv
485.127 370.326 485.138 370.126 485.238 369.968 cv
485.437 369.785 li
485.516 369.743 485.605 369.722 485.699 369.722 cv
486.693 369.758 487.469 370.063 488.005 370.635 cv
488.105 370.782 li
488.268 371.155 488.509 371.854 488.425 372.636 cv
488.52 372.647 li
488.745 372.699 488.908 372.888 488.929 373.119 cv
489.013 374.102 488.929 375.351 488.688 376.937 cv
488.646 377.068 li
488.394 377.657 487.406 380.088 487.422 382.582 cv
487.49 382.577 li
487.758 382.577 487.979 382.776 488.01 383.045 cv
488.257 385.087 489.213 386.116 489.964 386.615 cv
490.883 387.219 492.028 387.408 493.035 387.114 cv
493.329 387.03 493.576 386.92 493.786 386.794 cv
493.503 386.799 493.214 386.747 492.947 386.594 cv
cp
.34902 .756863 1 rgb
f
481.027 392.516 mo
481.137 391.754 481.604 388.619 482.103 386.965 cv
481.746 386.66 481.095 386.078 480.355 385.274 cv
480.49 385.852 480.706 386.366 481 386.645 cv
481.173 386.813 481.21 387.075 481.089 387.285 cv
481.073 387.312 479.514 390.068 479.456 392.726 cv
479.456 392.836 479.419 392.936 479.362 393.025 cv
479.351 393.036 478.464 394.296 478.144 396.05 cv
478.122 397.489 li
478.317 396.901 478.48 396.554 478.548 396.397 cv
478.584 396.312 li
479.198 394.706 480.228 393.382 481.027 392.516 cv
cp
486.451 373.453 mo
487.108 372.676 486.907 371.778 486.688 371.242 cv
486.514 371.074 486.299 370.948 486.041 370.859 cv
486.299 371.615 486.436 372.471 486.451 373.453 cv
cp
493.293 386.739 mo
493.01 386.744 492.721 386.692 492.453 386.54 cv
491.55 386.035 491.24 384.696 491.492 382.454 cv
491.513 382.276 491.623 382.118 491.786 382.039 cv
491.954 381.992 li
491.76 381.283 491.734 380.448 491.766 379.723 cv
491.791 379.214 li
491.791 379.172 li
491.881 377.46 491.828 375.937 491.629 374.64 cv
491.597 374.404 491.724 374.173 491.939 374.078 cv
492.154 373.984 492.406 374.042 492.559 374.225 cv
492.606 374.283 li
492.365 373.963 492.222 373.606 492.164 373.443 cv
490.138 367.787 486.404 368.632 485.937 368.764 cv
485.789 368.8 li
485.443 368.838 485.086 368.911 484.734 369.032 cv
484.572 369.079 484.413 369.142 484.251 369.21 cv
484.062 369.289 483.846 369.257 483.699 369.121 cv
483.589 369.021 li
483.448 368.901 li
480.99 366.963 477.303 367.729 476.095 367.976 cv
475.975 368.003 475.775 368.05 475.523 368.113 cv
473.769 368.543 469.662 369.557 467.442 368.8 cv
467.21 368.643 li
464.558 365.508 461.859 365.282 461.56 365.266 cv
461.328 365.256 461.129 365.093 461.076 364.867 cv
461.024 364.636 461.124 364.4 461.328 364.29 cv
461.995 363.912 463.124 364.127 464.164 364.479 cv
462.573 363.082 460.835 362.536 460.814 362.53 cv
460.577 362.457 460.42 362.231 460.442 361.99 cv
460.457 361.743 460.646 361.543 460.888 361.506 cv
461.575 361.407 462.337 361.522 462.941 361.669 cv
461.749 359.249 459.338 358.587 459.228 358.555 cv
458.971 358.487 458.803 358.24 458.839 357.978 cv
458.876 357.72 459.097 357.526 459.36 357.526 cv
459.365 357.526 li
459.716 357.526 460.027 357.531 460.294 357.531 cv
458.063 355.326 454.481 354.984 454.439 354.979 cv
454.202 354.958 454.008 354.779 453.966 354.548 cv
453.93 354.312 454.05 354.076 454.271 353.982 cv
454.496 353.876 454.759 353.797 455.043 353.729 cv
454.072 353.645 453.305 353.782 452.742 353.961 cv
452.49 354.045 452.223 353.929 452.108 353.693 cv
451.991 353.456 452.066 353.172 452.285 353.026 cv
452.417 352.936 452.57 352.842 452.727 352.758 cv
451.94 352.805 451.194 352.973 450.495 353.273 cv
450.295 353.357 450.059 353.304 449.912 353.147 cv
449.797 353.026 449.687 352.91 449.576 352.8 cv
449.618 352.957 449.655 353.105 449.692 353.241 cv
449.734 353.414 449.687 353.603 449.561 353.729 cv
449.44 353.86 449.256 353.919 449.077 353.887 cv
448.594 353.787 448.09 353.787 447.622 353.839 cv
447.775 353.961 li
447.917 354.102 447.964 354.307 447.906 354.491 cv
447.849 354.68 447.686 354.817 447.496 354.853 cv
446.946 354.947 446.541 355.163 446.247 355.431 cv
447.008 355 447.706 354.848 448.085 354.796 cv
448.316 354.764 448.541 354.884 448.636 355.1 cv
448.731 355.31 448.678 355.562 448.505 355.714 cv
447.701 356.413 446.961 357.179 446.363 357.936 cv
446.52 358.156 li
446.635 358.329 446.824 358.624 446.63 358.949 cv
445.632 360.666 445.212 361.255 444.724 361.895 cv
444.483 362.221 444.178 362.331 443.978 362.404 cv
443.836 362.467 li
443.742 362.998 443.842 363.166 443.863 363.192 cv
443.873 363.203 443.894 363.239 444.01 363.25 cv
444.414 363.297 444.75 363.602 444.991 363.828 cv
445.108 363.927 li
445.243 363.98 li
445.291 364.001 li
445.543 363.975 445.696 363.775 446.005 363.292 cv
446.399 362.672 446.94 361.821 448.28 361.948 cv
449.771 362.084 450.858 360.808 450.868 360.792 cv
451.004 360.63 451.231 360.567 451.43 360.63 cv
451.635 360.693 451.777 360.871 451.797 361.087 cv
452.176 365.471 455.322 371.232 455.353 371.29 cv
455.4 371.374 455.421 371.468 455.421 371.568 cv
455.347 373.149 455.862 374.776 456.939 376.415 cv
457.023 376.541 457.049 376.709 457.001 376.856 cv
456.954 377.008 456.844 377.129 456.697 377.187 cv
451.351 379.377 449.04 380.558 448.647 380.937 cv
448.647 381.262 449.146 382.307 449.544 383.158 cv
450.374 384.891 451.493 387.243 451.976 389.874 cv
452.7 390.299 455.032 391.691 456.298 392.972 cv
456.597 392.4 457.033 391.555 457.416 390.735 cv
456.497 390.373 454.544 389.611 453.189 389.176 cv
453.021 389.118 452.89 388.982 452.842 388.814 cv
452.234 386.571 451.073 382.785 450.558 382.15 cv
450.438 382.003 450.406 381.803 450.48 381.625 cv
450.548 381.446 450.71 381.32 450.9 381.299 cv
450.947 381.294 455.406 380.726 459.097 380.154 cv
459.38 380.112 459.643 380.301 459.691 380.585 cv
460.084 382.853 461.339 386.503 461.355 386.54 cv
461.403 386.687 461.386 386.844 461.308 386.976 cv
460.772 387.895 461.319 388.698 461.339 388.73 cv
461.403 388.818 461.439 388.924 461.439 389.029 cv
461.471 392.888 li
461.471 393.009 461.434 393.12 461.361 393.214 cv
460.137 394.805 459.927 396.712 459.901 397.594 cv
461.644 397.594 li
461.639 395.204 462.227 393.702 462.505 393.114 cv
461.597 391.266 462.121 389.024 462.148 388.929 cv
462.232 388.74 li
462.815 387.952 462.311 386.97 462.306 386.96 cv
462.232 386.823 462.227 386.655 462.289 386.508 cv
463.031 384.791 463.309 381.467 463.361 379.776 cv
463.361 379.618 463.435 379.471 463.561 379.377 cv
463.681 379.282 463.844 379.246 463.996 379.277 cv
467.268 379.991 470.807 378.883 473.202 377.828 cv
473.375 377.749 473.585 377.775 473.738 377.896 cv
473.89 378.017 473.963 378.216 473.927 378.405 cv
473.901 378.537 li
473.365 382.922 478.558 387.039 478.611 387.081 cv
478.789 387.217 478.858 387.459 478.779 387.674 cv
478.29 389.034 477.771 392.705 477.771 392.741 cv
477.755 392.852 477.702 392.951 477.629 393.03 cv
476.085 394.669 475.628 396.066 475.613 396.123 cv
475.571 396.218 li
475.56 396.239 475.339 396.649 475.076 397.594 cv
477.073 397.594 li
477.093 395.997 li
477.099 395.908 li
477.403 394.222 478.149 392.957 478.411 392.552 cv
478.506 390.21 479.572 387.926 480.002 387.091 cv
479.357 386.209 479.105 384.744 479.152 383.646 cv
479.162 383.425 479.304 383.236 479.514 383.168 cv
479.724 383.105 479.955 383.173 480.092 383.347 cv
481.515 385.169 483.022 386.361 483.037 386.372 cv
483.216 386.513 483.284 386.75 483.211 386.965 cv
482.644 388.546 482.045 392.783 482.04 392.825 cv
482.025 392.936 481.977 393.036 481.904 393.114 cv
481.157 393.902 480.15 395.162 479.567 396.685 cv
479.503 396.838 li
479.288 397.305 479.089 397.867 478.91 398.518 cv
481.383 398.518 li
481.383 397.914 481.383 396.969 481.426 396.548 cv
481.615 394.548 482.597 393.083 482.944 392.626 cv
483.053 389.895 484.314 387.233 484.791 386.314 cv
483.815 385.017 483.589 382.491 483.951 381.288 cv
485.606 375.817 485.836 372.571 484.723 370.439 cv
484.634 370.271 484.645 370.071 484.744 369.914 cv
484.944 369.73 li
485.023 369.688 485.112 369.667 485.206 369.667 cv
486.199 369.704 486.976 370.008 487.512 370.581 cv
487.612 370.728 li
487.775 371.101 488.016 371.799 487.932 372.582 cv
488.027 372.592 li
488.252 372.645 488.415 372.834 488.436 373.065 cv
488.52 374.047 488.436 375.297 488.195 376.882 cv
488.153 377.014 li
487.901 377.602 486.913 380.033 486.929 382.527 cv
486.997 382.523 li
487.265 382.523 487.486 382.722 487.517 382.99 cv
487.764 385.032 488.72 386.062 489.471 386.561 cv
490.39 387.165 491.534 387.354 492.542 387.06 cv
492.837 386.976 493.083 386.865 493.293 386.739 cv
cp
495.073 385.137 mo
495.257 385.253 495.358 385.468 495.316 385.684 cv
495.305 385.757 494.969 387.453 492.837 388.068 cv
491.534 388.446 490.059 388.21 488.893 387.438 cv
488.341 387.07 487.706 386.487 487.218 385.579 cv
487.144 385.647 487.05 385.699 486.945 385.715 cv
486.698 385.757 486.451 385.621 486.362 385.384 cv
485.07 381.961 486.74 377.649 487.165 376.657 cv
487.302 375.743 487.386 374.955 487.412 374.278 cv
487.076 374.467 486.787 374.546 486.73 374.561 cv
486.629 374.588 486.525 374.582 486.425 374.551 cv
486.309 376.436 485.821 378.731 484.954 381.593 cv
484.65 382.607 484.912 385.022 485.789 385.862 cv
485.963 386.03 486.005 386.293 485.884 386.503 cv
485.863 386.534 484.051 389.733 483.989 392.82 cv
483.989 392.946 483.947 393.062 483.867 393.151 cv
483.852 393.167 482.665 394.6 482.471 396.649 cv
482.418 397.221 482.439 399.017 482.439 399.038 cv
482.439 399.174 482.387 399.311 482.286 399.411 cv
482.187 399.51 482.05 399.568 481.914 399.568 cv
478.233 399.568 li
478.075 399.568 477.923 399.495 477.823 399.369 cv
477.723 399.243 477.687 399.08 477.723 398.922 cv
477.749 398.812 477.776 398.702 477.802 398.597 cv
477.592 398.644 li
474.4 398.644 li
474.237 398.644 474.084 398.57 473.985 398.444 cv
473.885 398.318 473.853 398.155 473.89 397.998 cv
474.205 396.643 474.52 395.961 474.625 395.761 cv
474.73 395.456 475.26 394.049 476.752 392.432 cv
476.852 391.738 477.25 389.108 477.676 387.674 cv
476.578 386.739 472.792 383.221 472.819 379.13 cv
470.487 380.06 467.389 380.884 464.385 380.417 cv
464.317 381.751 464.08 384.812 463.34 386.713 cv
463.519 387.186 463.813 388.267 463.151 389.265 cv
463.067 389.685 462.773 391.502 463.555 392.846 cv
463.65 393.015 463.65 393.225 463.55 393.387 cv
463.539 393.403 462.589 395.015 462.704 398.098 cv
462.71 398.239 462.657 398.381 462.558 398.481 cv
462.463 398.586 462.326 398.644 462.179 398.644 cv
459.38 398.644 li
459.102 398.644 458.876 398.434 458.856 398.161 cv
458.845 398.035 458.645 395.147 460.42 392.72 cv
460.389 389.186 li
460.173 388.808 459.733 387.811 460.289 386.666 cv
460.027 385.894 459.165 383.284 458.755 381.273 cv
456.088 381.677 453.157 382.066 451.797 382.239 cv
452.532 383.84 453.457 387.081 453.782 388.262 cv
455.625 388.877 458.204 389.916 458.32 389.964 cv
458.451 390.016 458.556 390.121 458.609 390.257 cv
458.661 390.389 458.661 390.536 458.603 390.667 cv
457.9 392.232 456.907 394.07 456.865 394.149 cv
456.776 394.312 456.613 394.411 456.429 394.422 cv
456.245 394.432 456.073 394.348 455.967 394.196 cv
455.163 393.02 452.285 391.25 451.24 390.667 cv
451.105 390.589 451.01 390.452 450.984 390.295 cv
450.553 387.711 449.424 385.337 448.6 383.609 cv
447.823 381.982 447.397 381.089 447.691 380.474 cv
447.827 380.186 448.111 379.592 455.726 376.452 cv
454.781 374.856 454.323 373.249 454.365 371.668 cv
453.913 370.828 451.535 366.259 450.878 362.184 cv
450.259 362.63 449.319 363.098 448.185 362.993 cv
447.512 362.93 447.281 363.245 446.893 363.854 cv
446.573 364.358 446.173 364.978 445.344 365.046 cv
445.108 365.062 444.94 364.993 444.839 364.951 cv
444.777 364.925 li
444.587 364.878 444.456 364.757 444.288 364.605 cv
444.194 364.516 443.973 364.316 443.878 364.295 cv
443.416 364.237 443.154 364.001 443.012 363.812 cv
442.749 363.449 442.687 362.945 442.818 362.273 cv
442.933 361.674 443.374 361.512 443.611 361.422 cv
443.758 361.365 443.826 361.339 443.884 361.265 cv
444.324 360.677 444.713 360.141 445.59 358.65 cv
445.448 358.424 445.223 358.004 445.38 357.568 cv
445.327 357.636 li
445.197 357.82 444.96 357.899 444.74 357.831 cv
444.525 357.762 444.377 357.558 444.377 357.332 cv
444.377 356.581 444.698 355.294 445.748 354.48 cv
445.57 354.485 445.365 354.496 445.139 354.517 cv
444.887 354.543 444.651 354.38 444.582 354.133 cv
444.514 353.887 444.635 353.63 444.865 353.519 cv
444.949 353.477 446.652 352.684 448.484 352.763 cv
448.368 352.301 448.242 351.776 448.111 351.24 cv
448.053 351.014 448.153 350.783 448.353 350.663 cv
448.552 350.547 448.804 350.573 448.972 350.731 cv
449.004 350.752 449.603 351.308 450.432 352.17 cv
451.792 351.671 453.294 351.561 454.891 351.849 cv
455.121 351.891 455.295 352.08 455.322 352.317 cv
455.331 352.453 455.289 352.59 455.205 352.695 cv
456.119 352.784 457.18 353.041 458.372 353.577 cv
458.603 353.682 458.724 353.94 458.666 354.181 cv
458.603 354.428 458.366 354.601 458.125 354.58 cv
457.937 354.569 457.642 354.559 457.295 354.564 cv
458.839 355.095 460.678 356.061 461.875 357.789 cv
461.99 357.951 462.001 358.167 461.906 358.34 cv
461.843 358.456 461.739 358.54 461.617 358.582 cv
462.652 359.306 463.781 360.488 464.327 362.347 cv
464.38 362.541 464.322 362.746 464.175 362.882 cv
463.981 362.993 li
464.858 363.612 465.777 364.458 466.496 365.576 cv
466.627 365.776 466.601 366.033 466.444 366.212 cv
466.333 366.301 li
466.853 366.726 467.383 367.236 467.914 367.845 cv
469.888 368.417 473.784 367.462 475.271 367.094 cv
475.544 367.026 475.749 366.973 475.88 366.947 cv
477.208 366.674 481.252 365.839 484.099 368.076 cv
484.151 368.118 li
484.639 367.94 485.133 367.818 485.616 367.761 cv
486.125 367.624 490.821 366.574 493.152 373.086 cv
493.278 373.432 493.493 373.753 493.609 373.831 cv
493.666 373.768 li
493.834 373.585 494.113 373.543 494.328 373.674 cv
494.543 373.805 494.638 374.073 494.543 374.309 cv
494.496 374.43 494.071 375.475 493.204 375.611 cv
493.068 375.632 492.937 375.632 492.805 375.611 cv
492.895 376.688 492.91 377.885 492.842 379.177 cv
492.842 379.23 li
492.811 379.776 li
492.752 381.162 492.979 382.223 493.383 382.46 cv
493.598 382.586 493.693 382.848 493.614 383.079 cv
493.535 383.316 493.299 383.463 493.057 383.436 cv
493.015 383.431 492.784 383.4 492.474 383.295 cv
492.369 385.127 492.811 385.537 492.963 385.621 cv
493.372 385.852 494.16 385.421 494.481 385.174 cv
494.654 385.038 494.89 385.027 495.073 385.137 cv
cp
.113725 .113725 .105882 rgb
f
391.682 359.649 mo
392.091 360.573 392.049 361.64 391.759 362.618 cv
391.463 363.601 390.942 364.52 390.307 365.349 cv
389.022 366.997 387.363 368.401 385.543 369.444 cv
384.275 370.173 382.901 370.73 381.485 371.062 cv
381.437 370.647 381.319 370.25 381.141 369.882 cv
381.236 369.948 381.324 370.019 381.425 370.084 cv
381.135 369.408 380.779 368.792 380.394 368.2 cv
382.569 366.801 li
383.481 366.191 384.388 365.622 385.288 364.929 cv
385.739 364.573 386.165 364.129 386.438 363.584 cv
386.722 363.045 386.823 362.41 386.764 361.824 cv
386.621 360.645 386.017 359.667 385.454 358.742 cv
385.312 358.511 385.176 358.28 385.051 358.043 cv
384.933 357.818 384.803 357.551 384.862 357.35 cv
384.921 357.143 385.247 357.119 385.502 357.083 cv
385.775 357.042 386.041 357.012 386.314 356.988 cv
387.398 357.024 388.494 357.184 389.472 357.593 cv
389.567 357.634 li
390.503 358.049 391.303 358.748 391.682 359.649 cv
cp
.34902 .756863 1 rgb
f
377.099 370.321 mo
377.846 369.373 377.728 368.093 377.07 367.317 cv
376.946 367.174 li
376.809 367.05 li
376.05 366.363 374.782 366.197 373.805 366.908 cv
373.301 367.275 372.934 367.892 372.868 368.573 cv
372.797 369.242 373.052 369.971 373.538 370.469 cv
374.018 370.973 374.729 371.245 375.41 371.198 cv
376.086 371.156 376.714 370.807 377.099 370.321 cv
cp
380.933 369.948 mo
381.182 370.759 381.135 371.625 380.797 372.354 cv
380.572 372.875 380.193 373.337 379.76 373.651 cv
379.31 373.959 378.771 374.143 378.196 374.244 cv
377.064 374.427 375.831 374.38 374.806 373.977 cv
374.557 373.876 374.321 373.752 374.13 373.604 cv
374.035 373.533 373.947 373.45 373.876 373.367 cv
373.585 373.017 li
372.395 371.577 li
371.186 370.155 li
371.037 369.977 li
370.978 369.906 li
370.901 369.818 li
370.812 369.675 li
370.73 369.521 li
370.616 369.296 370.545 369.041 370.487 368.775 cv
370.421 368.448 370.392 368.117 370.386 367.773 cv
370.38 366.973 370.528 366.137 370.782 365.373 cv
370.972 364.828 371.244 364.313 371.618 363.945 cv
372.015 363.56 372.525 363.276 373.081 363.139 cv
373.793 362.956 374.569 363.026 375.275 363.329 cv
375.375 363.37 375.476 363.423 375.576 363.477 cv
375.82 363.916 376.074 364.336 376.353 364.745 cv
376.809 365.426 377.301 366.084 377.823 366.706 cv
378.344 367.335 378.906 367.933 379.499 368.502 cv
379.92 368.911 380.365 369.308 380.844 369.669 cv
380.88 369.758 380.909 369.853 380.933 369.948 cv
cp
f
391.952 358.714 mo
392.504 359.769 392.522 361.019 392.255 362.133 cv
391.994 363.259 391.449 364.284 390.809 365.208 cv
390.163 366.138 389.393 366.968 388.558 367.715 cv
387.734 368.462 386.822 369.149 385.862 369.723 cv
384.409 370.589 382.822 371.24 381.156 371.602 cv
381.091 371.869 li
380.907 372.443 380.581 372.965 380.143 373.409 cv
381.464 383.074 372.582 394.83 363.238 398.741 cv
361.816 399.339 359.937 398.795 359.197 397.674 cv
358.449 396.548 358.9 395.34 360.079 394.848 cv
367.462 391.784 375.616 382.061 375.314 374.606 cv
374.929 374.553 374.543 374.47 374.164 374.339 cv
373.832 374.221 373.5 374.061 373.198 373.836 cv
373.044 373.723 372.896 373.593 372.76 373.439 cv
372.446 373.077 li
371.237 371.655 li
370.046 370.21 li
369.898 370.032 li
369.809 369.919 li
369.738 369.83 li
369.572 369.575 li
369.442 369.32 li
369.287 368.977 369.187 368.633 369.133 368.29 cv
369.069 367.893 369.056 367.502 369.069 367.11 cv
370.135 367.087 li
370.141 367.43 370.17 367.762 370.236 368.088 cv
370.295 368.355 370.365 368.609 370.479 368.835 cv
370.562 368.989 li
370.651 369.131 li
370.728 369.22 li
370.786 369.291 li
370.935 369.469 li
372.144 370.891 li
373.334 372.331 li
373.625 372.68 li
373.697 372.763 373.785 372.846 373.88 372.918 cv
374.07 373.066 374.307 373.19 374.555 373.291 cv
375.58 373.693 376.813 373.741 377.945 373.557 cv
378.52 373.457 379.059 373.273 379.509 372.965 cv
379.942 372.651 380.321 372.189 380.546 371.667 cv
380.884 370.938 380.931 370.073 380.682 369.261 cv
380.89 369.196 li
381.068 369.564 381.186 369.961 381.234 370.375 cv
382.65 370.044 384.025 369.486 385.292 368.757 cv
387.112 367.715 388.771 366.31 390.057 364.663 cv
390.691 363.834 391.212 362.915 391.508 361.931 cv
391.799 360.954 391.84 359.887 391.431 358.963 cv
391.052 358.062 390.252 357.363 389.316 356.948 cv
389.452 356.658 li
390.465 357.013 391.425 357.694 391.952 358.714 cv
cp
0 0 0 rgb
f
389.452 356.658 mo
389.316 356.948 li
389.221 356.906 li
388.243 356.498 387.147 356.338 386.063 356.302 cv
387.029 356.225 388.018 356.261 388.978 356.521 cv
388.788 355.941 388.522 355.396 388.16 354.927 cv
387.527 354.068 386.59 353.493 385.565 353.286 cv
384.534 353.073 383.449 353.179 382.43 353.493 cv
380.38 354.139 378.555 355.461 377.044 357.025 cv
375.693 358.435 374.62 360.118 373.963 361.943 cv
374.377 362.038 374.775 362.192 375.124 362.411 cv
375.024 362.643 li
374.319 362.34 373.542 362.269 372.831 362.453 cv
372.274 362.589 371.764 362.874 371.367 363.259 cv
370.994 363.626 370.722 364.142 370.531 364.687 cv
370.277 365.451 370.129 366.287 370.135 367.087 cv
369.069 367.11 li
361.768 365.487 350.746 371.809 346.427 378.552 cv
345.74 379.631 344.465 379.862 343.493 378.932 cv
342.516 378.002 342.315 376.058 343.15 374.76 cv
348.631 366.251 361.756 359.567 371.035 362.547 cv
371.539 362.192 372.126 361.961 372.724 361.884 cv
372.737 361.884 li
373.459 359.763 374.68 357.825 376.244 356.243 cv
377.898 354.625 379.87 353.215 382.182 352.605 cv
383.325 352.308 384.564 352.214 385.742 352.527 cv
386.922 352.836 387.989 353.582 388.64 354.595 cv
389.049 355.23 389.31 355.935 389.452 356.658 cv
cp
f
385.595 362.571 mo
385.843 362.156 385.95 361.676 385.933 361.179 cv
385.92 360.693 385.802 360.207 385.624 359.733 cv
384.943 359.312 384.208 358.998 383.467 358.998 cv
382.957 358.998 382.466 359.158 382.045 359.443 cv
381.618 359.721 381.269 360.13 380.896 360.551 cv
380.16 361.392 379.432 362.252 378.709 363.122 cv
378.365 363.531 378.022 363.946 377.678 364.355 cv
377.956 364.651 378.223 364.947 378.484 365.261 cv
378.864 365.718 379.225 366.192 379.569 366.678 cv
380.321 366.228 381.073 365.777 381.826 365.333 cv
382.756 364.776 383.704 364.213 384.57 363.626 cv
384.99 363.336 385.352 362.992 385.595 362.571 cv
cp
386.513 361.137 mo
386.573 361.724 386.472 362.358 386.187 362.897 cv
385.914 363.443 385.488 363.887 385.037 364.242 cv
384.137 364.936 383.231 365.505 382.318 366.115 cv
380.143 367.513 li
380.529 368.106 380.884 368.722 381.174 369.398 cv
381.073 369.333 380.985 369.261 380.89 369.196 cv
380.682 369.261 li
380.658 369.167 380.629 369.072 380.593 368.983 cv
380.114 368.621 379.669 368.224 379.248 367.816 cv
378.656 367.247 378.093 366.648 377.572 366.02 cv
377.05 365.398 376.558 364.74 376.102 364.059 cv
375.823 363.65 375.569 363.229 375.325 362.791 cv
375.225 362.737 375.124 362.684 375.024 362.643 cv
375.124 362.411 li
375.041 362.239 374.958 362.062 374.881 361.884 cv
375.592 362.352 376.214 362.897 376.807 363.466 cv
376.99 363.65 li
377.328 363.271 377.666 362.891 378.016 362.518 cv
378.775 361.683 379.527 360.835 380.332 360.024 cv
380.73 359.627 381.145 359.182 381.69 358.868 cv
382.217 358.548 382.863 358.376 383.486 358.423 cv
384.191 358.488 384.801 358.749 385.358 359.093 cv
385.227 358.791 385.079 358.501 384.931 358.21 cv
384.813 357.961 384.688 357.718 384.575 357.464 cv
384.487 357.209 384.332 356.936 384.445 356.598 cv
384.516 356.426 384.688 356.361 384.83 356.338 cv
384.973 356.308 385.109 356.314 385.245 356.308 cv
385.518 356.296 385.79 356.296 386.063 356.302 cv
385.79 356.326 385.524 356.356 385.251 356.397 cv
384.996 356.432 384.67 356.456 384.611 356.664 cv
384.552 356.865 384.682 357.131 384.801 357.357 cv
384.925 357.594 385.062 357.825 385.203 358.056 cv
385.767 358.981 386.371 359.958 386.513 361.137 cv
cp
f
377.198 367.964 mo
377.257 367.502 377.115 367.009 376.819 366.63 cv
377.477 367.406 377.595 368.687 376.849 369.634 cv
376.463 370.121 375.835 370.47 375.159 370.512 cv
374.478 370.559 373.767 370.286 373.287 369.783 cv
372.801 369.285 372.546 368.556 372.617 367.886 cv
372.683 367.205 373.05 366.589 373.554 366.221 cv
374.531 365.51 375.8 365.676 376.558 366.364 cv
376.191 366.056 375.705 365.896 375.237 365.937 cv
374.709 365.984 374.247 366.263 373.969 366.648 cv
373.406 367.442 373.601 368.42 374.135 368.959 cv
374.656 369.516 375.628 369.747 376.44 369.208 cv
376.83 368.947 377.133 368.485 377.198 367.964 cv
cp
f
410.65 137.87 mo
410.15 137.87 li
409.597 137.87 409.15 137.422 409.15 136.87 cv
409.15 136.317 409.597 135.87 410.15 135.87 cv
410.65 135.87 li
411.202 135.87 411.65 136.317 411.65 136.87 cv
411.65 137.422 411.202 137.87 410.65 137.87 cv
cp
1 .45098 .490196 rgb
f
416.657 137.87 mo
415.656 137.87 li
415.104 137.87 414.656 137.422 414.656 136.87 cv
414.656 136.317 415.104 135.87 415.656 135.87 cv
416.657 135.87 li
417.21 135.87 417.657 136.317 417.657 136.87 cv
417.657 137.422 417.21 137.87 416.657 137.87 cv
cp
422.666 137.87 mo
421.665 137.87 li
421.113 137.87 420.665 137.422 420.665 136.87 cv
420.665 136.317 421.113 135.87 421.665 135.87 cv
422.666 135.87 li
423.219 135.87 423.666 136.317 423.666 136.87 cv
423.666 137.422 423.219 137.87 422.666 137.87 cv
cp
428.675 137.87 mo
427.673 137.87 li
427.12 137.87 426.673 137.422 426.673 136.87 cv
426.673 136.317 427.12 135.87 427.673 135.87 cv
428.675 135.87 li
429.228 135.87 429.675 136.317 429.675 136.87 cv
429.675 137.422 429.228 137.87 428.675 137.87 cv
cp
434.684 137.87 mo
433.682 137.87 li
433.129 137.87 432.682 137.422 432.682 136.87 cv
432.682 136.317 433.129 135.87 433.682 135.87 cv
434.684 135.87 li
435.237 135.87 435.684 136.317 435.684 136.87 cv
435.684 137.422 435.237 137.87 434.684 137.87 cv
cp
440.692 137.87 mo
439.691 137.87 li
439.138 137.87 438.691 137.422 438.691 136.87 cv
438.691 136.317 439.138 135.87 439.691 135.87 cv
440.692 135.87 li
441.244 135.87 441.692 136.317 441.692 136.87 cv
441.692 137.422 441.244 137.87 440.692 137.87 cv
cp
446.7 137.87 mo
445.698 137.87 li
445.146 137.87 444.698 137.422 444.698 136.87 cv
444.698 136.317 445.146 135.87 445.698 135.87 cv
446.7 135.87 li
447.253 135.87 447.7 136.317 447.7 136.87 cv
447.7 137.422 447.253 137.87 446.7 137.87 cv
cp
452.709 137.87 mo
451.707 137.87 li
451.155 137.87 450.707 137.422 450.707 136.87 cv
450.707 136.317 451.155 135.87 451.707 135.87 cv
452.709 135.87 li
453.262 135.87 453.709 136.317 453.709 136.87 cv
453.709 137.422 453.262 137.87 452.709 137.87 cv
cp
458.717 137.87 mo
457.716 137.87 li
457.163 137.87 456.716 137.422 456.716 136.87 cv
456.716 136.317 457.163 135.87 457.716 135.87 cv
458.717 135.87 li
459.27 135.87 459.717 136.317 459.717 136.87 cv
459.717 137.422 459.27 137.87 458.717 137.87 cv
cp
464.726 137.87 mo
463.725 137.87 li
463.172 137.87 462.725 137.422 462.725 136.87 cv
462.725 136.317 463.172 135.87 463.725 135.87 cv
464.726 135.87 li
465.279 135.87 465.726 136.317 465.726 136.87 cv
465.726 137.422 465.279 137.87 464.726 137.87 cv
cp
470.735 137.87 mo
469.733 137.87 li
469.18 137.87 468.733 137.422 468.733 136.87 cv
468.733 136.317 469.18 135.87 469.733 135.87 cv
470.735 135.87 li
471.287 135.87 471.735 136.317 471.735 136.87 cv
471.735 137.422 471.287 137.87 470.735 137.87 cv
cp
476.742 137.87 mo
475.741 137.87 li
475.189 137.87 474.741 137.422 474.741 136.87 cv
474.741 136.317 475.189 135.87 475.741 135.87 cv
476.742 135.87 li
477.295 135.87 477.742 136.317 477.742 136.87 cv
477.742 137.422 477.295 137.87 476.742 137.87 cv
cp
482.751 137.87 mo
481.75 137.87 li
481.198 137.87 480.75 137.422 480.75 136.87 cv
480.75 136.317 481.198 135.87 481.75 135.87 cv
482.751 135.87 li
483.304 135.87 483.751 136.317 483.751 136.87 cv
483.751 137.422 483.304 137.87 482.751 137.87 cv
cp
488.76 137.87 mo
487.758 137.87 li
487.205 137.87 486.758 137.422 486.758 136.87 cv
486.758 136.317 487.205 135.87 487.758 135.87 cv
488.76 135.87 li
489.313 135.87 489.76 136.317 489.76 136.87 cv
489.76 137.422 489.313 137.87 488.76 137.87 cv
cp
494.768 137.87 mo
493.767 137.87 li
493.214 137.87 492.767 137.422 492.767 136.87 cv
492.767 136.317 493.214 135.87 493.767 135.87 cv
494.768 135.87 li
495.321 135.87 495.768 136.317 495.768 136.87 cv
495.768 137.422 495.321 137.87 494.768 137.87 cv
cp
500.777 137.87 mo
499.776 137.87 li
499.223 137.87 498.776 137.422 498.776 136.87 cv
498.776 136.317 499.223 135.87 499.776 135.87 cv
500.777 135.87 li
501.329 135.87 501.777 136.317 501.777 136.87 cv
501.777 137.422 501.329 137.87 500.777 137.87 cv
cp
506.785 137.87 mo
505.783 137.87 li
505.231 137.87 504.783 137.422 504.783 136.87 cv
504.783 136.317 505.231 135.87 505.783 135.87 cv
506.785 135.87 li
507.338 135.87 507.785 136.317 507.785 136.87 cv
507.785 137.422 507.338 137.87 506.785 137.87 cv
cp
512.794 137.87 mo
511.792 137.87 li
511.24 137.87 510.792 137.422 510.792 136.87 cv
510.792 136.317 511.24 135.87 511.792 135.87 cv
512.794 135.87 li
513.347 135.87 513.794 136.317 513.794 136.87 cv
513.794 137.422 513.347 137.87 512.794 137.87 cv
cp
518.802 137.87 mo
517.801 137.87 li
517.248 137.87 516.801 137.422 516.801 136.87 cv
516.801 136.317 517.248 135.87 517.801 135.87 cv
518.802 135.87 li
519.355 135.87 519.802 136.317 519.802 136.87 cv
519.802 137.422 519.355 137.87 518.802 137.87 cv
cp
524.811 137.87 mo
523.81 137.87 li
523.257 137.87 522.81 137.422 522.81 136.87 cv
522.81 136.317 523.257 135.87 523.81 135.87 cv
524.811 135.87 li
525.364 135.87 525.811 136.317 525.811 136.87 cv
525.811 137.422 525.364 137.87 524.811 137.87 cv
cp
530.82 137.87 mo
529.818 137.87 li
529.265 137.87 528.818 137.422 528.818 136.87 cv
528.818 136.317 529.265 135.87 529.818 135.87 cv
530.82 135.87 li
531.372 135.87 531.82 136.317 531.82 136.87 cv
531.82 137.422 531.372 137.87 530.82 137.87 cv
cp
536.827 137.87 mo
535.826 137.87 li
535.274 137.87 534.826 137.422 534.826 136.87 cv
534.826 136.317 535.274 135.87 535.826 135.87 cv
536.827 135.87 li
537.38 135.87 537.827 136.317 537.827 136.87 cv
537.827 137.422 537.38 137.87 536.827 137.87 cv
cp
542.836 137.87 mo
541.835 137.87 li
541.282 137.87 540.835 137.422 540.835 136.87 cv
540.835 136.317 541.282 135.87 541.835 135.87 cv
542.836 135.87 li
543.389 135.87 543.836 136.317 543.836 136.87 cv
543.836 137.422 543.389 137.87 542.836 137.87 cv
cp
548.845 137.87 mo
547.843 137.87 li
547.29 137.87 546.843 137.422 546.843 136.87 cv
546.843 136.317 547.29 135.87 547.843 135.87 cv
548.845 135.87 li
549.398 135.87 549.845 136.317 549.845 136.87 cv
549.845 137.422 549.398 137.87 548.845 137.87 cv
cp
554.853 137.87 mo
553.852 137.87 li
553.299 137.87 552.852 137.422 552.852 136.87 cv
552.852 136.317 553.299 135.87 553.852 135.87 cv
554.853 135.87 li
555.406 135.87 555.853 136.317 555.853 136.87 cv
555.853 137.422 555.406 137.87 554.853 137.87 cv
cp
560.862 137.87 mo
559.861 137.87 li
559.308 137.87 558.861 137.422 558.861 136.87 cv
558.861 136.317 559.308 135.87 559.861 135.87 cv
560.862 135.87 li
561.414 135.87 561.862 136.317 561.862 136.87 cv
561.862 137.422 561.414 137.87 560.862 137.87 cv
cp
566.87 137.87 mo
565.868 137.87 li
565.316 137.87 564.868 137.422 564.868 136.87 cv
564.868 136.317 565.316 135.87 565.868 135.87 cv
566.87 135.87 li
567.423 135.87 567.87 136.317 567.87 136.87 cv
567.87 137.422 567.423 137.87 566.87 137.87 cv
cp
572.879 137.87 mo
571.877 137.87 li
571.324 137.87 570.877 137.422 570.877 136.87 cv
570.877 136.317 571.324 135.87 571.877 135.87 cv
572.879 135.87 li
573.432 135.87 573.879 136.317 573.879 136.87 cv
573.879 137.422 573.432 137.87 572.879 137.87 cv
cp
578.887 137.87 mo
577.886 137.87 li
577.333 137.87 576.886 137.422 576.886 136.87 cv
576.886 136.317 577.333 135.87 577.886 135.87 cv
578.887 135.87 li
579.44 135.87 579.887 136.317 579.887 136.87 cv
579.887 137.422 579.44 137.87 578.887 137.87 cv
cp
584.896 137.87 mo
583.894 137.87 li
583.341 137.87 582.894 137.422 582.894 136.87 cv
582.894 136.317 583.341 135.87 583.894 135.87 cv
584.896 135.87 li
585.448 135.87 585.896 136.317 585.896 136.87 cv
585.896 137.422 585.448 137.87 584.896 137.87 cv
cp
590.905 137.87 mo
589.903 137.87 li
589.35 137.87 588.903 137.422 588.903 136.87 cv
588.903 136.317 589.35 135.87 589.903 135.87 cv
590.905 135.87 li
591.457 135.87 591.905 136.317 591.905 136.87 cv
591.905 137.422 591.457 137.87 590.905 137.87 cv
cp
596.912 137.87 mo
595.911 137.87 li
595.359 137.87 594.911 137.422 594.911 136.87 cv
594.911 136.317 595.359 135.87 595.911 135.87 cv
596.912 135.87 li
597.465 135.87 597.912 136.317 597.912 136.87 cv
597.912 137.422 597.465 137.87 596.912 137.87 cv
cp
602.921 137.87 mo
601.92 137.87 li
601.367 137.87 600.92 137.422 600.92 136.87 cv
600.92 136.317 601.367 135.87 601.92 135.87 cv
602.921 135.87 li
603.474 135.87 603.921 136.317 603.921 136.87 cv
603.921 137.422 603.474 137.87 602.921 137.87 cv
cp
608.93 137.87 mo
607.928 137.87 li
607.375 137.87 606.928 137.422 606.928 136.87 cv
606.928 136.317 607.375 135.87 607.928 135.87 cv
608.93 135.87 li
609.483 135.87 609.93 136.317 609.93 136.87 cv
609.93 137.422 609.483 137.87 608.93 137.87 cv
cp
614.938 137.87 mo
613.937 137.87 li
613.384 137.87 612.937 137.422 612.937 136.87 cv
612.937 136.317 613.384 135.87 613.937 135.87 cv
614.938 135.87 li
615.49 135.87 615.938 136.317 615.938 136.87 cv
615.938 137.422 615.49 137.87 614.938 137.87 cv
cp
620.947 137.87 mo
619.946 137.87 li
619.393 137.87 618.946 137.422 618.946 136.87 cv
618.946 136.317 619.393 135.87 619.946 135.87 cv
620.947 135.87 li
621.499 135.87 621.947 136.317 621.947 136.87 cv
621.947 137.422 621.499 137.87 620.947 137.87 cv
cp
626.955 137.87 mo
625.953 137.87 li
625.401 137.87 624.953 137.422 624.953 136.87 cv
624.953 136.317 625.401 135.87 625.953 135.87 cv
626.955 135.87 li
627.508 135.87 627.955 136.317 627.955 136.87 cv
627.955 137.422 627.508 137.87 626.955 137.87 cv
cp
632.963 137.87 mo
631.962 137.87 li
631.409 137.87 630.962 137.422 630.962 136.87 cv
630.962 136.317 631.409 135.87 631.962 135.87 cv
632.963 135.87 li
633.516 135.87 633.963 136.317 633.963 136.87 cv
633.963 137.422 633.516 137.87 632.963 137.87 cv
cp
f
638.471 137.87 mo
637.971 137.87 li
637.418 137.87 636.971 137.422 636.971 136.87 cv
636.971 136.317 637.418 135.87 637.971 135.87 cv
638.471 135.87 li
639.024 135.87 639.471 136.317 639.471 136.87 cv
639.471 137.422 639.024 137.87 638.471 137.87 cv
cp
f
3.34546 137.87 mo
2.84546 137.87 li
2.29321 137.87 1.84546 137.422 1.84546 136.87 cv
1.84546 136.317 2.29321 135.87 2.84546 135.87 cv
3.34546 135.87 li
3.89771 135.87 4.34546 136.317 4.34546 136.87 cv
4.34546 137.422 3.89771 137.87 3.34546 137.87 cv
cp
f
9.30347 137.87 mo
8.3103 137.87 li
7.75806 137.87 7.3103 137.422 7.3103 136.87 cv
7.3103 136.317 7.75806 135.87 8.3103 135.87 cv
9.30347 135.87 li
9.85571 135.87 10.303 136.317 10.303 136.87 cv
10.303 137.422 9.85571 137.87 9.30347 137.87 cv
cp
15.261 137.87 mo
14.2678 137.87 li
13.7151 137.87 13.2678 137.422 13.2678 136.87 cv
13.2678 136.317 13.7151 135.87 14.2678 135.87 cv
15.261 135.87 li
15.8137 135.87 16.261 136.317 16.261 136.87 cv
16.261 137.422 15.8137 137.87 15.261 137.87 cv
cp
21.219 137.87 mo
20.2258 137.87 li
19.6731 137.87 19.2258 137.422 19.2258 136.87 cv
19.2258 136.317 19.6731 135.87 20.2258 135.87 cv
21.219 135.87 li
21.7717 135.87 22.219 136.317 22.219 136.87 cv
22.219 137.422 21.7717 137.87 21.219 137.87 cv
cp
27.176 137.87 mo
26.1838 137.87 li
25.6311 137.87 25.1838 137.422 25.1838 136.87 cv
25.1838 136.317 25.6311 135.87 26.1838 135.87 cv
27.176 135.87 li
27.7288 135.87 28.176 136.317 28.176 136.87 cv
28.176 137.422 27.7288 137.87 27.176 137.87 cv
cp
33.134 137.87 mo
32.1409 137.87 li
31.5881 137.87 31.1409 137.422 31.1409 136.87 cv
31.1409 136.317 31.5881 135.87 32.1409 135.87 cv
33.134 135.87 li
33.6868 135.87 34.134 136.317 34.134 136.87 cv
34.134 137.422 33.6868 137.87 33.134 137.87 cv
cp
39.092 137.87 mo
38.0989 137.87 li
37.5461 137.87 37.0989 137.422 37.0989 136.87 cv
37.0989 136.317 37.5461 135.87 38.0989 135.87 cv
39.092 135.87 li
39.6448 135.87 40.092 136.317 40.092 136.87 cv
40.092 137.422 39.6448 137.87 39.092 137.87 cv
cp
45.05 137.87 mo
44.0569 137.87 li
43.5042 137.87 43.0569 137.422 43.0569 136.87 cv
43.0569 136.317 43.5042 135.87 44.0569 135.87 cv
45.05 135.87 li
45.6028 135.87 46.05 136.317 46.05 136.87 cv
46.05 137.422 45.6028 137.87 45.05 137.87 cv
cp
51.0071 137.87 mo
50.0149 137.87 li
49.4622 137.87 49.0149 137.422 49.0149 136.87 cv
49.0149 136.317 49.4622 135.87 50.0149 135.87 cv
51.0071 135.87 li
51.5598 135.87 52.0071 136.317 52.0071 136.87 cv
52.0071 137.422 51.5598 137.87 51.0071 137.87 cv
cp
56.9651 137.87 mo
55.9719 137.87 li
55.4192 137.87 54.9719 137.422 54.9719 136.87 cv
54.9719 136.317 55.4192 135.87 55.9719 135.87 cv
56.9651 135.87 li
57.5178 135.87 57.9651 136.317 57.9651 136.87 cv
57.9651 137.422 57.5178 137.87 56.9651 137.87 cv
cp
62.9231 137.87 mo
61.9299 137.87 li
61.3772 137.87 60.9299 137.422 60.9299 136.87 cv
60.9299 136.317 61.3772 135.87 61.9299 135.87 cv
62.9231 135.87 li
63.4758 135.87 63.9231 136.317 63.9231 136.87 cv
63.9231 137.422 63.4758 137.87 62.9231 137.87 cv
cp
68.8801 137.87 mo
67.8879 137.87 li
67.3352 137.87 66.8879 137.422 66.8879 136.87 cv
66.8879 136.317 67.3352 135.87 67.8879 135.87 cv
68.8801 135.87 li
69.4329 135.87 69.8801 136.317 69.8801 136.87 cv
69.8801 137.422 69.4329 137.87 68.8801 137.87 cv
cp
74.8381 137.87 mo
73.845 137.87 li
73.2922 137.87 72.845 137.422 72.845 136.87 cv
72.845 136.317 73.2922 135.87 73.845 135.87 cv
74.8381 135.87 li
75.3909 135.87 75.8381 136.317 75.8381 136.87 cv
75.8381 137.422 75.3909 137.87 74.8381 137.87 cv
cp
80.7961 137.87 mo
79.803 137.87 li
79.2502 137.87 78.803 137.422 78.803 136.87 cv
78.803 136.317 79.2502 135.87 79.803 135.87 cv
80.7961 135.87 li
81.3489 135.87 81.7961 136.317 81.7961 136.87 cv
81.7961 137.422 81.3489 137.87 80.7961 137.87 cv
cp
86.7542 137.87 mo
85.761 137.87 li
85.2083 137.87 84.761 137.422 84.761 136.87 cv
84.761 136.317 85.2083 135.87 85.761 135.87 cv
86.7542 135.87 li
87.3069 135.87 87.7542 136.317 87.7542 136.87 cv
87.7542 137.422 87.3069 137.87 86.7542 137.87 cv
cp
92.7112 137.87 mo
91.719 137.87 li
91.1663 137.87 90.719 137.422 90.719 136.87 cv
90.719 136.317 91.1663 135.87 91.719 135.87 cv
92.7112 135.87 li
93.2639 135.87 93.7112 136.317 93.7112 136.87 cv
93.7112 137.422 93.2639 137.87 92.7112 137.87 cv
cp
98.6692 137.87 mo
97.676 137.87 li
97.1233 137.87 96.676 137.422 96.676 136.87 cv
96.676 136.317 97.1233 135.87 97.676 135.87 cv
98.6692 135.87 li
99.2219 135.87 99.6692 136.317 99.6692 136.87 cv
99.6692 137.422 99.2219 137.87 98.6692 137.87 cv
cp
104.627 137.87 mo
103.634 137.87 li
103.081 137.87 102.634 137.422 102.634 136.87 cv
102.634 136.317 103.081 135.87 103.634 135.87 cv
104.627 135.87 li
105.18 135.87 105.627 136.317 105.627 136.87 cv
105.627 137.422 105.18 137.87 104.627 137.87 cv
cp
110.585 137.87 mo
109.592 137.87 li
109.039 137.87 108.592 137.422 108.592 136.87 cv
108.592 136.317 109.039 135.87 109.592 135.87 cv
110.585 135.87 li
111.138 135.87 111.585 136.317 111.585 136.87 cv
111.585 137.422 111.138 137.87 110.585 137.87 cv
cp
116.542 137.87 mo
115.549 137.87 li
114.996 137.87 114.549 137.422 114.549 136.87 cv
114.549 136.317 114.996 135.87 115.549 135.87 cv
116.542 135.87 li
117.095 135.87 117.542 136.317 117.542 136.87 cv
117.542 137.422 117.095 137.87 116.542 137.87 cv
cp
122.5 137.87 mo
121.507 137.87 li
120.954 137.87 120.507 137.422 120.507 136.87 cv
120.507 136.317 120.954 135.87 121.507 135.87 cv
122.5 135.87 li
123.053 135.87 123.5 136.317 123.5 136.87 cv
123.5 137.422 123.053 137.87 122.5 137.87 cv
cp
128.458 137.87 mo
127.465 137.87 li
126.912 137.87 126.465 137.422 126.465 136.87 cv
126.465 136.317 126.912 135.87 127.465 135.87 cv
128.458 135.87 li
129.011 135.87 129.458 136.317 129.458 136.87 cv
129.458 137.422 129.011 137.87 128.458 137.87 cv
cp
134.415 137.87 mo
133.423 137.87 li
132.87 137.87 132.423 137.422 132.423 136.87 cv
132.423 136.317 132.87 135.87 133.423 135.87 cv
134.415 135.87 li
134.968 135.87 135.415 136.317 135.415 136.87 cv
135.415 137.422 134.968 137.87 134.415 137.87 cv
cp
140.373 137.87 mo
139.38 137.87 li
138.827 137.87 138.38 137.422 138.38 136.87 cv
138.38 136.317 138.827 135.87 139.38 135.87 cv
140.373 135.87 li
140.926 135.87 141.373 136.317 141.373 136.87 cv
141.373 137.422 140.926 137.87 140.373 137.87 cv
cp
146.331 137.87 mo
145.338 137.87 li
144.785 137.87 144.338 137.422 144.338 136.87 cv
144.338 136.317 144.785 135.87 145.338 135.87 cv
146.331 135.87 li
146.884 135.87 147.331 136.317 147.331 136.87 cv
147.331 137.422 146.884 137.87 146.331 137.87 cv
cp
152.289 137.87 mo
151.296 137.87 li
150.743 137.87 150.296 137.422 150.296 136.87 cv
150.296 136.317 150.743 135.87 151.296 135.87 cv
152.289 135.87 li
152.842 135.87 153.289 136.317 153.289 136.87 cv
153.289 137.422 152.842 137.87 152.289 137.87 cv
cp
158.246 137.87 mo
157.253 137.87 li
156.7 137.87 156.253 137.422 156.253 136.87 cv
156.253 136.317 156.7 135.87 157.253 135.87 cv
158.246 135.87 li
158.799 135.87 159.246 136.317 159.246 136.87 cv
159.246 137.422 158.799 137.87 158.246 137.87 cv
cp
164.204 137.87 mo
163.211 137.87 li
162.658 137.87 162.211 137.422 162.211 136.87 cv
162.211 136.317 162.658 135.87 163.211 135.87 cv
164.204 135.87 li
164.757 135.87 165.204 136.317 165.204 136.87 cv
165.204 137.422 164.757 137.87 164.204 137.87 cv
cp
170.162 137.87 mo
169.169 137.87 li
168.616 137.87 168.169 137.422 168.169 136.87 cv
168.169 136.317 168.616 135.87 169.169 135.87 cv
170.162 135.87 li
170.715 135.87 171.162 136.317 171.162 136.87 cv
171.162 137.422 170.715 137.87 170.162 137.87 cv
cp
176.119 137.87 mo
175.127 137.87 li
174.574 137.87 174.127 137.422 174.127 136.87 cv
174.127 136.317 174.574 135.87 175.127 135.87 cv
176.119 135.87 li
176.672 135.87 177.119 136.317 177.119 136.87 cv
177.119 137.422 176.672 137.87 176.119 137.87 cv
cp
182.077 137.87 mo
181.084 137.87 li
180.531 137.87 180.084 137.422 180.084 136.87 cv
180.084 136.317 180.531 135.87 181.084 135.87 cv
182.077 135.87 li
182.63 135.87 183.077 136.317 183.077 136.87 cv
183.077 137.422 182.63 137.87 182.077 137.87 cv
cp
188.035 137.87 mo
187.042 137.87 li
186.49 137.87 186.042 137.422 186.042 136.87 cv
186.042 136.317 186.49 135.87 187.042 135.87 cv
188.035 135.87 li
188.588 135.87 189.035 136.317 189.035 136.87 cv
189.035 137.422 188.588 137.87 188.035 137.87 cv
cp
193.993 137.87 mo
193 137.87 li
192.448 137.87 192 137.422 192 136.87 cv
192 136.317 192.448 135.87 193 135.87 cv
193.993 135.87 li
194.546 135.87 194.993 136.317 194.993 136.87 cv
194.993 137.422 194.546 137.87 193.993 137.87 cv
cp
199.95 137.87 mo
198.958 137.87 li
198.406 137.87 197.958 137.422 197.958 136.87 cv
197.958 136.317 198.406 135.87 198.958 135.87 cv
199.95 135.87 li
200.503 135.87 200.95 136.317 200.95 136.87 cv
200.95 137.422 200.503 137.87 199.95 137.87 cv
cp
205.908 137.87 mo
204.915 137.87 li
204.363 137.87 203.915 137.422 203.915 136.87 cv
203.915 136.317 204.363 135.87 204.915 135.87 cv
205.908 135.87 li
206.461 135.87 206.908 136.317 206.908 136.87 cv
206.908 137.422 206.461 137.87 205.908 137.87 cv
cp
211.866 137.87 mo
210.873 137.87 li
210.321 137.87 209.873 137.422 209.873 136.87 cv
209.873 136.317 210.321 135.87 210.873 135.87 cv
211.866 135.87 li
212.419 135.87 212.866 136.317 212.866 136.87 cv
212.866 137.422 212.419 137.87 211.866 137.87 cv
cp
217.823 137.87 mo
216.831 137.87 li
216.279 137.87 215.831 137.422 215.831 136.87 cv
215.831 136.317 216.279 135.87 216.831 135.87 cv
217.823 135.87 li
218.376 135.87 218.823 136.317 218.823 136.87 cv
218.823 137.422 218.376 137.87 217.823 137.87 cv
cp
223.781 137.87 mo
222.788 137.87 li
222.236 137.87 221.788 137.422 221.788 136.87 cv
221.788 136.317 222.236 135.87 222.788 135.87 cv
223.781 135.87 li
224.334 135.87 224.781 136.317 224.781 136.87 cv
224.781 137.422 224.334 137.87 223.781 137.87 cv
cp
229.74 137.87 mo
228.746 137.87 li
228.194 137.87 227.746 137.422 227.746 136.87 cv
227.746 136.317 228.194 135.87 228.746 135.87 cv
229.74 135.87 li
230.292 135.87 230.74 136.317 230.74 136.87 cv
230.74 137.422 230.292 137.87 229.74 137.87 cv
cp
235.698 137.87 mo
234.704 137.87 li
234.152 137.87 233.704 137.422 233.704 136.87 cv
233.704 136.317 234.152 135.87 234.704 135.87 cv
235.698 135.87 li
236.25 135.87 236.698 136.317 236.698 136.87 cv
236.698 137.422 236.25 137.87 235.698 137.87 cv
cp
241.655 137.87 mo
240.662 137.87 li
240.11 137.87 239.662 137.422 239.662 136.87 cv
239.662 136.317 240.11 135.87 240.662 135.87 cv
241.655 135.87 li
242.207 135.87 242.655 136.317 242.655 136.87 cv
242.655 137.422 242.207 137.87 241.655 137.87 cv
cp
f
247.119 137.87 mo
246.619 137.87 li
246.067 137.87 245.619 137.422 245.619 136.87 cv
245.619 136.317 246.067 135.87 246.619 135.87 cv
247.119 135.87 li
247.672 135.87 248.119 136.317 248.119 136.87 cv
248.119 137.422 247.672 137.87 247.119 137.87 cv
cp
f
293.923 195.378 mo
285.713 195.378 279.017 187.504 279.017 177.856 cv
279.017 170.9 282.576 164.575 287.946 161.809 cv
287.946 154.692 li
287.946 154.568 li
267.409 148.194 255.195 137.491 255.195 125.81 cv
255.195 124.657 255.096 123.516 254.996 122.201 cv
254.774 119.175 254.488 115.406 255.195 109.466 cv
255.257 108.982 255.592 108.585 256.063 108.436 cv
256.17 108.409 256.279 108.395 256.385 108.395 cv
256.758 108.395 257.112 108.559 257.353 108.858 cv
258.258 109.999 259.349 111.177 260.652 112.368 cv
259.399 111.165 258.308 109.986 257.39 108.821 cv
255.84 106.861 li
255.592 106.551 255.518 106.154 255.629 105.783 cv
259.585 91.9928 290.897 81.6012 328.471 81.6012 cv
366.046 81.6012 397.37 91.9928 401.314 105.783 cv
401.425 106.154 401.338 106.551 401.103 106.861 cv
399.553 108.821 li
397.705 111.177 395.125 113.57 391.926 115.939 cv
391.717 116.092 391.464 116.171 391.211 116.171 cv
391.014 116.171 390.816 116.124 390.637 116.026 cv
378.521 109.453 354.972 101.79 328.471 101.79 cv
301.958 101.79 278.422 109.453 266.306 116.026 cv
266.12 116.137 265.934 116.187 265.736 116.187 cv
265.537 116.187 265.351 116.137 265.178 116.05 cv
275.136 123.268 291.281 130.435 310.056 133.56 cv
310.739 133.697 li
310.787 133.697 li
311.185 133.027 311.668 132.432 312.214 131.911 cv
313.987 130.163 316.319 129.195 318.786 129.195 cv
338.082 129.195 li
340.562 129.195 342.894 130.163 344.667 131.911 cv
345.188 132.42 345.658 133.027 346.08 133.722 cv
365.326 130.671 381.832 123.355 391.939 115.951 cv
395.212 113.558 397.804 111.14 399.603 108.858 cv
399.836 108.569 400.181 108.406 400.538 108.406 cv
400.656 108.406 400.775 108.424 400.892 108.461 cv
401.375 108.585 401.71 109.007 401.747 109.503 cv
402.343 116.311 402.095 119.709 401.908 122.437 cv
401.822 123.627 401.76 124.644 401.76 125.81 cv
401.76 141.509 379.451 155.15 347.383 159.119 cv
347.296 159.751 347.159 160.371 346.948 160.991 cv
345.621 164.748 342.075 167.291 338.082 167.291 cv
318.786 167.291 li
314.793 167.291 311.235 164.748 309.92 160.966 cv
309.709 160.359 309.56 159.726 309.486 159.106 cv
306.224 158.684 303.062 158.189 299.999 157.568 cv
299.999 161.636 li
299.987 161.834 li
305.183 164.575 308.816 170.726 308.816 177.856 cv
308.816 187.504 302.145 195.378 293.923 195.378 cv
288.69 164.141 mo
284.312 166.609 281.423 171.965 281.423 177.856 cv
281.423 186.189 287.028 192.96 293.923 192.96 cv
300.805 192.96 306.41 186.189 306.41 177.856 cv
306.41 169.51 300.805 162.739 293.923 162.739 cv
293.364 162.739 292.807 162.789 292.174 162.901 cv
292.174 163.434 li
292.174 163.62 292.261 163.744 292.285 163.756 cv
292.633 163.744 li
293.29 163.744 293.836 164.29 293.836 164.947 cv
293.836 166.336 li
293.836 166.993 293.29 167.539 292.633 167.539 cv
292.211 167.539 li
290.463 167.539 288.975 166.075 288.69 164.141 cv
318.786 133.436 mo
315.934 133.436 313.627 135.755 313.627 138.595 cv
313.627 157.891 li
313.627 160.743 315.934 163.049 318.786 163.049 cv
338.082 163.049 li
340.922 163.049 343.241 160.743 343.241 157.891 cv
343.241 152.534 li
342.633 152.534 li
342.633 157.891 li
342.633 160.408 340.587 162.429 338.082 162.429 cv
318.786 162.429 li
316.281 162.429 314.247 160.408 314.247 157.891 cv
314.247 138.595 li
314.247 136.09 316.281 134.056 318.786 134.056 cv
338.082 134.056 li
340.587 134.056 342.633 136.09 342.633 138.595 cv
342.633 141.559 li
343.241 141.559 li
343.241 138.595 li
343.241 135.755 340.922 133.436 338.082 133.436 cv
318.786 133.436 li
293.923 160.321 mo
294.32 160.321 294.704 160.346 295.088 160.396 cv
295.088 156.663 li
295.113 156.526 li
294.357 156.353 293.601 156.154 292.857 155.969 cv
292.857 160.371 li
293.228 160.346 293.575 160.321 293.923 160.321 cv
303.93 141.385 mo
302.578 141.385 301.438 143.01 301.438 144.944 cv
301.438 146.854 302.578 148.503 303.93 148.503 cv
305.257 148.503 306.41 146.854 306.41 144.944 cv
306.41 143.01 305.257 141.385 303.93 141.385 cv
369.01 138.26 mo
368.129 138.26 367.15 139.773 367.15 141.819 cv
367.15 143.841 368.129 145.379 369.01 145.379 cv
369.89 145.379 370.895 143.841 370.895 141.819 cv
370.895 139.773 369.89 138.26 369.01 138.26 cv
286.085 136.623 mo
285.193 136.623 284.213 138.136 284.213 140.183 cv
284.213 142.204 285.193 143.729 286.085 143.729 cv
286.966 143.729 287.946 142.204 287.946 140.183 cv
287.946 138.136 286.966 136.623 286.085 136.623 cv
385.23 130.783 mo
384.907 130.783 383.978 131.998 383.978 134.329 cv
383.978 136.673 384.907 137.888 385.23 137.888 cv
385.552 137.888 386.494 136.673 386.494 134.329 cv
386.494 131.998 385.552 130.783 385.23 130.783 cv
269.853 129.133 mo
269.531 129.133 268.6 130.361 268.6 132.692 cv
268.6 135.024 269.531 136.251 269.853 136.251 cv
270.175 136.251 271.117 135.024 271.117 132.692 cv
271.117 130.361 270.175 129.133 269.853 129.133 cv
395.919 122.375 mo
395.684 122.647 395.275 123.491 395.275 124.805 cv
395.275 126.132 395.684 126.976 395.919 127.236 cv
396.155 126.976 396.552 126.132 396.552 124.805 cv
396.552 123.491 396.155 122.647 395.919 122.375 cv
259.176 120.738 mo
258.928 121.011 258.543 121.842 258.543 123.169 cv
258.543 124.483 258.928 125.339 259.176 125.599 cv
259.424 125.339 259.821 124.483 259.821 123.169 cv
259.821 121.842 259.424 121.011 259.176 120.738 cv
.652349 .652349 .652349 rgb
f
337.995 142.266 mo
335.069 142.266 li
333.121 142.266 331.522 143.865 331.522 145.813 cv
331.522 147.759 333.121 149.347 335.069 149.347 cv
337.995 149.347 li
337.834 149.545 337.735 149.818 337.735 150.091 cv
337.735 156.613 li
337.487 156.353 337.14 156.217 336.768 156.241 cv
329.661 156.737 322.246 156.737 315.128 156.241 cv
315.041 156.241 li
314.706 156.241 314.408 156.365 314.173 156.588 cv
314.173 137.355 li
314.173 136.19 315.128 135.234 316.306 135.234 cv
335.602 135.234 li
336.768 135.234 337.735 136.19 337.735 137.355 cv
337.735 141.534 li
337.735 141.807 337.834 142.055 337.995 142.266 cv
cp
.34902 .756863 1 rgb
f
287.883 138.942 mo
287.883 135.594 285.998 132.965 283.606 132.965 cv
281.199 132.965 279.315 135.594 279.315 138.942 cv
279.315 142.291 281.199 144.907 283.606 144.907 cv
285.998 144.907 287.883 142.291 287.883 138.942 cv
cp
308.767 134.974 mo
308.878 134.999 308.99 134.999 309.114 134.974 cv
308.865 135.731 308.741 136.524 308.741 137.355 cv
308.741 155.733 li
308.593 155.659 308.432 155.609 308.271 155.597 cv
307.527 155.498 li
301.823 154.791 296.341 153.761 291.244 152.459 cv
291.306 152.298 291.356 152.112 291.356 151.939 cv
291.356 150.562 li
291.356 149.892 290.81 149.347 290.153 149.347 cv
289.732 149.347 li
288.491 149.347 287.388 150.091 286.755 151.194 cv
268.005 145.503 256.423 136.301 255.22 126.294 cv
255.666 126.641 256.162 126.839 256.696 126.839 cv
258.482 126.839 259.746 124.781 259.746 121.928 cv
259.746 119.088 258.482 117.03 256.696 117.03 cv
255.939 117.03 255.257 117.402 254.748 118.059 cv
254.65 116.174 254.624 114.005 254.835 111.276 cv
264.694 121.68 285.589 131.13 307.179 134.701 cv
307.836 134.813 li
308.147 134.887 308.469 134.924 308.767 134.974 cv
cp
306.336 143.704 mo
306.336 140.406 304.154 137.727 301.45 137.727 cv
298.746 137.727 296.539 140.406 296.539 143.704 cv
296.539 146.978 298.746 149.669 301.45 149.669 cv
304.154 149.669 306.336 146.978 306.336 143.704 cv
cp
263.702 131.452 mo
263.702 134.862 265.289 137.429 267.372 137.429 cv
269.468 137.429 271.043 134.862 271.043 131.452 cv
271.043 128.054 269.468 125.487 267.372 125.487 cv
265.289 125.487 263.702 128.054 263.702 131.452 cv
cp
f
370.832 140.579 mo
370.832 137.231 368.948 134.602 366.53 134.602 cv
364.136 134.602 362.251 137.231 362.251 140.579 cv
362.251 143.927 364.136 146.544 366.53 146.544 cv
368.948 146.544 370.832 143.927 370.832 140.579 cv
cp
386.42 133.089 mo
386.42 129.679 384.845 127.125 382.749 127.125 cv
380.666 127.125 379.079 129.679 379.079 133.089 cv
379.079 136.487 380.666 139.066 382.749 139.066 cv
384.845 139.066 386.42 136.487 386.42 133.089 cv
cp
343.179 155.758 mo
343.179 150.091 li
343.179 149.818 343.079 149.545 342.918 149.347 cv
344.729 149.347 li
344.642 149.446 344.58 149.557 344.531 149.694 cv
344.357 150.152 344.493 150.686 344.89 151.021 cv
345.845 151.827 346.998 152.249 348.189 152.249 cv
351.277 152.249 353.781 149.371 353.781 145.813 cv
353.781 142.254 351.277 139.377 348.189 139.377 cv
346.998 139.377 345.869 139.786 344.903 140.592 cv
344.493 140.914 344.357 141.447 344.531 141.931 cv
344.58 142.055 344.642 142.167 344.729 142.266 cv
342.918 142.266 li
343.079 142.055 343.179 141.807 343.179 141.534 cv
343.179 137.355 li
343.179 136.537 343.055 135.731 342.794 134.999 cv
342.906 135.011 343.018 135.011 343.142 134.999 cv
364.991 131.675 386.941 121.941 397.073 111.338 cv
397.37 116.1 397.172 118.803 397.023 121.036 cv
396.936 122.213 396.862 123.33 396.862 124.57 cv
396.862 139.178 374.974 151.926 343.65 155.597 cv
343.464 155.621 343.303 155.671 343.179 155.758 cv
cp
393.439 128.476 mo
395.212 128.476 396.478 126.418 396.478 123.566 cv
396.478 120.738 395.212 118.655 393.439 118.655 cv
391.666 118.655 390.376 120.738 390.376 123.566 cv
390.376 126.418 391.666 128.476 393.439 128.476 cv
cp
f
396.341 104.642 mo
395.175 106.093 li
393.588 108.139 391.38 110.21 388.627 112.305 cv
376.078 105.683 352.454 98.1437 325.991 98.1437 cv
299.528 98.1437 275.905 105.683 263.355 112.305 cv
260.602 110.21 258.395 108.139 256.807 106.093 cv
255.642 104.642 li
260.019 92.3277 290.599 82.7667 325.991 82.7667 cv
361.383 82.7667 391.963 92.3277 396.341 104.642 cv
cp
1 1 1 rgb
f
346.415 144.684 mo
347.023 144.684 347.519 145.18 347.519 145.813 cv
347.519 146.42 347.023 146.941 346.415 146.941 cv
335.069 146.941 li
334.461 146.941 333.94 146.42 333.94 145.813 cv
333.94 145.18 334.461 144.684 335.069 144.684 cv
346.415 144.684 li
cp
f
396.478 123.566 mo
396.478 126.418 395.212 128.476 393.439 128.476 cv
391.666 128.476 390.376 126.418 390.376 123.566 cv
390.376 120.738 391.666 118.655 393.439 118.655 cv
395.212 118.655 396.478 120.738 396.478 123.566 cv
cp
393.439 125.996 mo
393.675 125.735 394.072 124.892 394.072 123.566 cv
394.072 122.251 393.675 121.408 393.439 121.135 cv
393.203 121.408 392.794 122.251 392.794 123.566 cv
392.794 124.892 393.203 125.735 393.439 125.996 cv
cp
0 0 0 rgb
f
386.42 133.089 mo
386.42 136.487 384.845 139.066 382.749 139.066 cv
380.666 139.066 379.079 136.487 379.079 133.089 cv
379.079 129.679 380.666 127.125 382.749 127.125 cv
384.845 127.125 386.42 129.679 386.42 133.089 cv
cp
384.015 133.089 mo
384.015 130.758 383.073 129.543 382.749 129.543 cv
382.427 129.543 381.497 130.758 381.497 133.089 cv
381.497 135.433 382.427 136.648 382.749 136.648 cv
383.073 136.648 384.015 135.433 384.015 133.089 cv
cp
f
370.832 140.579 mo
370.832 143.927 368.948 146.544 366.53 146.544 cv
364.136 146.544 362.251 143.927 362.251 140.579 cv
362.251 137.231 364.136 134.602 366.53 134.602 cv
368.948 134.602 370.832 137.231 370.832 140.579 cv
cp
368.414 140.579 mo
368.414 138.533 367.409 137.02 366.53 137.02 cv
365.649 137.02 364.669 138.533 364.669 140.579 cv
364.669 142.601 365.649 144.138 366.53 144.138 cv
367.409 144.138 368.414 142.601 368.414 140.579 cv
cp
f
306.336 143.704 mo
306.336 146.978 304.154 149.669 301.45 149.669 cv
298.746 149.669 296.539 146.978 296.539 143.704 cv
296.539 140.406 298.746 137.727 301.45 137.727 cv
304.154 137.727 306.336 140.406 306.336 143.704 cv
cp
301.45 140.145 mo
300.098 140.145 298.957 141.77 298.957 143.704 cv
298.957 145.614 300.098 147.263 301.45 147.263 cv
302.777 147.263 303.93 145.614 303.93 143.704 cv
303.93 141.77 302.777 140.145 301.45 140.145 cv
cp
f
297.519 156.328 mo
297.519 160.396 li
297.506 160.594 li
296.924 160.296 296.328 160.036 295.696 159.825 cv
295.721 159.676 li
295.721 155.969 li
296.316 156.105 296.911 156.217 297.519 156.328 cv
cp
f
297.506 160.594 mo
297.445 160.917 297.246 161.214 296.973 161.388 cv
296.775 161.537 296.552 161.599 296.316 161.599 cv
296.155 161.599 295.993 161.562 295.845 161.5 cv
295.175 161.214 li
294.99 161.152 294.828 161.016 294.716 160.867 cv
294.914 160.842 295.101 160.743 295.262 160.619 cv
295.51 160.421 295.671 160.135 295.696 159.825 cv
296.328 160.036 296.924 160.296 297.506 160.594 cv
cp
f
297.519 155.708 mo
297.519 156.328 li
296.911 156.217 296.316 156.105 295.721 155.969 cv
295.721 155.547 li
295.721 155.113 295.497 154.741 295.151 154.543 cv
295.349 154.456 295.56 154.419 295.771 154.431 cv
296.428 154.505 li
297.048 154.567 297.519 155.076 297.519 155.708 cv
cp
f
294.431 159.441 mo
294.431 155.696 li
294.853 155.783 295.286 155.882 295.721 155.969 cv
295.721 159.676 li
295.696 159.825 li
295.286 159.664 294.865 159.54 294.431 159.441 cv
cp
f
294.431 155.646 mo
294.431 155.299 294.58 154.964 294.828 154.741 cv
294.927 154.667 295.038 154.592 295.151 154.543 cv
295.497 154.741 295.721 155.113 295.721 155.547 cv
295.721 155.969 li
295.286 155.882 294.853 155.783 294.431 155.696 cv
294.431 155.646 li
cp
f
295.262 160.619 mo
295.101 160.743 294.914 160.842 294.716 160.867 cv
294.531 160.669 294.431 160.396 294.431 160.098 cv
294.431 159.441 li
294.865 159.54 295.286 159.664 295.696 159.825 cv
295.671 160.135 295.51 160.421 295.262 160.619 cv
cp
f
292.609 159.639 mo
292.609 159.156 li
293.229 159.205 293.836 159.292 294.431 159.441 cv
294.431 160.098 li
294.431 160.396 294.531 160.669 294.716 160.867 cv
294.505 160.892 li
294.257 160.855 li
294.146 160.842 294.047 160.83 293.935 160.842 cv
293.613 160.867 293.253 160.755 293.018 160.532 cv
292.757 160.309 292.609 159.974 292.609 159.639 cv
cp
f
292.609 159.156 mo
292.609 155.423 li
292.633 155.287 li
293.229 155.436 293.823 155.56 294.431 155.696 cv
294.431 159.441 li
293.836 159.292 293.229 159.205 292.609 159.156 cv
cp
f
293.092 154.456 mo
293.402 154.22 293.799 154.146 294.171 154.257 cv
294.32 154.307 294.444 154.319 294.592 154.344 cv
294.803 154.357 294.99 154.419 295.151 154.543 cv
295.038 154.592 294.927 154.667 294.828 154.741 cv
294.58 154.964 294.431 155.299 294.431 155.646 cv
294.431 155.696 li
293.823 155.56 293.229 155.436 292.633 155.287 cv
292.657 154.952 292.819 154.642 293.092 154.456 cv
cp
f
283.606 132.965 mo
285.998 132.965 287.883 135.594 287.883 138.942 cv
287.883 142.291 285.998 144.907 283.606 144.907 cv
281.199 144.907 279.315 142.291 279.315 138.942 cv
279.315 135.594 281.199 132.965 283.606 132.965 cv
cp
285.465 138.942 mo
285.465 136.896 284.486 135.383 283.606 135.383 cv
282.712 135.383 281.733 136.896 281.733 138.942 cv
281.733 140.963 282.712 142.489 283.606 142.489 cv
284.486 142.489 285.465 140.963 285.465 138.942 cv
cp
f
263.702 131.452 mo
263.702 128.054 265.289 125.487 267.372 125.487 cv
269.468 125.487 271.043 128.054 271.043 131.452 cv
271.043 134.862 269.468 137.429 267.372 137.429 cv
265.289 137.429 263.702 134.862 263.702 131.452 cv
cp
268.638 131.452 mo
268.638 129.121 267.695 127.893 267.372 127.893 cv
267.05 127.893 266.12 129.121 266.12 131.452 cv
266.12 133.784 267.05 135.011 267.372 135.011 cv
267.695 135.011 268.638 133.784 268.638 131.452 cv
cp
f
325.991 80.3609 mo
363.566 80.3609 394.89 90.753 398.833 104.543 cv
398.946 104.915 398.859 105.312 398.622 105.621 cv
397.073 107.581 li
395.225 109.937 392.646 112.33 389.447 114.699 cv
389.074 114.972 388.566 115.009 388.156 114.786 cv
376.041 108.213 352.491 100.549 325.991 100.549 cv
299.479 100.549 275.942 108.213 263.826 114.786 cv
263.64 114.897 263.454 114.947 263.255 114.947 cv
263.057 114.947 262.871 114.897 262.698 114.811 cv
262.536 114.699 li
261.99 114.302 261.457 113.893 260.961 113.496 cv
260.341 113.012 259.746 112.516 259.188 112.033 cv
258.828 111.735 258.493 111.438 258.171 111.128 cv
256.919 109.924 255.827 108.746 254.909 107.581 cv
253.36 105.621 li
253.112 105.312 253.037 104.915 253.149 104.543 cv
257.105 90.753 288.417 80.3609 325.991 80.3609 cv
cp
325.991 98.1437 mo
352.454 98.1437 376.078 105.683 388.627 112.305 cv
391.38 110.21 393.588 108.139 395.175 106.093 cv
396.341 104.642 li
391.963 92.3277 361.383 82.7667 325.991 82.7667 cv
290.599 82.7667 260.019 92.3277 255.642 104.642 cv
256.807 106.093 li
258.395 108.139 260.602 110.21 263.355 112.305 cv
275.905 105.683 299.528 98.1437 325.991 98.1437 cv
cp
f
291.244 152.459 mo
296.341 153.761 301.823 154.791 307.527 155.498 cv
308.271 155.597 li
308.432 155.609 308.593 155.659 308.741 155.733 cv
308.741 137.355 li
308.741 136.524 308.865 135.731 309.114 134.974 cv
308.99 134.999 308.878 134.999 308.767 134.974 cv
308.469 134.924 308.147 134.887 307.836 134.813 cv
307.179 134.701 li
285.589 131.13 264.694 121.68 254.835 111.276 cv
254.624 114.005 254.65 116.174 254.748 118.059 cv
255.257 117.402 255.939 117.03 256.696 117.03 cv
258.482 117.03 259.746 119.088 259.746 121.928 cv
259.746 124.781 258.482 126.839 256.696 126.839 cv
256.162 126.839 255.666 126.641 255.22 126.294 cv
256.423 136.301 268.005 145.503 286.755 151.194 cv
287.388 150.091 288.491 149.347 289.732 149.347 cv
290.153 149.347 li
290.81 149.347 291.356 149.892 291.356 150.562 cv
291.356 151.939 li
291.356 152.112 291.306 152.298 291.244 152.459 cv
cp
303.93 176.616 mo
303.93 168.27 298.325 161.5 291.443 161.5 cv
290.885 161.5 290.326 161.549 289.694 161.661 cv
289.694 162.194 li
289.694 162.38 289.781 162.504 289.806 162.516 cv
290.153 162.504 li
290.81 162.504 291.356 163.049 291.356 163.707 cv
291.356 165.096 li
291.356 165.753 290.81 166.298 290.153 166.298 cv
289.732 166.298 li
287.983 166.298 286.494 164.835 286.209 162.9 cv
281.832 165.368 278.943 170.726 278.943 176.616 cv
278.943 184.949 284.548 191.72 291.443 191.72 cv
298.325 191.72 303.93 184.949 303.93 176.616 cv
cp
297.506 160.594 mo
302.702 163.335 306.336 169.485 306.336 176.616 cv
306.336 186.264 299.664 194.138 291.443 194.138 cv
283.234 194.138 276.536 186.264 276.536 176.616 cv
276.536 169.659 280.096 163.335 285.465 160.569 cv
285.465 153.451 li
285.465 153.327 li
264.93 146.953 252.715 136.252 252.715 124.57 cv
252.715 123.417 252.615 122.275 252.517 120.961 cv
252.293 117.936 252.008 114.166 252.715 108.226 cv
252.777 107.742 253.112 107.345 253.583 107.196 cv
254.067 107.072 254.563 107.234 254.872 107.618 cv
255.778 108.759 256.869 109.937 258.171 111.128 cv
258.493 111.438 258.828 111.735 259.188 112.033 cv
259.746 112.516 260.341 113.012 260.961 113.496 cv
261.457 113.893 261.99 114.302 262.536 114.699 cv
262.698 114.811 li
272.656 122.027 288.801 129.195 307.576 132.32 cv
308.258 132.457 li
308.308 132.457 li
308.704 131.787 309.188 131.192 309.734 130.671 cv
311.507 128.922 313.838 127.955 316.306 127.955 cv
335.602 127.955 li
338.082 127.955 340.413 128.922 342.187 130.671 cv
342.707 131.179 343.179 131.787 343.6 132.482 cv
362.846 129.431 379.352 122.114 389.458 114.711 cv
392.733 112.318 395.324 109.9 397.122 107.618 cv
397.432 107.234 397.941 107.072 398.411 107.221 cv
398.896 107.345 399.231 107.767 399.268 108.263 cv
399.863 115.071 399.615 118.469 399.429 121.197 cv
399.342 122.387 399.28 123.404 399.28 124.57 cv
399.28 140.269 376.971 153.91 344.903 157.879 cv
344.816 158.511 344.679 159.131 344.468 159.751 cv
343.142 163.508 339.595 166.05 335.602 166.05 cv
316.306 166.05 li
312.313 166.05 308.754 163.508 307.44 159.726 cv
307.229 159.118 307.08 158.486 307.005 157.866 cv
303.744 157.444 300.582 156.948 297.519 156.328 cv
297.519 155.708 li
297.519 155.076 297.048 154.567 296.428 154.505 cv
295.771 154.431 li
295.56 154.419 295.349 154.456 295.151 154.543 cv
294.99 154.419 294.803 154.357 294.592 154.344 cv
294.444 154.319 294.32 154.307 294.171 154.257 cv
293.799 154.146 293.402 154.22 293.092 154.456 cv
292.819 154.642 292.657 154.952 292.633 155.287 cv
291.876 155.113 291.12 154.915 290.376 154.729 cv
290.376 159.131 li
290.748 159.106 291.095 159.081 291.443 159.081 cv
291.839 159.081 292.224 159.106 292.609 159.156 cv
292.609 159.639 li
292.609 159.974 292.757 160.309 293.018 160.532 cv
293.253 160.755 293.613 160.867 293.935 160.842 cv
294.047 160.83 294.146 160.842 294.257 160.855 cv
294.505 160.892 li
294.716 160.867 li
294.828 161.016 294.99 161.152 295.175 161.214 cv
295.845 161.5 li
295.993 161.562 296.155 161.599 296.316 161.599 cv
296.552 161.599 296.775 161.537 296.973 161.388 cv
297.246 161.214 297.445 160.917 297.506 160.594 cv
cp
316.306 132.196 mo
313.454 132.196 311.148 134.515 311.148 137.355 cv
311.148 156.65 li
311.148 159.503 313.454 161.81 316.306 161.81 cv
335.602 161.81 li
338.442 161.81 340.761 159.503 340.761 156.65 cv
340.761 151.294 li
340.153 151.294 li
340.153 156.65 li
340.153 159.168 338.107 161.19 335.602 161.19 cv
316.306 161.19 li
313.801 161.19 311.768 159.168 311.768 156.65 cv
311.768 137.355 li
311.768 134.85 313.801 132.816 316.306 132.816 cv
335.602 132.816 li
338.107 132.816 340.153 134.85 340.153 137.355 cv
340.153 140.319 li
340.761 140.319 li
340.761 137.355 li
340.761 134.515 338.442 132.196 335.602 132.196 cv
316.306 132.196 li
cp
337.995 149.347 mo
335.069 149.347 li
333.121 149.347 331.522 147.759 331.522 145.813 cv
331.522 143.865 333.121 142.266 335.069 142.266 cv
337.995 142.266 li
337.834 142.055 337.735 141.807 337.735 141.534 cv
337.735 137.355 li
337.735 136.19 336.768 135.234 335.602 135.234 cv
316.306 135.234 li
315.128 135.234 314.173 136.19 314.173 137.355 cv
314.173 156.588 li
314.408 156.365 314.706 156.241 315.041 156.241 cv
315.128 156.241 li
322.246 156.737 329.661 156.737 336.768 156.241 cv
337.14 156.217 337.487 156.353 337.735 156.613 cv
337.735 150.091 li
337.735 149.818 337.834 149.545 337.995 149.347 cv
cp
335.069 144.684 mo
334.461 144.684 333.94 145.18 333.94 145.813 cv
333.94 146.42 334.461 146.941 335.069 146.941 cv
346.415 146.941 li
347.023 146.941 347.519 146.42 347.519 145.813 cv
347.519 145.18 347.023 144.684 346.415 144.684 cv
335.069 144.684 li
cp
342.794 134.999 mo
343.055 135.731 343.179 136.537 343.179 137.355 cv
343.179 141.534 li
343.179 141.807 343.079 142.055 342.918 142.266 cv
344.729 142.266 li
344.642 142.167 344.58 142.055 344.531 141.931 cv
344.357 141.447 344.493 140.914 344.903 140.592 cv
345.869 139.786 346.998 139.377 348.189 139.377 cv
351.277 139.377 353.781 142.254 353.781 145.813 cv
353.781 149.371 351.277 152.249 348.189 152.249 cv
346.998 152.249 345.845 151.827 344.89 151.021 cv
344.493 150.686 344.357 150.152 344.531 149.694 cv
344.58 149.557 344.642 149.446 344.729 149.347 cv
342.918 149.347 li
343.079 149.545 343.179 149.818 343.179 150.091 cv
343.179 155.758 li
343.303 155.671 343.464 155.621 343.65 155.597 cv
374.974 151.926 396.862 139.178 396.862 124.57 cv
396.862 123.33 396.936 122.213 397.023 121.036 cv
397.172 118.803 397.37 116.1 397.073 111.338 cv
386.941 121.941 364.991 131.675 343.142 134.999 cv
343.018 135.011 342.906 135.011 342.794 134.999 cv
cp
256.696 124.359 mo
256.944 124.099 257.34 123.243 257.34 121.928 cv
257.34 120.602 256.944 119.771 256.696 119.498 cv
256.448 119.771 256.063 120.602 256.063 121.928 cv
256.063 123.243 256.448 124.099 256.696 124.359 cv
cp
f
205.25 103.247 mo
214.673 99.0987 220.488 92.8824 218.276 85.7496 cv
216.1 78.7301 207.516 75.1334 199.148 77.7291 cv
191.194 80.1988 186.428 83.3038 184.972 86.9664 cv
184.09 89.1842 186.902 92.1935 188.88 94.7467 cv
196.055 103.996 196.936 107.479 205.25 103.247 cv
cp
222.628 109.157 mo
223.706 110.44 224.115 112.082 223.851 114.048 cv
223.101 119.599 217.059 122.291 211.766 122.453 cv
209.2 122.53 207.025 121.721 204.723 120.87 cv
202.433 120.025 200.072 119.15 196.876 118.892 cv
191.859 118.478 188.346 119.03 185.541 122.932 cv
186.26 124.55 184.864 125.725 183.551 124.748 cv
183.131 125.713 182.999 126.834 183.221 127.65 cv
183.473 128.561 183.647 131.162 181.207 130.167 cv
180.218 134.339 175.345 133.943 173.336 131.624 cv
171.521 129.532 171.688 125.659 174.404 124.755 cv
174.829 124.61 175.861 125.659 175.662 126.685 cv
175.662 126.685 174.871 127.589 174.985 128.621 cv
175.165 130.245 176.55 132.037 178.942 130.077 cv
181.872 127.668 178.51 123.46 176.13 124.91 cv
175.561 124.838 174.877 123.921 175.141 123.525 cv
176.778 121.086 180.086 123.394 182.01 122.848 cv
180.614 120.54 182.01 119.911 183.653 120.918 cv
187.123 116.404 191.572 115.733 197.098 116.189 cv
200.664 116.476 203.321 117.459 205.664 118.322 cv
207.804 119.114 209.644 119.791 211.682 119.737 cv
215.177 119.635 220.59 117.939 221.159 113.689 cv
221.321 112.496 221.123 111.585 220.554 110.907 cv
219.475 109.625 217.233 109.277 215.542 109.211 cv
211.688 109.061 208.289 110.206 204.693 111.423 cv
199.406 113.209 193.933 115.056 186.5 113.119 cv
182.184 111.992 179.247 109.055 178.426 105.063 cv
177.569 100.855 179.157 96.1857 182.424 92.9664 cv
177.773 84.2809 189.425 79.9352 198.177 77.2193 cv
207.378 74.3663 216.807 78.4122 219.247 86.2648 cv
221.681 94.1114 216.633 101.395 204.07 107.113 cv
194.221 111.597 188.527 102.042 183.935 95.3043 cv
181.603 97.8639 180.451 101.419 181.087 104.518 cv
181.698 107.503 183.863 109.625 187.184 110.494 cv
193.837 112.226 198.687 110.59 203.823 108.852 cv
207.498 107.61 211.292 106.328 215.645 106.496 cv
218.9 106.622 221.249 107.521 222.628 109.157 cv
cp
f
209.68 94.6871 mo
214.331 93.9674 214.608 86.5406 210.513 83.4059 cv
210.465 83.3458 207.558 79.9889 203.189 80.8043 cv
199.178 81.5475 199.436 85.2159 203.59 85.8634 cv
205.58 86.1749 206.461 88.0992 207.019 90.191 cv
207.468 91.8575 207.546 93.1466 208.739 94.4772 cv
208.943 94.7047 209.38 94.735 209.68 94.6871 cv
cp
212.114 81.3194 mo
214.614 83.3277 215.896 86.8224 215.315 90.0831 cv
214.871 92.5831 213.397 94.399 211.269 95.0587 cv
210.999 95.1427 210.717 95.2023 210.429 95.2506 cv
209.494 95.3941 208.625 95.1305 208.098 94.5431 cv
206.881 93.1822 206.563 91.8336 206.257 90.5328 cv
206.192 90.2394 206.119 89.9396 206.035 89.6217 cv
205.328 86.9781 204.501 86.5289 203.865 86.4269 cv
201.234 86.0133 199.436 84.4786 199.292 82.5065 cv
199.166 80.7384 200.443 79.1734 202.553 78.5201 cv
202.828 78.4366 203.116 78.3585 203.422 78.3043 cv
207.846 77.4835 211.166 80.2345 212.114 81.3194 cv
cp
f
621.334 170.743 mo
622.327 168.465 621.906 165.582 620.304 163.708 cv
620.294 163.695 li
620.212 163.588 620.139 163.516 620.041 163.398 cv
619.693 163.063 li
619.43 162.826 619.209 162.647 618.99 162.503 cv
618.48 162.166 617.956 161.904 617.42 161.718 cv
616.456 161.411 615.467 161.358 614.564 161.578 cv
614.315 161.645 614.055 161.554 613.877 161.373 cv
613.7 161.191 613.637 160.927 613.709 160.685 cv
614.118 159.269 614.031 157.856 613.996 157.454 cv
613.873 156.318 613.404 155.14 612.702 154.244 cv
611.183 152.243 608.513 151.223 606.05 151.701 cv
604.824 151.917 603.617 152.531 602.729 153.369 cv
601.797 154.246 601.154 155.347 600.868 156.554 cv
600.291 158.86 600.639 161.986 602.209 163.224 cv
602.411 163.386 602.511 163.65 602.471 163.907 cv
602.436 164.089 602.338 164.249 602.194 164.359 cv
600.669 166.37 599.352 167.942 598.044 169.286 cv
596.425 170.988 594.626 172.567 592.719 173.979 cv
590.565 175.531 588.595 176.716 586.677 177.626 cv
584.841 178.548 582.786 179.364 580.58 180.058 cv
580.333 180.132 580.065 180.072 579.882 179.899 cv
578.272 178.399 576.099 177.661 574.059 177.926 cv
573.837 177.951 573.611 177.984 573.394 178.03 cv
571.15 178.505 569.216 180.135 568.463 182.238 cv
567.6 184.437 568.035 187.113 569.537 188.928 cv
570.666 190.325 573.829 191.876 575.535 191.551 cv
575.796 191.503 576.066 191.607 576.234 191.812 cv
576.396 192.026 576.434 192.31 576.318 192.554 cv
575.511 194.332 575.779 196.248 577.149 198.404 cv
578.312 200.24 580.884 201.244 583.394 200.851 cv
584.615 200.68 585.81 200.149 586.707 199.389 cv
587.682 198.576 588.414 197.515 588.826 196.324 cv
589.533 194.385 589.283 192.1 588.16 190.212 cv
588.031 189.984 588.032 189.713 588.16 189.489 cv
589.356 187.41 590.565 185.634 591.858 184.046 cv
593.159 182.367 594.75 180.7 596.703 178.957 cv
598.49 177.395 600.42 175.985 602.439 174.754 cv
603.705 173.974 605.438 173.395 607.116 172.835 cv
608.004 172.545 608.836 172.266 609.577 171.97 cv
609.893 171.838 610.246 171.953 610.436 172.227 cv
611.507 173.804 613.484 174.788 615.475 174.738 cv
617.935 174.729 620.391 173.047 621.334 170.743 cv
cp
621.402 162.788 mo
623.366 165.097 623.864 168.512 622.65 171.297 cv
621.486 174.145 618.543 176.156 615.492 176.167 cv
613.24 176.227 610.984 175.193 609.601 173.492 cv
608.964 173.73 608.281 173.954 607.572 174.192 cv
605.969 174.729 604.317 175.276 603.187 175.976 cv
601.226 177.166 599.365 178.525 597.647 180.028 cv
595.766 181.705 594.238 183.315 592.981 184.932 cv
591.791 186.39 590.693 187.996 589.603 189.849 cv
590.751 192.03 590.974 194.598 590.178 196.805 cv
589.677 198.233 588.793 199.509 587.625 200.48 cv
586.666 201.297 585.42 201.897 584.134 202.17 cv
583.959 202.207 583.782 202.236 583.607 202.267 cv
580.558 202.737 577.397 201.471 575.945 199.171 cv
574.565 197.002 574.135 194.938 574.646 193.003 cv
572.432 192.829 569.628 191.319 568.43 189.835 cv
566.583 187.604 566.071 184.425 567.123 181.74 cv
568.123 178.942 570.846 176.831 573.89 176.508 cv
576.2 176.208 578.656 176.973 580.535 178.569 cv
582.526 177.929 584.375 177.179 586.054 176.341 cv
587.9 175.468 589.804 174.319 591.876 172.828 cv
593.714 171.467 595.443 169.94 597.017 168.298 cv
598.209 167.067 599.412 165.643 600.792 163.846 cv
599.133 162.013 598.847 158.735 599.482 156.212 cv
599.827 154.744 600.61 153.402 601.742 152.336 cv
602.831 151.302 604.303 150.559 605.788 150.296 cv
608.763 149.716 611.998 150.952 613.832 153.369 cv
614.686 154.466 615.269 155.906 615.42 157.313 cv
615.455 157.685 615.519 158.775 615.317 160.03 cv
616.153 159.978 617.018 160.094 617.864 160.36 cv
618.531 160.584 619.17 160.909 619.781 161.313 cv
620.061 161.494 620.343 161.719 620.661 162.017 cv
621.094 162.437 li
621.217 162.571 621.295 162.665 621.402 162.788 cv
cp
f
151.636 120.141 mo
151.636 127.516 li
151.636 129.967 149.642 131.954 147.198 131.954 cv
124.487 131.954 li
122.042 131.954 120.056 129.967 120.056 127.516 cv
120.056 120.141 li
120.056 120.541 120.37 120.856 120.771 120.856 cv
121.486 120.856 li
121.486 127.516 li
121.486 129.174 122.828 130.525 124.487 130.525 cv
147.198 130.525 li
148.856 130.525 150.206 129.174 150.206 127.516 cv
150.206 120.856 li
150.921 120.856 li
151.314 120.856 151.636 120.541 151.636 120.141 cv
cp
f
151.636 91.4264 mo
151.636 120.141 li
151.636 120.541 151.314 120.856 150.921 120.856 cv
150.206 120.856 li
150.206 119.426 li
150.206 92.1412 li
150.206 90.712 li
150.921 90.712 li
151.314 90.712 151.636 91.0333 151.636 91.4264 cv
cp
f
151.636 84.4659 mo
151.636 91.4264 li
151.636 91.0333 151.314 90.712 150.921 90.712 cv
150.206 90.712 li
150.206 84.4659 li
150.206 82.8082 148.856 81.4645 147.198 81.4645 cv
141.109 81.4645 li
140.716 81.4645 140.395 81.1432 140.395 80.7501 cv
140.395 75.7618 li
140.701 75.7618 li
141.095 75.7618 141.474 75.6974 141.823 75.5758 cv
141.823 80.0353 li
147.198 80.0353 li
149.642 80.0353 151.636 82.0221 151.636 84.4659 cv
cp
f
150.206 119.426 mo
150.206 120.856 li
121.486 120.856 li
121.486 119.426 li
150.206 119.426 li
cp
f
150.206 90.712 mo
150.206 92.1412 li
121.486 92.1412 li
121.486 90.712 li
150.206 90.712 li
cp
f
144.339 106.313 mo
144.839 105.791 145.082 104.99 144.975 104.161 cv
144.933 103.783 144.804 103.497 144.64 103.411 cv
144.561 103.361 144.44 103.347 144.311 103.347 cv
144.197 103.347 144.074 103.361 143.968 103.375 cv
143.275 103.454 142.596 103.626 141.946 103.876 cv
141.36 104.097 141.024 104.355 140.938 104.64 cv
140.83 104.998 141.138 105.491 141.409 105.848 cv
141.781 106.341 142.103 106.62 142.439 106.77 cv
142.617 106.848 142.81 106.884 143.01 106.884 cv
143.482 106.884 143.982 106.677 144.339 106.313 cv
cp
146.398 103.983 mo
146.547 105.234 146.169 106.477 145.368 107.298 cv
144.74 107.956 143.867 108.314 143.01 108.314 cv
142.617 108.314 142.224 108.235 141.866 108.078 cv
141.702 108.006 141.545 107.921 141.403 107.827 cv
141.188 107.249 140.916 106.727 140.587 106.27 cv
140.294 105.848 139.937 105.455 139.508 105.083 cv
139.465 104.79 139.487 104.505 139.566 104.233 cv
139.787 103.497 140.395 102.94 141.431 102.539 cv
142.196 102.246 142.989 102.046 143.803 101.953 cv
144.275 101.896 144.825 101.875 145.332 102.16 cv
145.911 102.475 146.29 103.125 146.398 103.983 cv
cp
f
144.296 71.8526 mo
144.296 72.1671 li
144.296 73.7535 143.26 75.1041 141.823 75.5758 cv
141.823 75.047 li
141.823 74.6471 141.502 74.3326 141.109 74.3326 cv
140.701 74.3326 li
141.895 74.3326 142.867 73.3605 142.867 72.1671 cv
142.867 71.8526 li
142.867 70.6593 141.895 69.6871 140.701 69.6871 cv
130.983 69.6871 li
129.789 69.6871 128.824 70.6593 128.824 71.8526 cv
128.824 72.1671 li
128.824 73.3605 129.789 74.3326 130.983 74.3326 cv
130.582 74.3326 li
130.182 74.3326 129.867 74.6471 129.867 75.047 cv
129.867 75.5758 li
128.432 75.1114 127.395 73.7535 127.395 72.1671 cv
127.395 71.8526 li
127.395 69.8732 129.003 68.2579 130.983 68.2579 cv
140.701 68.2579 li
142.681 68.2579 144.296 69.8732 144.296 71.8526 cv
cp
f
139.887 114.088 mo
140.695 112.83 140.673 111.215 140.509 110.086 cv
140.33 108.864 139.966 107.863 139.422 107.091 cv
138.879 106.327 138.065 105.655 136.865 104.962 cv
135.127 103.976 133.277 103.304 131.368 102.982 cv
130.761 102.882 130.075 102.811 129.546 103.04 cv
128.975 103.296 128.56 103.925 128.267 104.44 cv
127.502 105.784 126.995 107.234 126.759 108.764 cv
126.681 109.25 126.63 109.807 126.802 110.243 cv
126.988 110.743 127.51 111.179 128.202 111.408 cv
128.803 111.615 129.46 111.672 130.16 111.736 cv
130.511 111.765 li
131.411 111.851 132.369 111.994 133.205 112.465 cv
133.927 112.866 134.47 113.438 134.999 114.002 cv
135.556 114.595 136.078 115.152 136.736 115.396 cv
137.907 115.817 139.258 115.067 139.887 114.088 cv
cp
141.924 109.879 mo
142.202 111.844 141.916 113.566 141.088 114.859 cv
140.251 116.16 138.815 116.939 137.429 116.939 cv
137.022 116.939 136.621 116.875 136.242 116.732 cv
135.271 116.382 134.606 115.667 133.955 114.981 cv
133.484 114.481 133.033 114.002 132.512 113.709 cv
131.933 113.395 131.24 113.273 130.375 113.187 cv
130.032 113.159 li
129.281 113.094 128.503 113.023 127.739 112.766 cv
126.638 112.394 125.809 111.658 125.466 110.757 cv
125.173 110 125.244 109.214 125.344 108.549 cv
125.609 106.848 126.173 105.226 127.024 103.733 cv
127.424 103.025 128.01 102.16 128.967 101.732 cv
129.081 101.682 129.203 101.639 129.318 101.603 cv
129.589 101.732 129.861 101.81 130.089 101.875 cv
130.625 102.025 131.29 102.217 131.99 102.217 cv
132.333 102.217 132.691 102.175 133.041 102.053 cv
133.298 101.946 li
134.006 102.139 134.698 102.375 135.378 102.647 cv
135.385 102.653 li
135.785 103.154 136.4 103.525 137.115 103.697 cv
137.293 103.74 137.472 103.768 137.657 103.775 cv
138.394 104.197 139.001 104.626 139.508 105.083 cv
139.579 105.598 139.837 106.141 140.273 106.72 cv
140.552 107.077 140.916 107.506 141.403 107.827 cv
141.645 108.449 141.817 109.135 141.924 109.879 cv
cp
f
141.823 75.047 mo
141.823 75.5758 li
141.474 75.6974 141.095 75.7618 140.701 75.7618 cv
140.395 75.7618 li
131.297 75.7618 li
130.983 75.7618 li
130.597 75.7618 130.218 75.6974 129.867 75.5758 cv
129.867 75.047 li
129.867 74.6471 130.182 74.3326 130.582 74.3326 cv
130.983 74.3326 li
140.701 74.3326 li
141.109 74.3326 li
141.502 74.3326 141.823 74.6471 141.823 75.047 cv
cp
f
140.059 101.131 mo
140.473 100.259 140.137 99.066 139.301 98.4801 cv
139.015 98.2726 138.694 98.1656 138.422 98.1656 cv
138.308 98.1656 138.194 98.1871 138.101 98.2301 cv
137.829 98.3585 137.621 98.6944 137.407 99.0587 cv
137.257 99.3019 li
137.164 99.4449 137.065 99.5948 136.964 99.7447 cv
136.564 100.324 136.193 100.874 136.292 101.36 cv
136.371 101.775 136.857 102.168 137.443 102.303 cv
137.615 102.346 137.786 102.36 137.957 102.36 cv
138.829 102.36 139.708 101.875 140.059 101.131 cv
cp
140.123 97.3082 mo
141.524 98.3014 142.067 100.253 141.352 101.746 cv
140.759 102.989 139.359 103.79 137.944 103.79 cv
137.851 103.79 137.75 103.79 137.657 103.775 cv
137.572 103.726 li
136.857 103.318 136.128 102.961 135.385 102.653 cv
135.378 102.647 li
135.135 102.354 134.963 102.01 134.892 101.646 cv
134.67 100.567 135.284 99.6661 135.778 98.9376 cv
135.87 98.8019 135.964 98.673 136.049 98.5372 cv
136.185 98.3155 li
136.471 97.837 136.835 97.2438 137.5 96.9293 cv
138.429 96.5006 139.465 96.8434 140.123 97.3082 cv
cp
f
140.587 106.27 mo
140.916 106.727 141.188 107.249 141.403 107.827 cv
140.916 107.506 140.552 107.077 140.273 106.72 cv
139.837 106.141 139.579 105.598 139.508 105.083 cv
139.937 105.455 140.294 105.848 140.587 106.27 cv
cp
f
137.572 103.726 mo
137.657 103.775 li
137.472 103.768 137.293 103.74 137.115 103.697 cv
136.4 103.525 135.785 103.154 135.385 102.653 cv
136.128 102.961 136.857 103.318 137.572 103.726 cv
cp
f
133.627 99.5665 mo
133.806 99.0377 133.784 98.4015 133.563 97.8297 cv
133.198 96.8863 132.298 96.1788 131.325 96.0719 cv
131.104 96.0504 130.547 96.0289 130.218 96.3649 cv
130.003 96.586 129.882 96.9791 129.753 97.3868 cv
129.596 97.8727 li
129.468 98.2726 129.339 98.6588 129.296 99.0304 cv
129.246 99.4591 129.324 99.838 129.511 100.045 cv
129.703 100.259 130.054 100.374 130.49 100.503 cv
131.282 100.731 131.99 100.91 132.57 100.703 cv
133.033 100.538 133.441 100.102 133.627 99.5665 cv
cp
134.899 97.315 mo
135.241 98.2086 135.271 99.1734 134.978 100.031 cv
134.685 100.896 134.07 101.596 133.298 101.946 cv
132.74 101.796 132.176 101.667 131.605 101.574 cv
131.226 101.51 130.811 101.46 130.397 101.46 cv
130.039 101.46 129.675 101.496 129.318 101.603 cv
129.01 101.467 128.696 101.275 128.439 100.988 cv
127.982 100.467 127.781 99.7091 127.874 98.8658 cv
127.939 98.3512 128.088 97.88 128.239 97.4225 cv
128.389 96.965 li
128.553 96.4361 128.739 95.836 129.197 95.3644 cv
129.66 94.8854 130.347 94.628 131.118 94.628 cv
131.233 94.628 131.355 94.6354 131.476 94.6495 cv
132.99 94.8141 134.334 95.8575 134.899 97.315 cv
cp
f
133.298 101.946 mo
133.041 102.053 li
132.691 102.175 132.333 102.217 131.99 102.217 cv
131.29 102.217 130.625 102.025 130.089 101.875 cv
129.861 101.81 129.589 101.732 129.318 101.603 cv
129.675 101.496 130.039 101.46 130.397 101.46 cv
130.811 101.46 131.226 101.51 131.605 101.574 cv
132.176 101.667 132.74 101.796 133.298 101.946 cv
cp
f
131.297 75.7618 mo
131.297 80.7501 li
131.297 81.1432 130.976 81.4645 130.582 81.4645 cv
124.487 81.4645 li
122.828 81.4645 121.486 82.8082 121.486 84.4659 cv
121.486 90.712 li
120.771 90.712 li
120.37 90.712 120.056 91.0333 120.056 91.4264 cv
120.056 84.4659 li
120.056 82.0221 122.042 80.0353 124.487 80.0353 cv
129.867 80.0353 li
129.867 75.5758 li
130.218 75.6974 130.597 75.7618 130.983 75.7618 cv
131.297 75.7618 li
cp
f
121.486 119.426 mo
121.486 120.856 li
120.771 120.856 li
120.37 120.856 120.056 120.541 120.056 120.141 cv
120.056 91.4264 li
120.056 91.0333 120.37 90.712 120.771 90.712 cv
121.486 90.712 li
121.486 92.1412 li
121.486 119.426 li
cp
f
541.248 169.411 mo
541.727 167.863 541.984 166.179 541.966 164.52 cv
541.957 162.682 541.641 161.032 541.017 159.612 cv
540.923 159.399 540.795 159.159 540.65 158.903 cv
538.751 157.03 536.572 155.5 534.263 154.431 cv
533.929 154.269 533.596 154.132 533.262 153.995 cv
532.929 153.858 532.596 153.73 532.253 153.619 cv
532.151 153.576 532.048 153.551 531.946 153.517 cv
531.706 153.44 531.458 153.354 531.21 153.286 cv
531.099 153.252 530.98 153.226 530.868 153.191 cv
530.629 153.132 530.39 153.064 530.151 153.004 cv
530.031 152.978 529.91 152.952 529.791 152.926 cv
529.552 152.875 529.313 152.824 529.065 152.781 cv
528.945 152.755 528.825 152.738 528.705 152.721 cv
528.466 152.679 528.218 152.636 527.97 152.61 cv
527.85 152.585 527.731 152.576 527.611 152.567 cv
527.363 152.533 527.115 152.507 526.867 152.482 cv
526.739 152.473 526.611 152.465 526.49 152.456 cv
526.251 152.439 526.012 152.422 525.773 152.422 cv
525.627 152.414 525.49 152.414 525.345 152.405 cv
525.055 152.397 524.764 152.397 524.482 152.405 cv
523.575 152.422 522.669 152.516 521.772 152.645 cv
519.685 152.952 517.651 153.542 515.778 154.406 cv
513.136 155.62 510.665 157.441 508.621 159.672 cv
506.69 161.801 505.142 164.426 504.167 167.239 cv
503.218 169.983 502.842 172.882 503.038 175.84 cv
503.073 176.379 503.124 176.918 503.209 177.465 cv
503.329 176.858 503.483 176.276 503.68 175.712 cv
504.124 174.404 504.757 173.25 505.543 172.283 cv
506.365 171.249 507.416 170.351 508.579 169.693 cv
509.015 169.453 509.468 169.231 509.947 169.052 cv
511.366 168.496 512.965 168.214 514.709 168.214 cv
515.017 168.214 515.324 168.222 515.624 168.239 cv
517.573 168.368 519.548 168.795 521.831 169.608 cv
523.413 170.197 524.798 170.847 526.132 171.471 cv
527.123 171.933 li
529.047 172.857 530.475 173.455 531.749 173.874 cv
533.237 174.361 534.587 174.549 535.784 174.412 cv
536.383 174.353 536.956 174.199 537.554 173.934 cv
537.845 173.805 538.136 173.651 538.426 173.481 cv
538.7 173.301 539.017 173.07 539.196 172.933 cv
539.589 172.591 540.008 172.07 540.342 171.488 cv
540.675 170.924 540.966 170.24 541.248 169.411 cv
cp
547.011 174.78 mo
547.053 172.463 546.729 170.129 546.071 167.94 cv
546.071 168.812 546.001 169.676 545.882 170.522 cv
545.711 171.668 545.411 172.788 545.001 173.839 cv
544.463 175.165 543.838 176.191 543.043 177.071 cv
542.581 177.576 542.189 177.926 541.701 178.328 cv
541.222 178.713 540.735 179.055 540.231 179.354 cv
539.974 179.508 539.709 179.653 539.436 179.79 cv
538.615 180.184 537.726 180.491 536.836 180.696 cv
536.075 180.859 535.297 180.953 534.477 180.979 cv
533.664 180.996 532.809 180.936 531.903 180.799 cv
531.305 180.705 530.68 180.586 530.039 180.423 cv
527.995 179.91 526.2 179.14 524.456 178.405 cv
523.379 177.926 li
522.746 177.636 522.122 177.362 521.524 177.106 cv
521.404 177.054 521.276 177.003 521.156 176.952 cv
520.625 176.73 520.104 176.516 519.6 176.336 cv
516.325 175.105 513.316 174.874 511.554 175.729 cv
510.597 176.173 509.878 176.943 509.348 178.072 cv
508.835 179.209 508.562 180.696 508.587 182.261 cv
508.639 185.441 509.733 188.793 511.597 191.469 cv
511.785 191.752 511.99 192.008 512.204 192.273 cv
512.674 192.615 513.161 192.931 513.657 193.231 cv
513.837 193.333 514.025 193.427 514.204 193.53 cv
514.53 193.71 514.855 193.898 515.188 194.06 cv
515.419 194.18 515.658 194.274 515.898 194.385 cv
516.189 194.522 516.47 194.658 516.761 194.77 cv
517.034 194.881 517.308 194.975 517.582 195.077 cv
517.856 195.171 518.12 195.274 518.394 195.359 cv
518.685 195.454 518.984 195.522 519.275 195.608 cv
519.54 195.676 519.796 195.753 520.062 195.813 cv
520.361 195.881 520.668 195.941 520.976 195.992 cv
521.241 196.044 521.506 196.104 521.763 196.138 cv
522.071 196.189 522.369 196.214 522.678 196.24 cv
522.951 196.275 523.225 196.309 523.507 196.326 cv
523.789 196.343 524.079 196.351 524.37 196.36 cv
524.764 196.377 525.149 196.385 525.542 196.377 cv
531.125 196.257 536.554 193.949 540.452 190.033 cv
544.531 186.04 546.925 180.483 547.011 174.78 cv
cp
549.618 174.737 mo
549.823 177.986 549.379 181.295 548.327 184.322 cv
547.224 187.46 545.489 190.375 543.317 192.76 cv
541.051 195.24 538.289 197.258 535.331 198.626 cv
532.287 200.019 529.013 200.772 525.602 200.857 cv
525.422 200.857 525.242 200.866 525.055 200.866 cv
521.874 200.866 518.685 200.25 515.821 199.087 cv
512.82 197.882 509.964 195.992 507.57 193.615 cv
505.287 191.35 503.423 188.52 502.157 185.424 cv
500.952 182.406 500.363 179.2 500.413 175.883 cv
500.499 169.496 503.158 163.263 507.706 158.792 cv
509.896 156.594 512.521 154.842 515.376 153.619 cv
518.24 152.405 521.326 151.721 524.456 151.652 cv
524.627 151.652 524.789 151.652 524.951 151.652 cv
525.089 151.652 li
530.775 151.652 536.511 153.739 540.846 157.398 cv
540.948 157.424 li
541.094 157.424 li
541.197 157.526 li
541.41 157.74 541.607 157.988 541.838 158.296 cv
546.395 162.485 549.242 168.504 549.618 174.737 cv
cp
f
551.46 114.995 mo
551.508 114.722 551.522 114.47 551.501 114.184 cv
551.46 113.713 551.31 113.249 551.037 112.71 cv
550.608 111.905 550.069 111.216 549.55 110.547 cv
549.352 110.288 li
548.792 109.572 548.158 108.767 547.578 107.942 cv
546.439 106.311 545.6 104.653 545.068 102.995 cv
544.951 102.941 544.843 102.852 544.768 102.736 cv
544.699 102.627 544.665 102.504 544.658 102.375 cv
543.41 101.372 541.99 100.478 540.429 99.7208 cv
538.853 98.9703 537.12 98.3902 535.291 97.9947 cv
531.669 97.1964 527.979 97.108 524.499 97.0807 cv
521.204 97.0875 517.377 97.1559 513.713 97.9127 cv
511.83 98.295 510.098 98.8609 508.549 99.5841 cv
506.947 100.362 505.547 101.29 504.395 102.34 cv
504.395 102.484 504.354 102.627 504.265 102.75 cv
504.176 102.873 504.054 102.961 503.917 103.002 cv
503.099 104.749 502.341 106.516 501.699 108.044 cv
501.618 108.228 li
501.242 109.088 500.867 109.961 500.445 110.779 cv
499.981 111.68 499.448 112.519 498.862 113.283 cv
498.582 113.645 498.269 114.02 497.941 114.395 cv
497.75 114.607 497.321 115.105 497.177 115.718 cv
497.04 116.23 497.074 116.796 497.252 117.342 cv
497.402 117.799 497.634 118.236 497.982 118.72 cv
498.507 119.437 499.156 120.071 500.076 120.78 cv
500.785 121.326 501.571 121.838 502.485 122.35 cv
504.067 123.243 505.752 123.994 507.642 124.655 cv
509.341 125.249 511.149 125.767 513.031 126.191 cv
516.599 126.968 520.324 127.364 524.09 127.371 cv
528.224 127.337 531.847 127.002 535.156 126.354 cv
537.114 125.959 538.88 125.474 540.558 124.88 cv
542.435 124.226 544.16 123.4 545.682 122.438 cv
547.558 121.231 548.956 119.942 549.952 118.482 cv
550.56 117.608 551.003 116.687 551.276 115.746 cv
551.358 115.473 551.419 115.186 551.46 114.995 cv
cp
552.859 114.067 mo
552.872 114.197 552.872 114.327 552.872 114.45 cv
552.872 114.722 552.852 114.982 552.797 115.261 cv
552.749 115.486 552.674 115.821 552.578 116.128 cv
552.272 117.206 551.767 118.263 551.078 119.259 cv
549.98 120.862 548.451 122.281 546.411 123.584 cv
544.802 124.608 542.987 125.474 541.016 126.17 cv
539.276 126.784 537.441 127.282 535.421 127.691 cv
532.024 128.36 528.32 128.701 524.097 128.735 cv
520.222 128.728 516.408 128.319 512.738 127.521 cv
510.8 127.084 508.938 126.559 507.192 125.945 cv
505.227 125.255 503.467 124.471 501.816 123.544 cv
500.847 122.991 500.008 122.445 499.251 121.865 cv
498.214 121.074 497.484 120.351 496.876 119.518 cv
496.447 118.918 496.154 118.365 495.955 117.772 cv
495.697 116.987 495.656 116.134 495.847 115.391 cv
496.058 114.504 496.617 113.815 496.931 113.481 cv
497.225 113.147 497.518 112.792 497.784 112.451 cv
498.323 111.755 498.807 110.984 499.231 110.158 cv
499.633 109.374 500.001 108.521 500.356 107.703 cv
500.445 107.505 li
501.141 105.84 501.987 103.882 502.894 101.972 cv
502.983 101.836 li
503.092 101.699 li
504.415 100.403 506.052 99.2775 507.962 98.3566 cv
509.614 97.5787 511.455 96.985 513.441 96.5758 cv
517.22 95.7911 521.136 95.7233 524.506 95.7164 cv
528.061 95.7433 531.833 95.839 535.578 96.6578 cv
537.516 97.0807 539.344 97.6944 541.023 98.4928 cv
542.851 99.3863 544.501 100.444 545.934 101.651 cv
546.105 101.877 li
546.166 101.945 546.207 102.033 546.235 102.129 cv
546.705 103.8 547.531 105.492 548.691 107.157 cv
549.249 107.948 549.877 108.746 550.423 109.449 cv
550.628 109.708 li
551.18 110.424 551.76 111.161 552.244 112.082 cv
552.606 112.785 552.804 113.413 552.859 114.067 cv
cp
f
548.274 115.725 mo
548.301 115.439 li
548.294 115.213 548.213 114.921 548.07 114.593 cv
547.776 113.952 547.312 113.276 546.868 112.628 cv
546.746 112.444 li
546.221 111.687 545.675 110.902 545.184 110.07 cv
544.631 109.135 544.195 108.269 543.854 107.423 cv
543.826 107.361 li
542.291 111.134 533.28 113.099 524.376 113.099 cv
515.589 113.099 506.707 111.189 504.995 107.511 cv
504.824 107.989 504.66 108.46 504.504 108.924 cv
504.135 109.981 li
503.522 111.775 502.791 113.672 501.625 115.357 cv
501.365 115.739 501.079 116.128 500.751 116.537 cv
500.492 116.844 500.431 117.022 500.404 117.151 cv
500.335 117.485 500.533 117.984 500.943 118.482 cv
501.768 119.457 502.935 120.317 504.729 121.244 cv
507.485 122.629 510.575 123.646 514.17 124.362 cv
517.377 125.01 520.611 125.338 523.782 125.338 cv
524.104 125.338 li
524.294 125.338 li
527.753 125.338 531.048 125.058 534.091 124.512 cv
537.795 123.857 540.838 122.827 543.397 121.367 cv
544.904 120.494 546.125 119.464 547.019 118.304 cv
547.503 117.67 547.871 116.987 548.111 116.292 cv
548.179 116.108 548.227 115.937 548.274 115.725 cv
cp
549.666 115.378 mo
549.672 115.596 549.653 115.841 549.605 116.046 cv
549.598 116.06 li
549.536 116.312 549.475 116.517 549.4 116.742 cv
549.12 117.567 548.677 118.379 548.097 119.136 cv
547.094 120.433 545.743 121.586 544.078 122.547 cv
541.377 124.089 538.191 125.174 534.329 125.856 cv
531.212 126.416 527.835 126.702 524.294 126.702 cv
524.104 126.702 li
523.782 126.702 li
520.522 126.702 517.193 126.361 513.905 125.699 cv
510.187 124.963 506.98 123.905 504.108 122.459 cv
502.137 121.435 500.84 120.48 499.892 119.355 cv
499.49 118.857 498.855 117.888 499.067 116.871 cv
499.156 116.462 499.346 116.087 499.695 115.671 cv
499.994 115.302 500.26 114.941 500.499 114.586 cv
501.577 113.03 502.266 111.243 502.846 109.538 cv
503.214 108.48 li
503.692 107.102 504.183 105.676 504.701 104.271 cv
504.749 104.155 504.824 104.053 504.92 103.978 cv
507.424 101.985 510.514 100.71 514.375 100.062 cv
515.494 99.8775 516.674 99.7413 517.978 99.6456 cv
518.346 99.6251 518.673 99.8981 518.707 100.267 cv
518.741 100.635 518.475 100.963 518.107 101.004 cv
511.012 101.801 506.059 103.937 506.059 106.202 cv
506.059 108.869 513.42 111.734 524.376 111.734 cv
535.332 111.734 542.694 108.869 542.694 106.202 cv
542.694 104.046 538.048 101.952 531.397 101.099 cv
531.028 101.051 530.762 100.717 530.803 100.341 cv
530.844 99.9733 531.178 99.7071 531.546 99.7413 cv
532.631 99.8434 533.661 99.9801 534.603 100.144 cv
538.089 100.751 541.275 102.033 544.072 103.943 cv
544.222 104.046 544.324 104.196 544.359 104.373 cv
544.535 105.24 544.788 106.099 545.115 106.918 cv
545.429 107.696 545.838 108.501 546.357 109.374 cv
546.827 110.165 547.353 110.929 547.871 111.673 cv
547.988 111.843 li
548.472 112.553 548.963 113.276 549.311 114.033 cv
549.53 114.531 549.646 114.975 549.666 115.378 cv
cp
f
233.847 150.234 mo
233.847 150.111 233.854 149.989 233.854 149.866 cv
233.854 148.206 233.61 146.591 233.119 145.037 cv
232.668 143.59 231.642 142.688 231.107 142.427 cv
231.121 142.504 231.145 142.611 231.191 142.741 cv
231.857 144.846 232.874 149.185 232.162 154.504 cv
231.512 159.341 228.588 164.829 225.895 166.245 cv
224.487 166.98 221.539 166.605 216.856 165.931 cv
213.06 165.388 208.758 164.775 205.497 165.074 cv
204.817 165.135 204.135 165.212 203.447 165.288 cv
201.358 165.525 199.198 165.771 197.033 165.602 cv
194.951 165.434 193.038 164.837 191.499 163.872 cv
191.293 163.742 191.162 163.52 191.148 163.275 cv
191.116 162.862 191.078 162.472 191.04 162.112 cv
190.948 161.224 190.865 160.451 191.01 159.801 cv
191.048 159.625 li
191.89 155.844 191.369 155.277 191.354 155.254 cv
190.91 155.232 188.95 156.625 187.803 158.729 cv
187.65 159.012 187.328 159.166 187.015 159.12 cv
185.17 158.829 182.323 159.066 182.3 159.066 cv
182.039 159.089 181.787 158.982 181.634 158.783 cv
180.302 157.099 178.71 155.584 178.152 155.469 cv
177.815 155.783 177.946 157.421 178.542 160.329 cv
178.702 161.132 178.833 161.76 178.856 162.166 cv
178.871 162.525 178.84 162.893 178.81 163.275 cv
178.756 163.995 178.702 164.737 178.902 165.548 cv
178.925 165.671 li
178.993 166.038 179.131 166.505 179.338 167.041 cv
179.346 167.079 li
179.361 167.117 li
179.506 167.5 179.675 167.891 179.866 168.304 cv
179.889 168.35 li
179.905 168.373 li
180.027 168.641 180.164 168.908 180.302 169.184 cv
180.325 169.23 li
180.333 169.26 li
182.147 172.789 185.017 176.883 186.165 178.483 cv
186.548 179.019 187.022 179.508 187.512 180.021 cv
187.994 180.519 188.491 181.031 188.92 181.613 cv
190.596 183.863 191.232 186.963 190.703 190.346 cv
190.252 193.277 189.05 195.979 187.887 198.596 cv
187.634 199.148 187.121 200.303 185.966 200.502 cv
185.653 200.556 185.354 200.518 185.116 200.487 cv
185.017 200.472 184.909 200.456 184.81 200.456 cv
184.772 200.456 li
184.604 200.464 184.435 200.564 184.297 200.739 cv
184.129 200.954 184.053 201.237 184.099 201.474 cv
184.198 201.987 184.734 202.431 185.346 202.507 cv
185.958 202.584 186.67 202.354 187.29 201.872 cv
187.917 201.39 188.431 200.701 188.882 200.027 cv
189.724 198.788 190.497 197.448 191.254 196.147 cv
192.41 194.15 193.612 192.091 195.073 190.3 cv
195.273 190.055 195.602 189.956 195.907 190.055 cv
196.206 190.154 196.413 190.422 196.428 190.736 cv
196.52 192.374 196.711 193.706 197.04 194.923 cv
197.094 195.114 197.148 195.305 197.209 195.497 cv
197.393 196.132 197.584 196.782 197.646 197.487 cv
197.76 198.665 197.454 199.706 196.796 200.418 cv
196.421 200.816 195.885 200.946 195.418 201.061 cv
194.698 201.245 194.63 201.321 194.607 201.482 cv
194.591 201.658 194.615 201.727 194.615 201.727 cv
194.691 201.796 195.073 201.88 195.334 201.933 cv
195.572 201.987 195.823 202.048 196.084 202.125 cv
196.865 202.362 197.836 201.979 198.257 201.275 cv
198.572 200.732 198.64 199.997 198.694 199.346 cv
199.061 195.259 199.36 191.058 199.581 186.84 cv
199.597 186.573 199.75 186.328 199.995 186.205 cv
202.238 185.042 204.878 184.369 207.848 184.2 cv
208.445 184.17 209.133 184.086 209.861 184.001 cv
211.085 183.856 212.478 183.695 213.824 183.711 cv
214.147 183.718 214.43 183.924 214.536 184.223 cv
214.805 184.981 215.432 185.662 216.098 186.381 cv
216.955 187.315 217.851 188.279 218.156 189.588 cv
218.44 190.805 218.156 192.175 217.353 193.438 cv
216.68 194.494 215.784 195.321 214.911 196.109 cv
214.628 196.369 214.193 196.377 213.894 196.124 cv
213.664 195.925 213.212 195.971 212.983 196.216 cv
212.723 196.484 212.677 196.982 212.876 197.341 cv
212.952 197.479 213.419 197.563 214.269 197.594 cv
214.46 197.602 li
215.34 197.648 215.761 197.41 216.503 196.721 cv
218.432 194.93 219.993 192.78 221.563 190.552 cv
221.7 190.346 221.938 190.223 222.19 190.223 cv
222.435 190.223 222.672 190.346 222.818 190.552 cv
224.142 192.466 224.395 193.078 224.463 193.453 cv
224.762 195.038 224.371 196.844 223.346 198.688 cv
223.139 199.079 222.787 199.431 222.427 199.814 cv
222.106 200.15 221.7 200.564 221.616 200.816 cv
221.486 201.176 221.577 201.306 221.609 201.352 cv
221.8 201.627 222.466 201.796 222.963 201.796 cv
224.234 201.796 224.433 201.16 224.571 200.25 cv
224.83 198.635 225.251 197.196 225.626 195.925 cv
226.162 194.096 226.629 192.512 226.362 191.18 cv
226.009 189.443 225.542 185.165 226.354 183.029 cv
226.698 182.126 227.241 181.36 227.77 180.618 cv
228.083 180.174 228.382 179.754 228.634 179.317 cv
230.165 176.638 229.905 173.149 229.706 170.347 cv
229.469 167.163 230.227 165.556 231.099 163.689 cv
232.232 161.285 233.64 158.285 233.847 150.234 cv
cp
234.581 144.578 mo
235.156 146.407 235.423 148.32 235.369 150.272 cv
235.163 158.645 233.616 161.936 232.485 164.339 cv
231.635 166.146 231.023 167.454 231.229 170.24 cv
231.45 173.248 231.727 176.99 229.966 180.075 cv
229.675 180.58 229.338 181.047 229.017 181.506 cv
228.52 182.195 228.061 182.853 227.784 183.572 cv
227.196 185.126 227.455 188.877 227.862 190.874 cv
228.206 192.581 227.693 194.334 227.096 196.354 cv
226.713 197.64 226.323 198.971 226.086 200.487 cv
225.979 201.191 225.642 203.326 222.963 203.326 cv
222.121 203.326 220.927 203.043 220.354 202.232 cv
220.093 201.857 219.848 201.222 220.169 200.303 cv
220.368 199.737 220.851 199.239 221.325 198.75 cv
221.601 198.459 221.892 198.16 222.014 197.946 cv
222.604 196.882 223.246 195.282 222.963 193.736 cv
222.94 193.66 222.841 193.354 222.175 192.336 cv
220.767 194.311 219.313 196.201 217.544 197.846 cv
216.588 198.734 215.799 199.201 214.383 199.132 cv
214.207 199.125 li
213.358 199.094 212.073 199.04 211.536 198.084 cv
211.016 197.134 211.154 195.91 211.873 195.16 cv
212.493 194.509 213.481 194.311 214.284 194.609 cv
214.943 193.997 215.593 193.354 216.06 192.619 cv
216.634 191.716 216.856 190.736 216.664 189.941 cv
216.45 189.022 215.731 188.241 214.973 187.422 cv
214.353 186.749 213.718 186.06 213.312 185.249 cv
212.21 185.272 211.062 185.402 210.036 185.524 cv
209.286 185.608 208.574 185.692 207.932 185.731 cv
205.353 185.876 203.056 186.427 201.089 187.369 cv
200.867 191.448 200.576 195.527 200.225 199.484 cv
200.156 200.257 200.064 201.214 199.573 202.048 cv
198.801 203.372 197.102 204.03 195.64 203.587 cv
195.418 203.525 195.203 203.48 195.005 203.434 cv
194.224 203.257 192.915 202.966 193.091 201.321 cv
193.222 200.027 194.369 199.744 195.051 199.576 cv
195.249 199.53 195.594 199.446 195.671 199.369 cv
196.023 198.994 196.191 198.352 196.122 197.625 cv
196.069 197.073 195.907 196.515 195.74 195.925 cv
195.678 195.726 195.617 195.527 195.564 195.328 cv
195.357 194.548 195.197 193.736 195.081 192.849 cv
194.186 194.15 193.374 195.55 192.578 196.913 cv
191.814 198.237 191.017 199.607 190.153 200.885 cv
189.624 201.666 189.028 202.469 188.224 203.089 cv
187.405 203.716 186.487 204.053 185.599 204.053 cv
185.446 204.053 185.3 204.046 185.155 204.023 cv
183.876 203.862 182.821 202.928 182.591 201.765 cv
182.46 201.091 182.652 200.357 183.096 199.791 cv
183.509 199.27 184.091 198.956 184.703 198.925 cv
184.933 198.918 185.132 198.941 185.316 198.971 cv
185.468 198.987 185.621 199.01 185.713 198.994 cv
186.058 198.933 186.371 198.237 186.487 197.969 cv
187.612 195.451 188.767 192.841 189.196 190.108 cv
189.464 188.387 189.624 185.111 187.696 182.532 cv
187.321 182.026 186.877 181.567 186.409 181.085 cv
185.897 180.549 185.369 180.006 184.917 179.371 cv
183.816 177.84 181.144 174.021 179.284 170.546 cv
179.109 170.615 li
179.009 170.653 178.917 170.684 178.818 170.73 cv
178.267 170.952 li
178.175 170.99 178.09 171.028 178.006 171.059 cv
177.8 171.151 177.57 171.251 177.325 171.35 cv
176.07 171.924 li
175.917 172.001 175.802 172.054 175.756 172.077 cv
175.381 172.268 174.884 172.138 174.693 171.763 cv
174.432 171.258 174.7 170.944 175.082 170.691 cv
174.922 170.745 li
174.7 170.829 174.501 170.906 174.325 170.975 cv
174.172 171.036 li
173.996 171.112 173.843 171.174 173.789 171.197 cv
173.406 171.365 172.924 171.22 172.74 170.853 cv
172.557 170.477 172.802 169.98 173.169 169.789 cv
173.315 169.712 173.529 169.597 173.851 169.467 cv
174.394 169.245 li
174.539 169.191 174.7 169.13 174.868 169.069 cv
175.014 169.016 li
175.159 168.962 175.305 168.908 175.443 168.862 cv
176.2 168.618 li
176.621 168.48 176.996 168.373 177.356 168.273 cv
177.256 168.289 177.156 168.304 177.05 168.319 cv
176.253 168.441 li
175.993 168.487 175.702 168.549 175.435 168.61 cv
174.746 168.778 li
174.555 168.839 174.409 168.878 174.356 168.893 cv
173.965 169.016 173.498 168.816 173.361 168.434 cv
173.223 168.044 173.506 167.577 173.897 167.423 cv
173.949 167.4 174.034 167.37 174.149 167.332 cv
174.256 167.294 li
174.348 167.263 li
174.555 167.202 li
174.753 167.148 174.922 167.094 175.098 167.056 cv
175.695 166.919 li
176.109 166.827 176.53 166.75 176.851 166.712 cv
177.111 166.673 177.348 166.643 177.577 166.62 cv
177.501 166.344 177.44 166.092 177.402 165.862 cv
177.394 165.839 li
177.156 164.821 177.226 163.903 177.287 163.161 cv
177.31 162.816 177.333 162.495 177.325 162.227 cv
177.31 161.951 177.18 161.316 177.042 160.643 cv
176.49 157.971 175.81 154.657 177.662 153.999 cv
178.979 153.54 181.014 155.576 182.575 157.512 cv
183.379 157.459 185.2 157.375 186.724 157.535 cv
187.971 155.538 190.321 153.326 191.852 153.816 cv
193.543 154.359 193.153 157.229 192.54 159.954 cv
192.502 160.122 li
192.418 160.535 192.479 161.193 192.564 161.959 cv
192.586 162.212 192.616 162.487 192.64 162.77 cv
193.91 163.49 195.464 163.941 197.156 164.071 cv
199.176 164.232 201.258 164.003 203.279 163.773 cv
203.967 163.689 204.663 163.612 205.36 163.551 cv
208.804 163.23 213.198 163.865 217.07 164.416 cv
220.544 164.921 224.142 165.434 225.183 164.89 cv
227.417 163.712 230.073 158.568 230.648 154.298 cv
231.321 149.277 230.357 145.19 229.729 143.2 cv
229.446 142.313 229.507 141.647 229.905 141.21 cv
230.088 141.011 230.502 140.697 231.229 140.858 cv
232.377 141.111 233.953 142.572 234.581 144.578 cv
cp
f
150.089 195.527 mo
150.375 195.527 150.66 195.52 150.947 195.506 cv
146.602 193.076 li
146.044 193.191 145.587 193.326 145.179 193.512 cv
144.922 193.619 144.722 193.741 144.558 193.869 cv
144.436 193.983 li
144.293 194.233 li
144.45 194.462 li
144.586 194.569 li
144.758 194.691 144.972 194.798 145.2 194.884 cv
145.715 195.077 146.266 195.191 146.73 195.277 cv
147.738 195.441 148.803 195.527 149.889 195.527 cv
149.982 195.527 li
149.989 195.527 li
150.089 195.527 li
cp
155.677 194.233 mo
155.649 194.119 155.556 193.998 155.406 193.869 cv
155.248 193.741 155.041 193.619 154.798 193.512 cv
154.363 193.319 153.876 193.176 153.269 193.055 cv
153.012 193.004 152.754 192.962 152.49 192.926 cv
151.704 192.812 150.867 192.754 150.018 192.754 cv
149.939 192.754 li
149.432 192.754 148.931 192.776 148.431 192.819 cv
153.648 195.198 li
154.098 195.106 154.448 195.005 154.763 194.884 cv
155.006 194.798 155.213 194.691 155.399 194.563 cv
155.549 194.448 155.642 194.341 155.677 194.233 cv
cp
156.542 194.512 mo
156.564 194.791 156.592 195.134 156.542 195.441 cv
156.549 195.542 156.528 195.691 156.485 195.849 cv
156.42 196.035 156.327 196.206 156.185 196.399 cv
155.948 196.713 155.656 196.942 155.399 197.135 cv
154.906 197.471 154.348 197.743 153.633 197.985 cv
153.34 198.078 153.012 198.171 152.655 198.25 cv
152.969 198.608 153.141 199.015 153.119 199.408 cv
152.198 199.408 li
152.168 199.257 152.054 199.1 151.862 198.936 cv
151.668 198.779 151.418 198.636 151.118 198.514 cv
150.604 198.278 150.018 198.107 149.288 197.957 cv
148.982 197.9 148.674 197.85 148.36 197.8 cv
147.402 197.671 146.408 197.6 145.394 197.6 cv
145.301 197.6 li
144.651 197.6 144 197.635 143.357 197.692 cv
142.749 198.779 li
141.321 197.979 li
140.634 198.121 140.084 198.286 139.598 198.507 cv
139.283 198.643 139.04 198.786 138.84 198.943 cv
138.698 199.086 li
138.633 199.165 li
137.804 198.608 li
137.89 198.457 137.997 198.307 138.133 198.171 cv
138.383 197.914 138.698 197.678 139.076 197.464 cv
139.227 197.378 139.391 197.299 139.555 197.228 cv
139.434 197.15 139.29 197.071 139.133 197.006 cv
138.698 196.814 138.211 196.664 137.604 196.542 cv
137.347 196.499 137.09 196.456 136.825 196.421 cv
136.032 196.306 135.203 196.249 134.353 196.249 cv
134.281 196.249 li
133.774 196.249 133.267 196.271 132.766 196.313 cv
132.223 197.285 li
130.937 196.564 li
130.372 196.685 129.922 196.821 129.515 197.006 cv
129.322 197.085 129.157 197.171 129.022 197.264 cv
128.572 196.399 li
128.729 196.271 128.886 196.171 129.05 196.07 cv
129.464 195.849 129.914 195.67 130.48 195.499 cv
130.765 195.413 li
131.823 195.134 132.981 194.991 134.317 194.984 cv
134.324 194.984 li
135.66 194.991 136.818 195.134 137.868 195.413 cv
138.569 195.606 139.113 195.813 139.591 196.07 cv
139.884 196.234 140.127 196.413 140.334 196.613 cv
141.506 196.428 142.549 196.22 143.535 195.978 cv
143.486 195.863 li
143.443 195.706 143.421 195.563 143.429 195.42 cv
143.343 194.962 143.35 194.584 143.449 194.305 cv
143.457 194.219 li
143.436 193.891 143.6 193.505 143.914 193.183 cv
144.129 192.955 144.393 192.761 144.715 192.583 cv
145.122 192.361 145.573 192.175 146.137 192.004 cv
146.43 191.925 li
147.488 191.64 148.646 191.504 149.982 191.489 cv
150.611 191.497 151.218 191.532 151.776 191.597 cv
152.368 190.911 152.747 190.26 152.862 189.753 cv
152.89 189.646 152.89 189.474 152.898 189.31 cv
153.161 181.335 li
153.305 177.183 153.497 173.059 153.648 169.936 cv
153.848 166.37 li
153.941 164.648 li
154.906 164.626 li
155.013 169.565 li
155.07 174.06 155.091 177.511 155.084 180.749 cv
155.056 188.466 li
155.056 188.66 li
155.056 188.824 155.056 189.01 155.013 189.288 cv
154.841 190.103 154.369 190.996 153.613 191.94 cv
154.27 192.126 154.798 192.333 155.248 192.576 cv
155.577 192.761 155.834 192.955 156.056 193.176 cv
156.37 193.505 156.535 193.891 156.514 194.255 cv
156.521 194.284 li
156.535 194.355 li
156.542 194.512 li
cp
f
150.275 159.738 mo
150.275 151.32 li
147.645 152.849 141.835 153.828 135.268 153.828 cv
128.865 153.828 123.118 152.878 120.417 151.399 cv
120.417 159.824 li
122.761 162.004 130.657 163.39 135.131 163.39 cv
135.275 163.39 li
140.22 163.275 144.987 162.168 149.846 160.017 cv
149.989 159.931 150.124 159.838 150.253 159.753 cv
150.275 159.738 li
cp
154.891 164.04 mo
154.906 164.626 li
153.941 164.648 li
148.295 162.254 li
146.73 162.897 145.243 163.433 143.764 163.876 cv
140.684 164.805 137.933 165.255 135.346 165.255 cv
135.268 165.255 li
133.767 165.241 132.316 165.112 130.944 164.877 cv
129.365 164.584 127.999 164.262 126.778 163.876 cv
125.262 163.419 123.747 162.876 122.14 162.211 cv
116.286 165.019 li
115.3 164.998 li
115.322 164.004 li
115.386 163.419 115.793 163.004 116.437 162.854 cv
119.982 161.275 li
119.616 161.11 119.267 160.946 118.909 160.775 cv
118.802 160.596 li
118.802 149.648 li
118.809 149.59 li
118.802 149.476 li
118.802 147.039 126.034 145.131 135.268 145.131 cv
143.914 145.131 150.897 146.811 151.661 149.054 cv
151.74 149.183 li
151.74 160.596 li
151.625 160.775 li
151.233 160.967 150.832 161.153 150.425 161.339 cv
154.005 162.933 li
154.262 163.054 li
154.305 163.083 li
154.649 163.304 154.849 163.611 154.884 163.99 cv
154.891 164.04 li
cp
f
153.155 199.736 mo
153.183 200.065 153.212 200.472 153.155 200.844 cv
153.161 200.965 153.141 201.144 153.083 201.323 cv
153.012 201.545 152.898 201.745 152.733 201.973 cv
152.454 202.345 152.104 202.616 151.797 202.838 cv
151.218 203.245 150.553 203.567 149.703 203.853 cv
148.374 204.289 146.916 204.51 145.358 204.517 cv
143.807 204.517 142.342 204.296 141.013 203.86 cv
140.162 203.567 139.505 203.253 138.926 202.852 cv
138.612 202.624 138.262 202.352 137.983 201.981 cv
137.868 201.83 137.79 201.688 137.726 201.551 cv
136.668 201.866 135.525 202.03 134.324 202.038 cv
133.016 202.038 131.787 201.845 130.672 201.48 cv
129.965 201.237 129.407 200.973 128.921 200.637 cv
128.643 200.43 128.357 200.208 128.121 199.901 cv
127.986 199.708 127.892 199.536 127.828 199.358 cv
127.778 199.2 127.756 199.058 127.764 198.915 cv
127.685 198.5 127.685 198.15 127.756 197.885 cv
128.628 197.728 li
128.785 197.957 li
128.921 198.064 li
129.1 198.186 129.307 198.293 129.536 198.372 cv
130.05 198.571 130.601 198.686 131.073 198.772 cv
132.073 198.936 133.138 199.015 134.231 199.015 cv
134.317 199.015 li
134.324 199.015 li
134.424 199.015 li
134.71 199.015 134.995 199.015 135.288 199 cv
132.223 197.285 li
132.766 196.313 li
137.804 198.608 li
138.633 199.165 li
138.512 199.408 li
138.54 199.508 138.612 199.608 138.719 199.708 cv
138.883 199.844 li
139.091 199.986 139.348 200.115 139.626 200.215 cv
140.241 200.451 140.899 200.587 141.463 200.687 cv
142.671 200.887 143.943 200.987 145.243 200.987 cv
145.351 200.987 li
145.358 200.987 li
145.48 200.987 li
145.865 200.987 146.251 200.98 146.645 200.959 cv
142.749 198.779 li
143.357 197.692 li
149.732 200.594 li
150.281 200.48 150.697 200.365 151.075 200.222 cv
151.368 200.115 151.625 199.98 151.847 199.829 cv
152.04 199.687 152.155 199.55 152.198 199.408 cv
153.119 199.408 li
153.119 199.429 li
153.126 199.472 li
153.148 199.565 li
153.155 199.736 li
cp
f
152.448 166.184 mo
152.476 166.292 li
152.397 166.449 li
150.096 168.199 147.366 169.536 144.3 170.429 cv
141.592 171.215 138.676 171.615 135.632 171.615 cv
135.303 171.615 li
132.201 171.566 129.186 171.108 126.334 170.251 cv
123.319 169.357 120.568 168.085 118.159 166.456 cv
118.073 166.292 li
118.095 166.198 li
118.145 166.106 118.259 166.07 118.352 166.113 cv
121.111 167.356 123.911 168.314 126.677 168.95 cv
129.615 169.622 132.523 169.979 135.318 170.001 cv
138.233 170.05 141.127 169.75 143.964 169.121 cv
146.816 168.478 149.589 167.463 152.19 166.12 cv
152.282 166.07 152.39 166.098 152.448 166.184 cv
cp
f
128.572 196.399 mo
129.022 197.264 li
128.893 197.364 li
128.779 197.478 li
128.628 197.728 li
127.756 197.885 li
127.242 197.778 126.698 197.65 126.163 197.514 cv
125.434 197.314 124.698 197.092 123.962 196.842 cv
123.59 196.721 123.24 196.599 122.854 196.456 cv
122.726 196.406 122.547 196.335 122.39 196.263 cv
122.161 196.171 li
121.996 196.092 121.832 196.02 121.675 195.941 cv
120.167 195.206 118.752 194.205 117.594 193.047 cv
116.665 192.118 115.5 190.711 115.2 189.296 cv
115.164 189.095 115.157 188.91 115.157 188.817 cv
115.121 180.749 li
115.121 177.497 115.143 174.052 115.194 169.571 cv
115.3 164.998 li
116.286 165.019 li
116.365 166.392 li
116.566 169.936 li
116.715 173.066 116.908 177.183 117.051 181.335 cv
117.294 188.431 li
117.301 188.667 117.309 188.902 117.316 189.131 cv
117.323 189.374 li
117.323 189.496 li
117.33 189.588 117.337 189.66 117.352 189.753 cv
117.509 190.453 118.18 191.425 119.153 192.333 cv
120.117 193.24 121.253 194.019 122.44 194.569 cv
122.554 194.634 122.675 194.684 122.797 194.734 cv
123.047 194.834 li
123.14 194.877 123.24 194.913 123.362 194.962 cv
123.683 195.077 124.055 195.206 124.398 195.313 cv
125.076 195.534 125.791 195.742 126.52 195.935 cv
127.199 196.106 127.885 196.263 128.572 196.399 cv
cp
f
89.9065 90.9176 mo
92.0227 87.4757 93.0764 85.3443 91.887 83.5968 cv
90.6965 81.8419 88.6555 81.3902 84.679 82.0831 cv
80.2737 82.8512 75.1975 85.0729 70.3772 88.3419 cv
67.1165 90.5558 61.9417 95.6549 57.3782 100.151 cv
53.7932 103.683 50.6897 106.734 49.0706 107.84 cv
48.5667 108.187 48.0461 108.511 47.5198 108.819 cv
43.8137 111.011 39.634 112.487 35.8909 113.813 cv
32.6145 114.973 29.5266 116.065 27.5989 117.368 cv
25.4143 118.851 24.3 120.704 27.0715 124.206 cv
28.7356 126.315 29.7004 126.458 30.8069 125.705 cv
32.4944 124.56 35.3186 121.088 37.8411 118.844 cv
42.8723 114.37 44.8079 112.789 49.0481 109.912 cv
51.4885 108.255 54.2297 106.274 56.218 106.169 cv
58.6809 106.033 57.9729 109.798 64.3674 108.096 cv
68.6897 106.944 74.4817 103.841 79.2942 100.573 cv
84.1067 97.3038 87.5715 94.7281 89.9065 90.9176 cv
cp
104.065 88.3116 mo
104.539 88.4469 104.864 88.8688 104.75 89.253 cv
104.645 89.6295 104.163 89.818 103.696 89.6671 cv
103.357 89.5616 103.116 89.3131 103.033 89.0421 cv
100.39 88.3717 97.7688 87.7091 95.1702 87.0387 cv
95.1477 87.3854 95.1028 87.7467 95.0344 88.1158 cv
97.6028 88.8766 100.187 89.6295 102.784 90.4054 cv
102.995 90.2247 103.342 90.172 103.681 90.2848 cv
104.14 90.443 104.404 90.8873 104.253 91.2638 cv
104.103 91.6481 103.606 91.8136 103.154 91.6402 cv
102.83 91.5201 102.619 91.2565 102.567 90.9776 cv
100.006 90.1793 97.4602 89.4034 94.9299 88.6129 cv
94.8391 88.9669 94.7415 89.3209 94.6135 89.6822 cv
97.1282 90.5709 99.6594 91.4596 102.198 92.3634 cv
102.431 92.19 102.778 92.1451 103.101 92.2731 cv
103.545 92.4537 103.756 92.9132 103.568 93.2975 cv
103.38 93.6739 102.867 93.8243 102.439 93.6285 cv
102.122 93.4933 101.942 93.2145 101.918 92.9357 cv
99.4182 92.0021 96.9182 91.0983 94.4329 90.1793 cv
94.2971 90.5333 94.1458 90.8873 93.9729 91.2486 cv
96.4583 92.2731 98.9514 93.2897 101.437 94.3292 cv
101.693 94.1637 102.039 94.1334 102.348 94.2765 cv
102.778 94.4796 102.95 94.9469 102.725 95.3233 cv
102.498 95.6998 101.979 95.8277 101.565 95.6168 cv
101.263 95.4664 101.098 95.1803 101.113 94.8941 cv
98.6497 93.8321 96.1868 92.7926 93.7317 91.7384 cv
93.5588 92.0846 93.3625 92.4386 93.1594 92.7926 cv
95.6077 93.9601 98.0696 95.1197 100.526 96.3024 cv
100.796 96.1441 101.151 96.129 101.445 96.2872 cv
101.851 96.5055 101.987 96.9879 101.731 97.3566 cv
101.474 97.7257 100.94 97.839 100.54 97.6051 cv
100.254 97.4474 100.118 97.1461 100.149 96.8595 cv
97.7161 95.6622 95.2834 94.4796 92.8655 93.2823 cv
92.6477 93.6285 92.4211 93.9752 92.1809 94.3214 cv
94.6057 95.6398 97.0461 96.9498 99.4788 98.2755 cv
99.7571 98.1324 100.111 98.1173 100.398 98.2906 cv
100.789 98.5318 100.887 99.0211 100.601 99.3829 cv
100.315 99.7442 99.7717 99.8419 99.3879 99.5934 cv
99.1096 99.4205 98.9963 99.1192 99.0491 98.8253 cv
96.6467 97.485 94.2366 96.152 91.842 94.8111 cv
91.593 95.15 91.3372 95.4889 91.0657 95.8277 cv
93.4758 97.3038 95.8938 98.7726 98.2961 100.249 cv
98.5901 100.106 98.9514 100.113 99.2219 100.294 cv
99.5989 100.55 99.6594 101.04 99.343 101.401 cv
99.0344 101.763 98.4768 101.838 98.1155 101.582 cv
97.844 101.394 97.7542 101.085 97.8293 100.791 cv
95.4495 99.2921 93.0618 97.8087 90.6897 96.3024 cv
90.4182 96.6339 90.1321 96.9728 89.8381 97.3038 cv
92.218 98.9459 94.6135 100.58 97.0002 102.222 cv
97.302 102.087 97.6633 102.102 97.927 102.29 cv
98.2883 102.561 98.3108 103.066 97.9797 103.42 cv
97.6409 103.766 97.0754 103.834 96.7297 103.555 cv
96.4739 103.359 96.3977 103.043 96.4963 102.749 cv
94.1311 101.092 91.7659 99.443 89.4163 97.7711 cv
89.1155 98.0948 88.8069 98.4186 88.4905 98.7423 cv
90.8479 100.565 93.2278 102.373 95.592 104.18 cv
95.9084 104.06 96.2698 104.082 96.5256 104.286 cv
96.8655 104.564 96.8655 105.076 96.5032 105.423 cv
96.1497 105.769 95.5774 105.815 95.2385 105.528 cv
94.9895 105.317 94.9368 105.001 95.05 104.708 cv
92.7073 102.885 90.3577 101.055 88.0305 99.2018 cv
87.7141 99.5182 87.3831 99.8346 87.0442 100.143 cv
89.3792 102.162 91.7366 104.158 94.0862 106.146 cv
94.4094 106.025 94.7717 106.063 95.0198 106.274 cv
95.3508 106.575 95.3215 107.088 94.9368 107.426 cv
94.5608 107.765 93.9807 107.795 93.6565 107.494 cv
93.4153 107.283 93.3782 106.952 93.5061 106.658 cv
91.179 104.655 88.8518 102.636 86.5549 100.595 cv
86.2161 100.904 85.8616 101.205 85.5081 101.506 cv
87.8127 103.728 90.1467 105.92 92.4895 108.104 cv
92.8206 107.991 93.1897 108.044 93.4231 108.262 cv
93.7395 108.571 93.6868 109.09 93.2805 109.43 cv
92.8811 109.761 92.301 109.776 91.9846 109.46 cv
91.7512 109.234 91.7288 108.902 91.8792 108.609 cv
89.5598 106.409 87.2551 104.188 84.9875 101.943 cv
84.6565 102.207 84.3254 102.478 83.9866 102.734 cv
86.1174 105.159 88.2795 107.554 90.4485 109.942 cv
90.7952 109.844 91.1565 109.904 91.3743 110.145 cv
91.676 110.477 91.5784 111.011 91.1565 111.335 cv
90.7268 111.667 90.1399 111.659 89.8459 111.32 cv
89.635 111.079 89.635 110.733 89.801 110.439 cv
87.6545 108.036 85.5227 105.611 83.429 103.164 cv
83.0452 103.45 82.6604 103.736 82.2688 104.014 cv
84.2346 106.515 86.2385 108.993 88.2717 111.463 cv
88.6184 111.38 88.9719 111.456 89.1829 111.704 cv
89.4768 112.05 89.3635 112.578 88.9348 112.894 cv
88.4973 113.211 87.9182 113.172 87.6311 112.819 cv
87.428 112.563 87.4358 112.216 87.6086 111.93 cv
85.6057 109.444 83.6321 106.937 81.6965 104.414 cv
81.5989 104.474 81.5081 104.542 81.4182 104.602 cv
81.1096 104.813 80.8079 105.016 80.4993 105.212 cv
82.2395 107.69 84.0168 110.16 85.8391 112.615 cv
86.1858 112.547 86.5393 112.646 86.7424 112.901 cv
87.0217 113.255 86.8938 113.79 86.4495 114.084 cv
86.0051 114.385 85.4172 114.325 85.1458 113.956 cv
84.9504 113.692 84.9729 113.346 85.1614 113.06 cv
83.3616 110.582 81.6213 108.089 79.9114 105.581 cv
79.4973 105.845 79.0911 106.093 78.677 106.334 cv
80.1985 108.797 81.7571 111.252 83.3762 113.7 cv
83.7229 113.647 84.0764 113.76 84.2649 114.031 cv
84.5364 114.4 84.386 114.935 83.9338 115.213 cv
83.4739 115.492 82.9016 115.402 82.6379 115.018 cv
82.4573 114.739 82.4875 114.393 82.6838 114.114 cv
81.094 111.651 79.5657 109.173 78.0745 106.688 cv
77.6448 106.929 77.2161 107.163 76.7942 107.389 cv
78.1116 109.829 79.467 112.269 80.8909 114.702 cv
81.2454 114.664 81.5911 114.799 81.7717 115.078 cv
82.0208 115.462 81.8547 115.997 81.3958 116.253 cv
80.929 116.509 80.3567 116.396 80.1077 115.989 cv
79.9348 115.703 79.9797 115.349 80.1907 115.086 cv
78.7893 112.63 77.4641 110.168 76.176 107.705 cv
75.7395 107.931 75.303 108.142 74.8655 108.345 cv
75.9954 110.763 77.1555 113.188 78.3909 115.613 cv
78.7444 115.59 79.0833 115.741 79.2493 116.035 cv
79.4905 116.442 79.302 116.968 78.8352 117.202 cv
78.3606 117.436 77.7883 117.285 77.5618 116.871 cv
77.3967 116.569 77.4563 116.215 77.675 115.959 cv
76.4622 113.512 75.3333 111.071 74.2405 108.631 cv
73.7815 108.835 73.3293 109.03 72.885 109.211 cv
73.8264 111.606 74.8206 114.009 75.8821 116.419 cv
76.2288 116.419 76.5608 116.592 76.719 116.893 cv
76.9368 117.315 76.7336 117.835 76.259 118.046 cv
75.7776 118.256 75.2122 118.068 75.0012 117.639 cv
74.8586 117.322 74.926 116.968 75.1594 116.728 cv
74.1204 114.295 73.1565 111.877 72.2454 109.46 cv
71.7854 109.64 71.3333 109.806 70.8821 109.957 cv
71.6497 112.329 72.4709 114.709 73.3596 117.111 cv
73.7063 117.134 74.0295 117.33 74.1731 117.646 cv
74.3762 118.083 74.1506 118.595 73.6682 118.776 cv
73.179 118.964 72.6292 118.731 72.4407 118.287 cv
72.3049 117.955 72.3958 117.609 72.6292 117.375 cv
71.7629 114.958 70.9797 112.555 70.2415 110.168 cv
69.7747 110.318 69.3147 110.446 68.8557 110.567 cv
69.4661 112.924 70.1135 115.289 70.844 117.676 cv
71.1829 117.722 71.4915 117.94 71.6194 118.272 cv
71.801 118.723 71.552 119.228 71.0696 119.379 cv
70.5725 119.529 70.0383 119.266 69.8723 118.798 cv
69.7522 118.46 69.8577 118.113 70.1057 117.895 cv
69.4055 115.492 68.7883 113.105 68.2161 110.733 cv
67.7415 110.853 67.2815 110.943 66.8225 111.034 cv
67.2668 113.368 67.7561 115.726 68.3284 118.113 cv
68.6604 118.181 68.9612 118.422 69.0745 118.761 cv
69.2249 119.235 68.9612 119.725 68.4641 119.845 cv
67.9749 119.959 67.4553 119.657 67.3118 119.175 cv
67.2141 118.821 67.3342 118.483 67.5901 118.279 cv
67.0481 115.877 66.5891 113.497 66.1819 111.139 cv
65.7073 111.214 65.2483 111.267 64.7961 111.313 cv
65.0823 113.647 65.4211 116.005 65.8284 118.4 cv
66.1594 118.497 66.4377 118.761 66.5286 119.115 cv
66.6643 119.597 66.3704 120.071 65.8733 120.154 cv
65.3762 120.237 64.887 119.891 64.7659 119.394 cv
64.6907 119.032 64.8264 118.701 65.0901 118.512 cv
64.7063 116.095 64.4124 113.715 64.1565 111.358 cv
63.6897 111.38 63.2297 111.38 62.7932 111.365 cv
62.929 113.722 63.1018 116.11 63.3577 118.527 cv
63.6741 118.655 63.9377 118.942 64.0051 119.303 cv
64.1106 119.808 63.7874 120.26 63.2971 120.305 cv
62.8 120.35 62.3333 119.959 62.2502 119.446 cv
62.1985 119.077 62.3557 118.754 62.6194 118.58 cv
62.4016 116.132 62.2659 113.715 62.1682 111.32 cv
59.886 111.124 58.1086 110.311 57.1067 108.835 cv
56.926 108.571 56.7756 108.277 56.6477 107.976 cv
53.7102 108.797 51.9104 110.348 49.3264 112.276 cv
38.6702 120.222 32.2532 134.999 26.3557 125.562 cv
19.2317 114.159 37.2766 115.07 48.717 107.313 cv
52.219 104.933 64.0735 91.8512 70.0227 87.8146 cv
80.2961 80.8404 91.1868 78.9425 94.3274 83.5816 cv
94.8997 84.4254 95.178 85.4269 95.1858 86.5416 cv
97.8293 87.1896 100.495 87.8219 103.184 88.4698 cv
103.38 88.2892 103.711 88.2135 104.065 88.3116 cv
cp
f
34.4299 116.976 mo
34.9192 117.707 33.9026 119.243 32.1702 120.41 cv
30.4309 121.585 28.6233 121.947 28.1331 121.216 cv
27.6438 120.493 28.6536 118.949 30.3928 117.782 cv
32.1331 116.607 33.9407 116.253 34.4299 116.976 cv
cp
f
483.494 161.026 mo
483.494 161.315 483.42 161.612 483.257 161.908 cv
482.597 163.147 480.625 164.162 479.506 164.659 cv
478.987 164.889 478.46 165.089 477.986 165.245 cv
477.823 165.289 477.675 165.334 477.533 165.378 cv
477.386 165.415 477.238 165.445 477.096 165.467 cv
477 165.482 li
476.866 165.497 476.763 165.511 476.666 165.519 cv
476.526 165.526 li
476.429 165.526 476.333 165.526 476.237 165.526 cv
476.125 165.526 li
475.873 165.511 475.628 165.482 475.362 165.437 cv
475.273 165.422 li
474.998 165.363 li
474.916 165.341 li
474.813 165.319 474.717 165.289 474.613 165.267 cv
473.619 164.985 li
473.723 164.251 li
473.523 164.963 li
473.323 164.926 li
473.137 164.896 li
472.915 164.874 472.752 164.889 472.618 164.956 cv
472.552 164.992 472.404 165.119 472.129 165.608 cv
471.469 166.861 li
471.388 167.024 471.328 167.12 471.277 167.224 cv
471.202 167.35 li
471.121 167.498 471.031 167.647 470.943 167.788 cv
470.824 167.958 470.742 168.091 470.654 168.21 cv
470.573 168.321 li
470.476 168.447 470.402 168.544 470.321 168.64 cv
470.201 168.781 li
470.105 168.885 470.001 168.988 469.898 169.092 cv
469.809 169.181 li
469.675 169.307 469.527 169.426 469.371 169.537 cv
468.926 168.951 li
468.489 168.351 li
468.6 168.27 468.704 168.18 468.8 168.091 cv
468.867 168.025 li
469.089 167.795 li
469.186 167.684 li
469.371 167.454 li
469.446 167.35 li
469.527 167.246 469.594 167.135 469.66 167.031 cv
469.772 166.868 469.846 166.742 469.912 166.616 cv
470.579 165.356 li
470.616 165.289 li
470.824 164.903 li
471.106 164.407 471.448 163.888 471.958 163.629 cv
472.344 163.436 472.781 163.369 473.301 163.421 cv
473.545 163.458 li
474.168 163.599 li
474.99 163.829 li
475.087 163.858 475.176 163.88 475.265 163.902 cv
475.562 163.962 li
475.807 164.006 475.999 164.036 476.192 164.044 cv
476.251 164.785 li
476.266 164.044 li
476.466 164.044 li
476.57 164.036 li
476.763 164.014 li
476.978 164.733 li
476.852 164.006 li
476.948 163.992 477.044 163.969 477.149 163.94 cv
477.267 163.91 477.401 163.873 477.533 163.829 cv
477.964 163.695 478.439 163.51 478.906 163.302 cv
480.44 162.628 481.634 161.805 481.952 161.204 cv
482.041 161.041 482.012 161.004 481.997 160.974 cv
481.775 160.722 li
481.693 160.648 li
481.448 160.418 li
481.834 159.781 li
481.374 160.359 li
481.255 160.262 481.129 160.173 480.996 160.077 cv
480.929 160.033 li
480.766 159.921 480.662 159.855 480.544 159.781 cv
480.403 159.684 li
480.262 159.595 480.121 159.514 479.981 159.425 cv
479.521 159.15 li
479.12 158.913 478.72 158.676 478.357 158.439 cv
477.615 157.949 477.163 157.549 476.911 157.127 cv
476.748 156.852 476.622 156.615 476.496 156.363 cv
476.096 155.555 475.599 154.554 472.522 151.151 cv
472.433 151.055 472.374 150.936 472.344 150.81 cv
472.322 150.691 472.3 150.573 472.284 150.447 cv
472.255 150.187 li
472.247 150.002 li
472.24 149.913 472.24 149.816 472.24 149.72 cv
472.24 149.542 li
472.24 149.453 472.247 149.357 472.247 149.26 cv
472.255 149.083 li
472.263 148.986 472.27 148.882 472.278 148.786 cv
472.389 147.83 li
472.404 147.748 li
472.5 147.066 li
472.53 146.851 472.559 146.636 472.589 146.436 cv
472.656 146.31 li
473.353 146.295 li
474.086 146.369 li
474.086 146.391 li
474.072 146.51 li
474.042 146.754 474.005 147.014 473.968 147.281 cv
473.871 147.948 li
473.122 147.926 li
473.857 148.03 li
473.731 149.327 li
473.723 149.565 li
473.723 149.712 li
473.731 149.928 li
473.738 150.068 li
473.753 150.261 li
473.76 150.313 li
476.852 153.738 477.37 154.784 477.823 155.703 cv
477.934 155.918 478.038 156.126 478.179 156.356 cv
478.305 156.57 478.639 156.852 479.172 157.201 cv
479.513 157.423 479.892 157.653 480.284 157.883 cv
480.744 158.157 li
480.892 158.246 481.04 158.335 481.189 158.431 cv
481.3 158.498 li
481.471 158.609 481.597 158.691 481.715 158.773 cv
481.849 158.861 li
482.004 158.973 482.153 159.091 482.301 159.202 cv
482.367 159.262 li
482.508 159.38 482.619 159.477 482.724 159.581 cv
482.842 159.691 li
482.976 159.833 483.094 159.973 483.198 160.114 cv
483.398 160.396 483.494 160.7 483.494 161.026 cv
cp
f
474.175 145.205 mo
474.175 145.316 li
474.175 145.45 474.168 145.517 474.168 145.583 cv
474.086 146.369 li
473.353 146.295 li
472.715 146.213 li
472.656 146.31 li
472.589 146.436 li
472.455 146.666 li
472.322 146.91 472.174 147.162 472.026 147.429 cv
471.848 147.733 li
471.729 147.933 471.611 148.141 471.485 148.349 cv
471.284 148.66 li
470.365 150.106 469.49 151.121 468.615 151.774 cv
467.392 152.671 466.791 153.19 466.242 153.679 cv
465.412 154.428 li
464.871 154.91 464.056 155.614 462.588 156.756 cv
462.388 156.912 462.202 157.075 462.017 157.23 cv
461.854 157.379 li
461.72 157.497 461.594 157.616 461.468 157.727 cv
461.313 157.883 li
461.171 158.016 461.038 158.15 460.912 158.275 cv
460.341 158.854 li
460.156 159.039 460.008 159.188 459.86 159.336 cv
459.755 159.432 li
459.377 159.796 459.036 160.085 458.702 160.344 cv
458.614 160.403 li
458.429 160.537 458.273 160.648 458.11 160.744 cv
457.065 161.389 455.945 161.731 454.58 161.812 cv
453.402 161.879 452.119 161.99 450.77 162.153 cv
450.117 162.227 449.465 162.316 448.813 162.405 cv
447.574 162.583 446.263 162.791 444.92 163.035 cv
438.285 164.221 432.421 165.83 431.865 165.986 cv
431.546 166.119 429.433 167.017 427.017 168.21 cv
426.505 168.469 li
425.986 168.729 425.467 168.996 424.948 169.277 cv
424.503 169.515 424.058 169.759 423.621 170.004 cv
423.458 170.101 423.287 170.197 423.116 170.301 cv
421.456 171.279 420.255 172.147 419.551 172.881 cv
419.395 173.044 419.269 173.185 419.143 173.318 cv
419.069 173.407 li
418.943 173.548 418.862 173.644 418.787 173.733 cv
418.683 173.859 li
418.483 174.111 li
418.394 174.23 li
418.224 174.475 li
417.541 174.156 li
416.74 174.037 li
416.793 173.941 416.852 173.844 416.919 173.748 cv
416.971 173.681 li
417.06 173.548 417.126 173.452 417.2 173.355 cv
417.282 173.236 li
417.371 173.126 417.446 173.029 417.52 172.933 cv
417.646 172.777 li
417.735 172.681 417.823 172.577 417.912 172.473 cv
418.046 172.325 li
418.179 172.176 418.32 172.021 418.476 171.865 cv
419.283 171.02 420.589 170.071 422.368 169.025 cv
422.538 168.922 422.709 168.818 422.887 168.722 cv
423.331 168.462 423.791 168.21 424.243 167.965 cv
424.778 167.684 425.311 167.409 425.837 167.143 cv
426.357 166.883 li
429.018 165.564 431.309 164.607 431.331 164.6 cv
431.42 164.57 li
431.48 164.555 437.64 162.828 444.661 161.575 cv
446.018 161.33 447.345 161.115 448.606 160.937 cv
449.265 160.848 449.932 160.759 450.592 160.678 cv
451.979 160.515 453.291 160.396 454.491 160.329 cv
455.604 160.262 456.501 159.996 457.331 159.484 cv
457.457 159.402 457.591 159.321 457.709 159.232 cv
457.806 159.158 li
458.103 158.943 458.392 158.683 458.733 158.357 cv
458.822 158.268 li
458.97 158.135 459.111 157.994 459.251 157.846 cv
459.86 157.23 li
460 157.097 460.134 156.956 460.275 156.822 cv
460.408 156.696 li
460.578 156.533 460.719 156.407 460.861 156.281 cv
461.038 156.118 li
461.245 155.941 461.453 155.762 461.676 155.585 cv
463.107 154.465 463.9 153.783 464.434 153.316 cv
465.257 152.574 li
465.835 152.055 466.457 151.514 467.733 150.573 cv
468.467 150.039 469.215 149.15 470.031 147.867 cv
470.216 147.57 li
470.342 147.37 470.453 147.177 470.573 146.984 cv
470.736 146.695 li
470.891 146.428 471.031 146.176 471.165 145.939 cv
471.491 145.354 li
472.077 144.345 472.463 143.722 473.101 143.7 cv
473.405 143.678 473.7 143.834 473.886 144.108 cv
473.908 144.138 li
473.975 144.234 474.027 144.353 474.064 144.479 cv
474.101 144.612 li
474.146 144.842 li
474.16 144.961 li
474.168 145.072 474.175 145.131 474.175 145.205 cv
cp
f
468.926 168.951 mo
469.371 169.537 li
469.275 169.604 li
469.134 169.708 469.008 169.789 468.874 169.863 cv
468.697 169.96 li
468.571 170.019 468.437 170.078 468.304 170.138 cv
468.118 170.204 li
467.926 170.278 467.718 170.338 467.503 170.382 cv
467.489 170.382 li
467.251 170.427 467.051 170.768 466.88 171.168 cv
466.709 171.568 466.576 172.043 466.48 172.377 cv
466.324 172.933 li
465.976 174.2 465.583 175.639 464.804 176.958 cv
464.13 178.108 463.136 179.227 461.772 180.383 cv
461.468 180.643 461.171 180.88 460.882 181.103 cv
460.423 181.459 460 181.762 459.659 182.007 cv
459.422 182.178 li
459.303 182.267 458.992 182.489 458.91 182.578 cv
458.851 182.659 li
458.792 182.763 li
458.755 182.83 li
458.688 182.986 li
457.969 182.786 li
458.651 183.067 li
458.555 183.312 li
458.495 183.467 458.458 183.586 458.421 183.705 cv
457.68 183.586 li
456.976 183.371 li
457.005 183.253 li
457.05 183.119 457.094 182.986 457.146 182.859 cv
457.205 182.696 457.242 182.593 457.28 182.504 cv
457.317 182.415 li
457.361 182.318 457.391 182.244 457.428 182.178 cv
457.48 182.074 li
457.591 181.874 li
457.657 181.777 li
457.858 181.525 li
457.998 181.384 458.221 181.221 458.547 180.977 cv
458.792 180.806 li
459.125 180.562 459.533 180.272 459.978 179.931 cv
460.245 179.724 460.527 179.494 460.816 179.249 cv
462.031 178.219 462.944 177.195 463.522 176.21 cv
464.203 175.053 464.574 173.718 464.901 172.54 cv
465.057 171.969 li
465.39 170.812 465.835 169.226 467.169 168.937 cv
467.192 168.929 li
467.347 168.9 467.489 168.855 467.621 168.811 cv
467.703 168.781 li
467.844 168.722 467.933 168.685 468.022 168.64 cv
468.148 168.573 li
468.407 168.41 li
468.926 168.951 li
cp
f
412.382 193.499 mo
412.411 193.246 li
411.744 193.758 411.188 194.551 410.966 194.929 cv
410.721 196.012 410.506 197.895 410.921 198.673 cv
410.973 198.762 li
411.24 198.184 411.47 197.576 411.67 196.901 cv
411.766 196.56 li
411.825 196.353 411.885 196.138 411.937 195.93 cv
412.026 195.53 li
412.071 195.33 412.108 195.137 412.152 194.937 cv
412.174 194.796 412.197 194.655 412.226 194.514 cv
412.255 194.314 412.292 194.114 412.323 193.921 cv
412.382 193.499 li
cp
421.426 191.267 mo
422.398 190.629 423.028 190.155 423.035 189.317 cv
422.279 189.732 421.411 190.155 420.536 190.54 cv
420.536 190.689 420.53 190.844 420.53 190.993 cv
420.522 191.296 420.515 191.615 420.492 191.941 cv
420.781 191.697 421.108 191.482 421.426 191.267 cv
cp
462.506 199.059 mo
462.736 199.429 462.758 199.845 462.573 200.2 cv
462.157 200.979 460.935 201.179 458.822 201.275 cv
457.487 201.335 455.486 200.675 455.003 199.815 cv
454.937 199.689 li
453.899 199.741 452.66 199.733 451.779 199.14 cv
450.896 198.555 450.718 197.361 450.577 196.397 cv
450.54 196.175 450.495 195.878 450.451 195.708 cv
450.095 195.56 449.784 195.255 449.554 194.811 cv
449.198 194.107 449.161 193.254 449.465 192.646 cv
449.777 192.023 450.125 191.326 450.377 188.153 cv
450.548 186.003 450.206 184.305 449.791 182.912 cv
445.588 183.223 439.79 182.63 435.371 182.022 cv
433.555 187.286 430.745 189.614 428.863 191.178 cv
427.839 192.023 427.098 192.631 426.883 193.343 cv
426.638 194.158 426.52 194.988 427.253 195.567 cv
427.758 195.96 429.077 196.13 430.13 196.271 cv
431.265 196.427 432.243 196.553 432.828 196.939 cv
433.577 197.421 433.563 198.058 433.518 198.31 cv
433.392 199.103 432.51 199.674 431.932 199.815 cv
429.448 200.453 427.506 200.341 425.83 199.466 cv
425.2 199.133 424.4 198.429 423.465 197.606 cv
423.079 197.265 422.672 196.909 422.264 196.56 cv
421.842 196.219 li
421.122 195.626 420.433 195.063 420.032 194.44 cv
419.892 194.878 419.706 195.293 419.462 195.7 cv
418.736 196.916 417.52 197.932 415.948 198.636 cv
414.798 199.148 413.59 199.452 412.404 199.718 cv
412.99 200.067 413.582 200.623 413.398 201.75 cv
413.16 203.159 412.026 203.151 411.329 203.151 cv
411.173 203.151 411.002 203.151 410.832 203.159 cv
410.743 203.166 410.647 203.166 410.55 203.166 cv
409.365 203.166 407.422 202.81 407.051 201.401 cv
406.822 200.519 406.762 198.711 406.71 197.257 cv
406.696 196.923 406.688 196.612 406.673 196.345 cv
406.658 195.908 406.576 195.204 406.488 194.455 cv
406.265 192.49 406.117 191.03 406.258 190.207 cv
406.495 188.865 407.592 188.657 408.756 188.435 cv
409.231 188.338 409.772 188.234 410.372 188.057 cv
411.202 187.812 412.026 187.174 412.886 186.122 cv
412.975 184.713 413.093 183.616 413.256 182.586 cv
413.316 182.207 413.39 181.829 413.464 181.459 cv
413.99 178.967 414.954 176.773 416.251 175.105 cv
416.319 174.92 li
416.437 174.616 416.571 174.326 416.74 174.037 cv
417.541 174.156 li
418.164 174.564 li
417.964 174.86 417.823 175.134 417.72 175.401 cv
417.683 175.505 417.66 175.572 417.638 175.639 cv
417.615 175.735 417.564 175.839 417.504 175.913 cv
416.304 177.418 415.406 179.442 414.917 181.762 cv
414.843 182.118 414.777 182.467 414.724 182.823 cv
414.554 183.86 414.435 184.98 414.346 186.448 cv
414.339 186.596 414.287 186.745 414.191 186.863 cv
413.086 188.272 411.974 189.124 410.795 189.48 cv
410.12 189.68 409.52 189.799 409.038 189.888 cv
407.889 190.11 407.77 190.192 407.718 190.459 cv
407.6 191.141 407.807 192.957 407.963 194.284 cv
408.052 195.092 408.133 195.789 408.156 196.278 cv
408.17 196.546 408.178 196.864 408.193 197.205 cv
408.238 198.51 408.296 200.304 408.49 201.024 cv
408.586 201.401 409.728 201.735 410.75 201.683 cv
410.958 201.669 411.151 201.669 411.329 201.669 cv
411.536 201.669 411.811 201.676 411.907 201.639 cv
411.937 201.505 li
411.982 201.209 411.996 201.157 411.277 200.794 cv
410.758 200.526 410.046 200.171 409.616 199.378 cv
408.779 197.821 409.468 194.818 409.549 194.477 cv
409.623 194.292 li
409.66 194.225 410.558 192.616 411.907 191.793 cv
412.197 191.623 412.56 191.452 413.027 191.275 cv
413.264 191.185 413.531 191.23 413.739 191.378 cv
413.939 191.534 414.05 191.778 414.028 192.03 cv
414.013 192.238 413.99 192.431 413.976 192.624 cv
413.931 193.039 li
413.902 193.254 413.879 193.476 413.85 193.691 cv
413.782 194.136 li
413.753 194.344 413.724 194.559 413.687 194.766 cv
413.656 194.915 413.635 195.063 413.605 195.211 cv
413.568 195.426 413.516 195.633 413.472 195.849 cv
413.456 195.93 li
413.427 196.049 413.405 196.16 413.375 196.278 cv
413.323 196.508 413.256 196.738 413.198 196.961 cv
413.093 197.331 li
413.012 197.591 412.93 197.843 412.841 198.095 cv
413.701 197.88 414.554 197.635 415.347 197.279 cv
416.244 196.879 417.475 196.145 418.187 194.937 cv
418.906 193.743 419.025 192.26 419.046 190.963 cv
419.054 190.667 419.054 190.362 419.046 190.066 cv
419.046 189.762 419.225 189.487 419.499 189.369 cv
420.848 188.806 422.183 188.138 423.161 187.538 cv
423.354 187.419 423.584 187.397 423.791 187.471 cv
424.006 187.545 424.169 187.708 424.243 187.916 cv
425.207 190.54 423.428 191.719 422.249 192.505 cv
421.834 192.779 421.442 193.039 421.219 193.298 cv
421.167 193.395 li
421.204 193.773 422.153 194.551 422.783 195.07 cv
423.213 195.426 li
423.636 195.775 424.051 196.145 424.444 196.494 cv
425.274 197.22 426.045 197.902 426.52 198.147 cv
427.869 198.858 429.426 198.925 431.561 198.384 cv
431.687 198.347 431.858 198.243 431.969 198.147 cv
431.613 197.969 430.686 197.843 429.938 197.747 cv
428.573 197.561 427.164 197.376 426.342 196.738 cv
424.703 195.456 425.274 193.543 425.467 192.92 cv
425.808 191.778 426.742 191.007 427.913 190.029 cv
429.849 188.435 432.488 186.255 434.156 180.977 cv
434.267 180.635 434.608 180.421 434.971 180.465 cv
438.738 181.006 445.737 181.837 450.251 181.384 cv
450.6 181.347 450.918 181.562 451.03 181.888 cv
451.348 182.882 452.105 185.195 451.853 188.272 cv
451.601 191.475 451.238 192.416 450.792 193.306 cv
450.637 193.617 450.866 194.24 451.03 194.344 cv
451.785 194.462 451.919 195.337 452.038 196.182 cv
452.127 196.775 452.268 197.687 452.601 197.91 cv
453.209 198.317 454.433 198.236 455.329 198.176 cv
455.618 198.154 455.907 198.317 456.041 198.584 cv
456.145 198.799 456.234 198.984 456.301 199.096 cv
456.501 199.326 457.798 199.845 458.718 199.793 cv
459.763 199.748 460.504 199.674 460.935 199.57 cv
460.393 199.266 459.356 199.029 458.851 198.918 cv
458.466 198.829 458.184 198.762 457.976 198.681 cv
457.123 198.339 456.086 197.613 455.574 194.952 cv
455.323 193.639 455.574 191.096 455.744 189.703 cv
455.907 188.45 li
455.967 188.042 456.033 187.634 456.101 187.234 cv
456.123 187.13 li
456.464 185.365 li
456.508 185.173 456.545 184.995 456.582 184.817 cv
456.613 184.728 li
456.976 183.371 li
457.68 183.586 li
458.392 183.801 li
458.05 185.069 li
457.309 184.987 li
458.029 185.158 li
457.583 187.382 li
456.834 187.36 li
457.561 187.486 li
457.494 187.879 457.435 188.272 457.376 188.665 cv
457.213 189.88 li
456.946 192.083 456.879 193.869 457.028 194.67 cv
457.449 196.879 458.206 197.176 458.532 197.309 cv
458.621 197.346 458.918 197.413 459.185 197.472 cv
460.623 197.798 461.965 198.169 462.506 199.059 cv
cp
f
452.991 68.379 mo
453.005 68.3722 li
452.998 68.3653 li
452.991 68.3722 li
452.991 68.379 li
cp
487.996 97.1168 mo
488.946 95.8404 li
478.207 87.7789 li
474.494 84.9801 470.76 82.2154 467.068 79.3893 cv
455.968 70.9386 li
455.674 70.7135 455.381 70.4879 455.094 70.2628 cv
455.019 70.2081 li
454.951 70.1534 li
454.295 69.6485 453.64 69.1432 452.985 68.6383 cv
452.815 68.5084 li
452.876 68.4537 li
416.732 95.4171 li
417.045 95.8404 li
417.988 97.11 li
427.707 89.9425 li
431.08 87.4444 434.452 84.9459 437.859 82.4884 cv
448.05 75.089 li
449.592 73.983 451.135 72.8771 452.678 71.7648 cv
452.774 71.7032 li
452.863 71.6349 li
452.985 71.7237 li
453.101 71.8058 li
455.012 73.1642 456.917 74.5226 458.822 75.8741 cv
468.719 83.0143 li
472.023 85.3829 475.3 87.7926 478.576 90.2023 cv
487.996 97.1168 li
cp
436.247 129.234 mo
436.275 129.234 436.336 129.227 436.473 129.213 cv
436.991 129.213 li
436.985 129.234 li
436.998 129.234 li
437.25 129.268 li
437.231 129.439 437.224 129.575 437.243 129.678 cv
437.231 129.958 li
434.323 130.073 431.421 129.882 428.513 129.951 cv
428.035 129.958 li
428.022 129.459 li
427.94 126.538 427.906 123.609 427.844 120.688 cv
427.755 111.909 li
427.728 103.131 li
427.748 98.2911 li
425.407 98.3253 423.066 98.3526 420.718 98.3526 cv
419.837 98.3526 418.956 98.3458 418.076 98.339 cv
417.926 98.339 417.776 98.339 417.625 98.339 cv
417.476 98.1407 li
416.874 97.3356 li
415.906 96.045 li
415.591 95.629 li
416.015 95.3146 li
427.517 86.7892 li
431.36 83.9562 435.183 81.089 439.046 78.2901 cv
452.835 67.983 li
452.835 67.983 452.835 67.983 453.142 68.2628 cv
453.32 68.3927 li
454.002 68.8839 454.685 69.3756 455.367 69.86 cv
455.429 69.9078 li
455.497 69.9557 li
455.756 70.1466 456.023 70.338 456.289 70.5289 cv
467.559 78.7408 li
471.32 81.4713 475.04 84.2565 478.781 87.0143 cv
489.996 95.3146 li
490.419 95.629 li
490.106 96.045 li
489.122 97.3492 li
488.529 98.1407 li
488.392 98.3253 li
488.236 98.3253 488.078 98.3253 487.921 98.3321 cv
486.501 98.3458 485.074 98.3526 483.655 98.3526 cv
481.853 98.3526 480.058 98.339 478.262 98.3185 cv
478.282 103.131 li
478.255 111.909 li
478.159 120.688 li
478.106 123.609 478.065 126.538 477.983 129.459 cv
477.969 129.958 li
477.497 129.944 li
473.812 129.999 468.549 129.999 468.549 129.999 cv
468.563 129.794 468.522 129.029 468.488 128.394 cv
469.198 128.354 li
469.211 128.661 469.245 128.954 469.32 129.22 cv
471.983 129.125 474.337 129.056 476.999 128.988 cv
476.924 126.217 476.89 123.452 476.835 120.688 cv
476.74 111.909 li
476.713 103.131 li
476.734 98.2911 li
476.74 97.3761 li
476.754 94.7482 li
471.013 90.8507 li
464.965 86.6661 li
460.951 83.8605 456.951 81.0275 453.005 78.1197 cv
449.06 81.0275 445.06 83.8605 441.039 86.6661 cv
434.998 90.8439 li
429.257 94.7482 li
429.264 97.3966 li
429.271 98.2638 li
429.291 103.131 li
429.271 111.909 li
429.175 120.688 li
429.12 123.452 429.086 126.217 429.012 128.982 cv
431.647 129.049 433.77 129.111 436.398 129.207 cv
436.247 129.234 li
cp
f
465.641 110.435 mo
468.399 114.64 469.545 119.712 469.211 124.558 cv
469.081 122.578 469.184 125.37 469.225 124.558 cv
469.265 125.384 469.265 126.21 469.225 127.029 cv
469.204 127.459 469.177 127.923 469.198 128.354 cv
468.488 128.394 li
468.481 128.258 468.474 128.128 468.467 128.012 cv
466.603 123.759 466.241 122.101 453.101 122.101 cv
440.281 122.101 439.08 123.807 437.462 127.999 cv
437.407 128.462 437.298 128.927 437.25 129.268 cv
436.998 129.234 li
436.991 129.213 li
436.473 129.213 li
436.541 127.718 436.609 126.988 436.656 125.923 cv
436.555 119.937 437.599 114.64 440.357 110.442 cv
441.722 108.339 443.524 106.496 445.688 105.138 cv
447.859 103.786 450.398 103.008 453.005 103.001 cv
455.566 103.008 458.146 103.786 460.303 105.138 cv
462.466 106.489 464.276 108.339 465.641 110.435 cv
cp
f
448.077 94.2843 mo
448.569 94.2843 449.019 94.004 449.019 93.4718 cv
449.019 92.9391 448.555 92.6593 448.071 92.6593 cv
447.92 92.6593 447.606 92.7071 447.087 92.7071 cv
446.827 92.7003 li
446.719 92.7003 446.562 92.7345 446.562 92.878 cv
446.562 93.0963 446.889 92.9801 446.889 93.2467 cv
446.889 94.6388 li
446.889 94.9327 446.63 94.8097 446.63 95.0074 cv
446.63 95.2399 447.156 95.2399 447.306 95.2399 cv
447.469 95.2399 447.982 95.233 447.982 95.0006 cv
447.982 94.7892 447.722 94.9801 447.708 94.5299 cv
447.708 94.3248 li
447.763 94.2706 li
447.865 94.2706 447.968 94.2843 448.077 94.2843 cv
cp
451.818 93.2735 mo
451.818 92.9527 452.084 93.0758 452.084 92.878 cv
452.084 92.6661 451.695 92.6661 451.558 92.6661 cv
451.415 92.6661 450.998 92.6593 450.998 92.8849 cv
450.998 93.0895 451.306 92.9391 451.306 93.3214 cv
451.306 94.2091 li
451.306 94.2501 451.333 94.714 450.767 94.714 cv
450.391 94.714 450.234 94.441 450.234 94.0177 cv
450.234 93.3624 li
450.254 92.9322 450.514 93.1715 450.514 92.9122 cv
450.514 92.7755 450.391 92.6661 449.811 92.6661 cv
449.08 92.6661 449.121 92.8712 449.121 92.9191 cv
449.121 93.0826 449.361 93.0826 449.347 93.3077 cv
449.347 94.1271 li
449.347 94.1681 449.19 95.2535 450.596 95.2535 cv
451.824 95.2535 451.818 94.4 451.818 94.2364 cv
451.818 93.2735 li
cp
453.701 94.2843 mo
454.2 94.2843 454.644 94.004 454.644 93.4718 cv
454.644 92.9391 454.18 92.6593 453.695 92.6593 cv
453.545 92.6593 453.231 92.7071 452.719 92.7071 cv
452.452 92.7003 li
452.343 92.7003 452.187 92.7345 452.187 92.878 cv
452.187 93.0963 452.521 92.9801 452.521 93.2467 cv
452.521 94.6388 li
452.521 94.9327 452.261 94.8097 452.261 95.0074 cv
452.261 95.2399 452.787 95.2399 452.937 95.2399 cv
453.094 95.2399 453.606 95.233 453.606 95.0006 cv
453.606 94.7892 453.347 94.9801 453.333 94.5299 cv
453.333 94.3248 li
453.395 94.2706 li
453.49 94.2706 453.599 94.2843 453.701 94.2843 cv
cp
456.262 94.2843 mo
456.76 94.2843 457.203 94.004 457.203 93.4718 cv
457.203 92.9391 456.74 92.6593 456.255 92.6593 cv
456.105 92.6593 455.79 92.7071 455.279 92.7071 cv
455.012 92.7003 li
454.904 92.7003 454.746 92.7345 454.746 92.878 cv
454.746 93.0963 455.08 92.9801 455.08 93.2467 cv
455.08 94.6388 li
455.08 94.9327 454.822 94.8097 454.822 95.0074 cv
454.822 95.2399 455.347 95.2399 455.497 95.2399 cv
455.654 95.2399 456.166 95.233 456.166 95.0006 cv
456.166 94.7892 455.906 94.9801 455.893 94.5299 cv
455.893 94.3248 li
455.954 94.2706 li
456.05 94.2706 456.153 94.2843 456.262 94.2843 cv
cp
459.736 93.1647 mo
459.913 92.9733 460.173 93.1031 460.173 92.878 cv
460.173 92.7208 460.05 92.6661 459.607 92.6661 cv
459.47 92.6661 459.06 92.6661 459.06 92.878 cv
459.06 93.0143 459.162 93.0211 459.162 93.1168 cv
458.924 93.3898 li
458.692 93.0895 li
458.692 93.0143 458.787 92.9801 458.787 92.8849 cv
458.787 92.8097 458.794 92.6661 458.057 92.6661 cv
457.224 92.6661 457.251 92.8302 457.251 92.9122 cv
457.251 93.0826 457.484 93.0279 457.661 93.233 cv
458.057 93.6969 li
458.187 93.8541 458.221 93.9225 458.221 94.1271 cv
458.221 94.4752 458.194 94.6324 458.159 94.7208 cv
458.098 94.8644 457.893 94.7892 457.893 94.9869 cv
457.893 95.0826 457.989 95.2399 458.685 95.2399 cv
458.856 95.2399 459.422 95.2399 459.422 94.9869 cv
459.422 94.8165 459.231 94.837 459.183 94.7345 cv
459.149 94.6661 459.128 94.5231 459.128 94.1954 cv
459.128 93.9498 459.142 93.8404 459.299 93.649 cv
459.736 93.1647 li
cp
459.128 90.045 mo
461.566 90.045 463.538 91.6285 463.538 93.5812 cv
463.538 95.5333 461.566 97.1168 459.128 97.1168 cv
448.036 97.1168 li
445.599 97.1168 443.626 95.5333 443.626 93.5812 cv
443.626 91.6285 445.599 90.045 448.036 90.045 cv
459.128 90.045 li
cp
f
456.384 93.4855 mo
456.384 93.7037 456.289 93.8815 456.057 93.8815 cv
455.865 93.8815 455.893 93.7994 455.893 93.7242 cv
455.893 93.192 li
455.893 93.1168 455.893 93.0758 456.03 93.0758 cv
456.269 93.0758 456.384 93.2604 456.384 93.4855 cv
cp
f
453.824 93.4855 mo
453.824 93.7037 453.729 93.8815 453.497 93.8815 cv
453.306 93.8815 453.333 93.7994 453.333 93.7242 cv
453.333 93.192 li
453.333 93.1168 453.333 93.0758 453.47 93.0758 cv
453.708 93.0758 453.824 93.2604 453.824 93.4855 cv
cp
f
448.199 93.4855 mo
448.199 93.7037 448.105 93.8815 447.872 93.8815 cv
447.674 93.8815 447.708 93.7994 447.708 93.7242 cv
447.708 93.192 li
447.708 93.1168 447.708 93.0758 447.845 93.0758 cv
448.084 93.0758 448.199 93.2604 448.199 93.4855 cv
cp
f
609.717 127.427 mo
609.805 127.66 609.938 128.013 609.774 128.543 cv
609.679 128.838 609.484 129.078 609.332 129.204 cv
609.113 129.361 li
608.917 129.462 li
608.697 129.563 608.545 129.588 608.426 129.607 cv
608.18 129.651 607.997 129.651 607.846 129.657 cv
592.892 129.708 li
591.235 129.714 589.578 129.714 587.921 129.714 cv
586.876 129.714 585.823 129.714 584.779 129.708 cv
567.001 129.638 li
566.781 129.62 566.63 129.638 566.378 129.62 cv
566.196 129.607 565.993 129.575 565.754 129.506 cv
565.477 129.418 565.156 129.292 564.847 128.964 cv
564.507 128.624 564.363 128.108 564.368 127.755 cv
564.363 127.453 564.412 127.232 564.469 127.03 cv
564.564 126.703 564.664 126.457 564.759 126.237 cv
564.784 126.174 li
565.137 125.386 565.376 124.775 565.452 124.221 cv
564.583 122.904 563.978 121.317 563.613 119.364 cv
563.317 117.752 563.191 116.038 563.209 113.972 cv
563.241 110.854 563.607 107.522 564.363 103.497 cv
564.936 100.41 565.73 97.0904 566.794 93.336 cv
567.644 90.3815 568.52 87.6666 569.458 85.0777 cv
570.157 85.3297 li
570.145 85.399 li
569.427 88.0445 568.74 90.8224 568.104 93.6695 cv
567.329 97.1407 566.693 100.548 566.221 103.799 cv
565.962 105.613 565.78 107.276 565.66 108.889 cv
565.509 110.747 565.452 112.404 565.484 113.96 cv
565.528 115.849 565.698 117.456 566.006 118.886 cv
566.404 120.719 566.983 122.098 567.777 123.1 cv
568.041 123.44 li
568.041 123.881 li
568.054 125.09 567.625 126.136 567.273 126.98 cv
573.068 126.949 li
584.779 126.917 li
605.874 126.961 li
605.54 126.526 605.137 125.985 604.954 125.16 cv
604.861 124.687 604.898 124.177 605.056 123.749 cv
605.1 123.635 605.144 123.528 605.213 123.396 cv
605.301 123.251 li
605.522 122.892 li
606.29 121.594 606.832 119.931 607.185 117.808 cv
607.795 113.953 607.537 109.89 607.203 106.426 cv
606.851 102.98 606.259 99.339 605.345 94.9674 cv
604.633 91.6227 603.846 88.3722 603.008 85.3107 cv
603.701 85.0587 li
604.828 88.1642 605.849 91.3829 606.731 94.6334 cv
607.853 98.7467 608.653 102.52 609.188 106.18 cv
609.496 108.284 609.686 110.224 609.767 112.114 cv
609.862 114.369 609.792 116.341 609.56 118.155 cv
609.239 120.587 608.653 122.502 607.714 124.171 cv
607.462 124.599 li
607.474 124.637 li
607.493 124.737 607.632 125.008 607.915 125.336 cv
608.136 125.601 608.413 125.872 608.702 126.161 cv
608.961 126.413 li
609.113 126.565 609.282 126.741 609.484 127.018 cv
609.553 127.119 609.635 127.232 609.717 127.427 cv
cp
f
604.438 79.9625 mo
604.45 80.1578 604.463 80.3785 604.425 80.6871 cv
604.35 81.3673 604.041 82.0729 603.55 82.6588 cv
603.298 82.9547 603.015 83.2193 602.694 83.4523 cv
602.807 83.547 li
603.109 83.4459 li
603.165 83.5909 603.222 83.7359 603.273 83.8868 cv
603.386 84.2018 li
603.531 84.4288 603.619 84.6744 603.645 84.9073 cv
603.701 85.0587 li
603.008 85.3107 li
602.907 84.9454 li
602.825 84.8316 602.718 84.7247 602.586 84.6368 cv
602.365 84.4728 602.101 84.3404 601.723 84.2081 cv
601.124 84.0006 600.463 83.8492 599.701 83.7359 cv
598.252 83.4903 596.746 83.402 595.411 83.3263 cv
593.553 83.2257 591.525 83.1754 589.226 83.1754 cv
588.388 83.1754 587.556 83.1813 586.718 83.194 cv
583.361 83.2442 580.596 83.358 578.019 83.5533 cv
576.697 83.6603 575.185 83.7799 573.73 84.0382 cv
573.005 84.1451 572.312 84.3028 571.663 84.4982 cv
571.285 84.6114 570.995 84.7311 570.738 84.8761 cv
570.473 85.0148 570.283 85.1593 570.157 85.3297 cv
569.458 85.0777 li
569.654 84.5294 569.856 83.9879 570.063 83.4459 cv
570.636 83.6285 li
570.592 83.7862 li
570.687 83.7169 570.787 83.6412 570.901 83.5719 cv
570.252 83.1437 569.754 82.6022 569.402 81.9659 cv
569.225 81.6383 569.099 81.2853 569.031 80.92 cv
568.961 80.586 568.967 80.2145 568.986 79.8932 cv
569.194 74.816 li
569.232 74.2237 569.276 73.6446 569.396 73.0524 cv
569.458 72.7501 569.546 72.4225 569.717 72.1075 cv
569.912 71.7233 570.29 71.4147 570.687 71.339 cv
571.216 71.2442 571.733 71.3453 572.198 71.4523 cv
572.312 71.4776 572.425 71.5025 572.538 71.5279 cv
572.942 71.6158 573.345 71.6979 573.741 71.7672 cv
573.685 72.4225 li
572.954 72.3531 572.469 72.3092 572.419 72.3028 cv
572.306 72.2965 572.186 72.2838 572.067 72.2648 cv
571.821 72.2399 571.587 72.2145 571.367 72.2145 cv
571.191 72.2145 571.046 72.2335 570.926 72.2648 cv
570.699 72.3341 570.567 72.6363 570.491 73.235 cv
570.429 73.7643 570.429 74.3185 570.435 74.8414 cv
570.63 79.8995 li
570.643 80.1896 570.649 80.3595 570.699 80.5484 cv
570.756 80.7501 570.838 80.9327 570.933 81.09 cv
571.335 81.7579 572.142 82.2682 573.087 82.4571 cv
573.156 82.4698 li
573.294 82.4132 li
574.674 81.9278 576.116 81.5436 577.71 81.2413 cv
580.527 80.712 583.455 80.4288 586.681 80.3785 cv
586.957 80.3785 587.241 80.3722 587.525 80.3722 cv
590.448 80.3722 593.113 80.5797 595.669 80.9957 cv
597.308 81.2667 598.763 81.6319 600.116 82.1041 cv
600.324 82.1798 600.532 82.2618 600.735 82.3439 cv
601.332 82.1612 601.843 81.8585 602.201 81.4742 cv
602.486 81.1656 602.681 80.8067 602.75 80.4352 cv
602.781 80.3214 602.787 80.1075 602.794 79.9313 cv
602.832 78.8727 li
602.869 77.7452 602.913 76.6178 602.97 75.484 cv
603.046 74.879 603.121 74.2301 603.115 73.5875 cv
603.103 73.0084 603.052 72.441 602.756 72.1954 cv
602.656 72.1139 602.486 72.0631 602.259 72.0631 cv
602.164 72.0694 li
601.881 72.0821 601.591 72.1388 601.282 72.1954 cv
601.124 72.2272 li
601.1 72.2335 600.64 72.2901 599.934 72.3722 cv
599.877 71.7482 li
600.242 71.673 600.602 71.5592 600.974 71.4459 cv
601.074 71.4147 li
601.37 71.3263 601.71 71.2257 602.082 71.1749 cv
602.517 71.1119 602.995 71.1749 603.336 71.3956 cv
603.669 71.6158 603.909 71.9625 604.067 72.4601 cv
604.167 72.7814 604.237 73.1344 604.268 73.5309 cv
604.324 74.2301 604.299 74.923 604.262 75.5089 cv
604.319 76.6305 604.363 77.7516 604.401 78.8727 cv
604.432 79.7169 li
604.438 79.9625 li
cp
f
600.129 103.704 mo
600.275 102.199 600.18 100.662 599.808 99.1817 cv
599.367 97.4684 598.605 95.8116 597.502 94.3941 cv
596.406 92.983 595.008 91.8053 593.433 90.942 cv
593.194 90.8097 592.942 90.7027 592.69 90.5831 cv
591.304 89.9659 589.818 89.5816 588.306 89.4684 cv
586.517 89.3419 584.715 89.6192 583.046 90.2052 cv
581.37 90.7975 579.839 91.7486 578.542 92.92 cv
577.244 94.1046 576.205 95.5343 575.449 97.0904 cv
574.466 99.1251 574.026 101.374 574.114 103.578 cv
574.612 102.955 577.698 102.042 578.101 100.844 cv
579.285 97.336 580.734 94.9547 583.941 96.6114 cv
583.941 96.6114 581.584 96.6114 581.584 98.8097 cv
581.584 99.2823 581.572 99.9059 581.534 100.618 cv
581.307 104.838 580.136 112.02 574.933 106.917 cv
574.813 106.804 574.687 106.652 574.555 106.476 cv
574.605 106.652 574.643 106.835 574.699 107.011 cv
575.676 110.205 577.893 112.964 580.816 114.489 cv
583.707 116.076 587.235 116.404 590.442 115.446 cv
593.654 114.514 596.52 112.309 598.29 109.317 cv
599.159 107.843 599.777 106.168 600.041 104.442 cv
600.079 104.196 600.111 103.95 600.129 103.704 cv
cp
600.388 99.0113 mo
601.502 102.577 601.188 106.577 599.519 109.979 cv
598.681 111.711 597.502 113.292 596.104 114.558 cv
594.637 115.875 592.917 116.908 591.128 117.538 cv
589.534 118.092 587.903 118.376 586.283 118.376 cv
585.956 118.376 585.635 118.363 585.314 118.344 cv
583.348 118.192 581.383 117.632 579.632 116.706 cv
577.9 115.768 576.337 114.444 575.121 112.882 cv
573.956 111.389 573.068 109.563 572.564 107.597 cv
572.098 105.771 572.003 103.761 572.286 101.802 cv
572.571 99.9376 573.232 98.0792 574.214 96.4098 cv
576.123 93.1407 579.279 90.6651 582.864 89.6192 cv
584.186 89.2223 585.572 89.0211 586.97 89.0211 cv
589.314 89.0211 591.594 89.5943 593.566 90.6715 cv
593.572 90.6774 li
593.578 90.6774 li
596.816 92.3658 599.298 95.4083 600.388 99.0113 cv
cp
f
599.877 71.7482 mo
599.934 72.3722 li
598.429 72.5358 595.808 72.8004 593.9 72.8634 cv
591.487 72.9576 589.118 72.9767 586.913 72.9894 cv
584.684 72.9767 582.296 72.9576 579.921 72.8634 cv
577.988 72.8004 575.26 72.567 573.685 72.4225 cv
573.741 71.7672 li
575.594 71.6036 577.559 71.4899 579.921 71.402 cv
582.327 71.3136 584.702 71.2887 586.907 71.2823 cv
588.992 71.2887 591.449 71.3072 593.9 71.402 cv
596.173 71.484 598.075 71.5909 599.877 71.7482 cv
cp
f
599.203 102.489 mo
599.26 102.867 599.267 103.245 599.235 103.616 cv
599.065 105.695 597.628 107.61 595.645 108.359 cv
592.111 109.689 591.209 107.604 590.92 104.214 cv
590.586 106.294 587.833 109.865 582.435 112.196 cv
585.124 110.772 587.556 107.679 588.91 104.599 cv
590.913 100.057 590.573 95.547 585.263 96.4161 cv
588.205 94.4381 590.214 96.0763 590.624 98.0099 cv
592.098 96.7062 593.389 100.926 594.517 101.853 cv
595.972 103.049 597.572 102.967 599.203 102.489 cv
cp
f
593.686 76.7184 mo
593.686 75.7862 592.929 75.0304 592.003 75.0304 cv
580.81 75.0304 li
579.877 75.0304 579.121 75.7862 579.121 76.7184 cv
579.121 77.6446 579.877 78.4005 580.81 78.4005 cv
592.003 78.4005 li
592.929 78.4005 593.686 77.6446 593.686 76.7184 cv
cp
592.003 73.7706 mo
593.628 73.7706 594.946 75.0934 594.946 76.7184 cv
594.946 78.3375 593.628 79.6603 592.003 79.6603 cv
587.525 79.6603 li
580.81 79.6603 li
579.185 79.6603 577.862 78.3375 577.862 76.7184 cv
577.862 75.0934 579.185 73.7706 580.81 73.7706 cv
586.913 73.7706 li
592.003 73.7706 li
cp
f
586.114 100.127 mo
587.543 99.9122 590.019 101.89 587.789 102.747 cv
587.191 102.974 586.617 102.678 586.227 102.192 cv
585.868 101.745 585.673 101.134 585.774 100.624 cv
585.823 100.359 585.949 100.127 586.177 99.9503 cv
586.114 100.127 li
cp
f
585.786 105.273 mo
586.34 105.695 588.136 105.544 588.665 104.555 cv
587.247 107.32 585.49 107.459 584.653 105.538 cv
584.64 105.512 582.435 107.459 582.315 103.389 cv
583.707 104.989 583.707 104.989 584.368 104.832 cv
584.306 104.587 584.262 104.328 584.218 104.076 cv
584.218 104.454 li
584.085 103.616 584.753 102.822 585.408 102.822 cv
585.673 102.822 585.944 102.955 586.152 103.276 cv
586.586 103.938 586.12 104.599 585.786 105.273 cv
cp
f
582.435 100.668 mo
583.109 99.44 585.572 98.9864 585.44 100.599 cv
585.421 100.781 585.37 101.002 585.276 101.248 cv
584.728 102.678 581.748 102.338 582.624 100.479 cv
582.435 100.668 li
cp
f
59.9709 155.006 mo
66.2629 155.023 li
64.8674 152.95 62.5139 151.72 59.8303 151.72 cv
57.1379 151.72 54.7766 152.958 53.3977 155.023 cv
59.9709 155.006 li
cp
68.2034 156.476 mo
71.8694 156.468 li
71.6877 156.311 71.5725 156.104 71.5725 155.865 cv
71.5803 155.27 71.4485 154.643 71.2004 154.098 cv
69.2434 149.688 64.884 146.947 59.8303 146.947 cv
54.7766 146.947 50.425 149.688 48.468 154.089 cv
48.22 154.643 48.0881 155.27 48.0881 155.865 cv
48.0959 156.104 47.9973 156.319 47.8323 156.468 cv
51.4739 156.476 li
51.3 156.27 li
51.1516 156.013 51.1516 155.7 51.2922 155.444 cv
52.762 152.124 56.0403 150.068 59.8303 150.068 cv
63.6282 150.068 66.8987 152.124 68.3762 155.444 cv
68.5247 155.7 68.5247 156.005 68.3762 156.27 cv
68.2034 156.476 li
cp
91.4143 175.005 mo
91.5051 174.758 91.4807 174.485 91.3489 174.163 cv
89.218 168.259 li
86.3772 160.2 li
86.3284 160.085 86.2375 159.919 86.1467 159.787 cv
85.7415 159.201 85.0979 158.697 84.3303 158.375 cv
83.9504 158.218 83.5706 158.111 83.1819 158.061 cv
83.0002 158.028 82.802 158.012 82.6292 158.02 cv
72.4719 158.119 li
59.9788 158.152 li
37.3372 158.028 li
37.1467 158.028 36.9739 158.045 36.7756 158.069 cv
36.4036 158.128 36.0237 158.243 35.6438 158.408 cv
34.8674 158.747 34.2239 159.259 33.8196 159.837 cv
33.72 159.985 33.6458 160.134 33.5881 160.275 cv
33.5305 160.398 33.4807 160.555 33.4231 160.704 cv
30.6155 168.284 li
28.3938 174.13 li
28.3528 174.237 28.3196 174.328 28.2864 174.427 cv
28.2542 174.617 li
28.2375 174.766 28.2454 174.89 28.2864 175.005 cv
28.3606 175.261 28.5588 175.509 28.8567 175.732 cv
29.4514 176.153 30.302 176.401 31.3176 176.434 cv
88.3762 176.434 li
89.3586 176.401 90.217 176.153 90.8206 175.732 cv
91.1252 175.518 91.3323 175.254 91.4143 175.005 cv
cp
91.7454 179.357 mo
91.8684 178.886 91.8772 178.424 91.762 178.045 cv
91.6868 177.788 91.5549 177.541 91.3821 177.326 cv
90.5725 177.788 89.5735 178.045 88.4094 178.086 cv
31.2922 178.086 li
30.1204 178.045 29.137 177.796 28.3362 177.351 cv
28.1711 177.566 28.0559 177.805 27.9895 178.052 cv
27.8821 178.424 27.8987 178.903 28.0305 179.357 cv
29.7405 185.872 li
32.5969 196.409 li
32.6711 196.64 32.7708 196.888 32.886 197.127 cv
33.1252 197.598 33.4397 198.036 33.8108 198.44 cv
34.5872 199.257 35.5452 199.819 36.5608 200.067 cv
36.8088 200.125 37.0891 200.166 37.3538 200.174 cv
46.5774 200.249 li
60.012 200.29 li
82.678 200.174 li
82.9182 200.166 83.1819 200.133 83.4543 200.075 cv
84.47 199.852 85.428 199.299 86.2122 198.473 cv
86.5842 198.085 86.8977 197.639 87.1292 197.177 cv
87.2532 196.929 87.3518 196.673 87.426 196.434 cv
87.4758 196.26 87.5168 196.095 87.5588 195.938 cv
90.1262 185.872 li
91.7454 179.357 li
cp
93.3469 177.574 mo
93.595 178.432 93.4788 179.242 93.3391 179.77 cv
91.7288 186.277 li
89.1604 196.343 li
89.1106 196.525 89.0696 196.706 89.012 196.896 cv
88.9124 197.243 88.7727 197.573 88.6155 197.912 cv
88.302 198.531 87.8967 199.101 87.4094 199.613 cv
86.3938 200.678 85.1477 201.396 83.8098 201.685 cv
83.4299 201.776 83.0579 201.817 82.6946 201.826 cv
60.012 201.941 li
37.3118 201.826 li
36.9153 201.809 36.5276 201.759 36.1721 201.669 cv
34.843 201.347 33.6125 200.629 32.6135 199.571 cv
32.1262 199.051 31.7219 198.482 31.4163 197.87 cv
31.2512 197.548 31.1194 197.21 31.012 196.879 cv
29.8967 192.784 li
28.1467 186.294 li
26.4368 179.795 li
26.2307 179.06 26.2141 178.284 26.3958 177.615 cv
26.5032 177.218 26.677 176.838 26.9163 176.5 cv
26.6926 176.228 26.5276 175.939 26.4202 175.625 cv
26.1731 175.005 26.1897 174.171 26.47 173.412 cv
28.3528 167.508 li
30.8792 159.787 li
30.929 159.63 30.9866 159.473 31.053 159.292 cv
31.1848 158.953 31.342 158.639 31.5403 158.334 cv
32.217 157.294 33.2249 156.426 34.4719 155.84 cv
35.0657 155.559 35.677 155.361 36.3049 155.246 cv
36.6272 155.188 36.9739 155.147 37.2952 155.138 cv
41.2258 155.088 li
46.4944 155.047 li
46.5686 154.486 46.7258 153.933 46.9651 153.421 cv
49.1858 148.408 54.1155 145.296 59.8303 145.296 cv
65.552 145.296 70.4817 148.408 72.7034 153.421 cv
72.9348 153.941 73.0911 154.494 73.1741 155.047 cv
82.6292 155.138 li
82.9592 155.138 83.2893 155.171 83.6194 155.221 cv
84.2551 155.337 84.8752 155.526 85.469 155.791 cv
86.7161 156.369 87.7317 157.227 88.4172 158.268 cv
88.6321 158.614 88.7805 158.903 88.9124 159.234 cv
89.177 160.035 li
91.4807 167.508 li
93.2805 173.494 li
93.5452 174.221 93.5364 175.039 93.2561 175.699 cv
93.1487 175.972 93.0002 176.228 92.802 176.467 cv
93.0413 176.806 93.2317 177.177 93.3469 177.574 cv
cp
f
80.5725 182.545 mo
80.5813 195.98 li
80.5813 196.458 80.176 196.846 79.6809 196.846 cv
79.1858 196.846 78.7805 196.458 78.7805 195.98 cv
78.7727 182.545 li
78.7639 182.066 79.1692 181.677 79.6643 181.677 cv
80.1682 181.677 80.5647 182.066 80.5725 182.545 cv
cp
f
76.9729 182.545 mo
76.9807 195.98 li
76.9807 196.466 76.5842 196.855 76.0803 196.855 cv
75.5852 196.855 75.1809 196.466 75.1809 195.988 cv
75.1721 182.553 li
75.1721 182.074 75.5686 181.686 76.0725 181.686 cv
76.5676 181.686 76.9729 182.074 76.9729 182.545 cv
cp
f
73.3723 182.553 mo
73.3801 195.988 li
73.3801 196.466 72.9846 196.855 72.4807 196.855 cv
71.9846 196.855 71.5891 196.466 71.5891 195.988 cv
71.5725 182.553 li
71.5725 182.074 71.9768 181.686 72.4719 181.686 cv
72.968 181.686 73.3723 182.074 73.3723 182.553 cv
cp
f
69.7717 182.553 mo
69.7883 195.988 li
69.7883 196.466 69.384 196.863 68.8889 196.863 cv
68.385 196.863 67.9885 196.475 67.9885 195.988 cv
67.9719 182.553 li
67.9719 182.082 68.3762 181.694 68.8723 181.694 cv
69.3674 181.694 69.7717 182.074 69.7717 182.553 cv
cp
f
66.1721 182.561 mo
66.1887 195.996 li
66.1887 196.475 65.7834 196.863 65.2883 196.863 cv
64.7932 196.863 64.3879 196.475 64.3879 195.996 cv
64.3713 182.561 li
64.3713 182.082 64.7766 181.694 65.2717 181.694 cv
65.7668 181.694 66.1721 182.082 66.1721 182.561 cv
cp
f
62.5715 182.561 mo
62.5881 195.996 li
62.5881 196.475 62.1838 196.863 61.6877 196.863 cv
61.1926 196.863 60.7883 196.475 60.7883 195.996 cv
60.7717 182.561 li
60.7717 182.09 61.176 181.702 61.6711 181.694 cv
62.1672 181.694 62.5715 182.082 62.5715 182.561 cv
cp
f
58.9709 182.569 mo
58.9875 196.004 li
58.9875 196.475 58.5833 196.863 58.0881 196.863 cv
57.592 196.863 57.1877 196.483 57.1877 196.004 cv
57.1711 182.569 li
57.1711 182.09 57.5754 181.702 58.0715 181.702 cv
58.5754 181.702 58.9709 182.09 58.9709 182.569 cv
cp
f
55.3713 182.569 mo
55.3879 196.004 li
55.3879 196.483 54.9915 196.871 54.4875 196.871 cv
53.9924 196.871 53.5872 196.483 53.5872 196.004 cv
53.5793 182.569 li
53.5793 182.09 53.9758 181.702 54.4797 181.702 cv
54.9749 181.702 55.3713 182.09 55.3713 182.569 cv
cp
f
51.7795 182.578 mo
51.7874 196.004 li
51.7874 196.483 51.3909 196.871 50.8958 196.871 cv
50.3918 196.871 49.9875 196.483 49.9875 196.012 cv
49.9788 182.578 li
49.9788 182.09 50.3752 181.702 50.8792 181.702 cv
51.3743 181.702 51.7795 182.09 51.7795 182.578 cv
cp
f
48.179 182.578 mo
48.1868 196.012 li
48.1868 196.491 47.7903 196.879 47.2952 196.879 cv
46.7913 196.879 46.3958 196.491 46.387 196.012 cv
46.3792 182.578 li
46.3792 182.099 46.7834 181.711 47.2786 181.711 cv
47.7747 181.711 48.179 182.099 48.179 182.578 cv
cp
f
44.5784 182.578 mo
44.595 196.012 li
44.595 196.491 44.1907 196.879 43.6956 196.879 cv
43.1995 196.879 42.7952 196.491 42.7952 196.012 cv
42.7786 182.586 li
42.7786 182.099 43.1829 181.711 43.679 181.711 cv
44.1741 181.711 44.5784 182.099 44.5784 182.578 cv
cp
f
40.9788 182.586 mo
40.9954 196.021 li
40.9954 196.491 40.5901 196.888 40.095 196.888 cv
39.5999 196.888 39.1946 196.5 39.1946 196.021 cv
39.178 182.586 li
39.178 182.107 39.5833 181.719 40.0784 181.719 cv
40.5735 181.719 40.9788 182.107 40.9788 182.586 cv
cp
f
286.917 266.373 mo
278.774 266.373 272.149 272.998 272.149 281.141 cv
272.149 289.284 278.774 295.908 286.917 295.908 cv
353.98 295.908 li
362.122 295.908 368.747 289.284 368.747 281.141 cv
368.747 272.998 362.122 266.373 353.98 266.373 cv
286.917 266.373 li
cp
353.98 298.908 mo
286.917 298.908 li
277.119 298.908 269.149 290.938 269.149 281.141 cv
269.149 271.343 277.119 263.373 286.917 263.373 cv
353.98 263.373 li
363.777 263.373 371.747 271.343 371.747 281.141 cv
371.747 290.938 363.777 298.908 353.98 298.908 cv
cp
1 .45098 .490196 rgb
f
283.793 277.733 mo
283.793 280.776 li
285.136 280.776 li
286.792 280.776 287.15 280.118 287.15 279.218 cv
287.15 278.29 286.779 277.733 285.207 277.733 cv
283.793 277.733 li
cp
287.721 286.202 mo
285.65 282.488 li
283.793 282.488 li
283.793 286.202 li
281.965 286.202 li
281.965 276.205 li
285.621 276.205 li
287.549 276.205 289.064 276.919 289.064 279.09 cv
289.064 280.632 288.307 281.418 287.364 282.003 cv
289.62 286.202 li
287.721 286.202 li
cp
0 0 0 rgb
f
290.903 286.202 mo
290.903 276.205 li
297.301 276.205 li
297.301 277.976 li
292.774 277.976 li
292.774 280.104 li
296.287 280.104 li
296.287 281.875 li
292.774 281.875 li
292.774 284.432 li
297.444 284.432 li
297.444 286.202 li
290.903 286.202 li
cp
f
302.368 279.09 mo
301.34 282.018 li
303.411 282.018 li
302.368 279.09 li
cp
304.897 286.202 mo
304.039 283.788 li
300.711 283.788 li
299.855 286.202 li
297.955 286.202 li
301.512 276.205 li
303.24 276.205 li
306.796 286.202 li
304.897 286.202 li
cp
f
309.763 277.961 mo
309.763 284.445 li
311.677 284.445 li
313.619 284.445 314.605 283.203 314.605 281.203 cv
314.605 279.204 313.619 277.961 311.677 277.961 cv
309.763 277.961 li
cp
307.935 286.202 mo
307.935 276.205 li
311.677 276.205 li
314.533 276.205 316.604 278.062 316.604 281.203 cv
316.604 284.346 314.533 286.202 311.677 286.202 cv
307.935 286.202 li
cp
f
329.697 286.202 mo
328.84 279.504 li
326.283 284.103 li
323.712 279.518 li
322.856 286.202 li
320.955 286.202 li
322.341 276.205 li
323.841 276.205 li
326.283 280.761 li
328.711 276.205 li
330.211 276.205 li
331.596 286.202 li
329.697 286.202 li
cp
f
334.633 281.203 mo
334.633 283.203 335.619 284.646 337.561 284.646 cv
339.504 284.646 340.49 283.203 340.49 281.203 cv
340.49 279.204 339.504 277.762 337.561 277.762 cv
335.619 277.762 334.633 279.204 334.633 281.203 cv
cp
332.634 281.203 mo
332.634 278.062 334.705 276.005 337.561 276.005 cv
340.418 276.005 342.489 278.062 342.489 281.203 cv
342.489 284.346 340.418 286.402 337.561 286.402 cv
334.705 286.402 332.634 284.346 332.634 281.203 cv
cp
f
345.913 277.733 mo
345.913 280.776 li
347.256 280.776 li
348.912 280.776 349.27 280.118 349.27 279.218 cv
349.27 278.29 348.899 277.733 347.327 277.733 cv
345.913 277.733 li
cp
349.841 286.202 mo
347.77 282.488 li
345.913 282.488 li
345.913 286.202 li
344.085 286.202 li
344.085 276.205 li
347.741 276.205 li
349.67 276.205 351.184 276.919 351.184 279.09 cv
351.184 280.632 350.427 281.418 349.484 282.003 cv
351.74 286.202 li
349.841 286.202 li
cp
f
353.022 286.202 mo
353.022 276.205 li
359.42 276.205 li
359.42 277.976 li
354.893 277.976 li
354.893 280.104 li
358.406 280.104 li
358.406 281.875 li
354.893 281.875 li
354.893 284.432 li
359.563 284.432 li
359.563 286.202 li
353.022 286.202 li
cp
f
278.702 226.556 mo
278.702 236.764 li
283.24 236.764 li
287.146 236.764 288.784 235.42 288.784 231.429 cv
288.784 228.069 287.609 226.556 283.114 226.556 cv
278.702 226.556 li
cp
278.702 241.805 mo
278.702 251.467 li
273.325 251.467 li
273.325 222.062 li
281.643 222.062 li
289.792 222.062 294.245 223.322 294.245 231.387 cv
294.245 239.831 288.113 241.805 283.953 241.805 cv
278.702 241.805 li
cp
f
279.202 236.264 mo
283.24 236.264 li
287.011 236.264 288.284 235.044 288.284 231.429 cv
288.284 228.529 287.485 227.056 283.114 227.056 cv
279.202 227.056 li
279.202 236.264 li
cp
283.24 237.264 mo
278.202 237.264 li
278.202 226.056 li
283.114 226.056 li
287.612 226.056 289.284 227.512 289.284 231.429 cv
289.284 235.574 287.533 237.264 283.24 237.264 cv
cp
273.825 250.967 mo
278.202 250.967 li
278.202 241.305 li
283.953 241.305 li
286.25 241.305 293.745 240.59 293.745 231.387 cv
293.745 223.882 289.843 222.562 281.643 222.562 cv
273.825 222.562 li
273.825 250.967 li
cp
279.202 251.967 mo
272.825 251.967 li
272.825 221.562 li
281.643 221.562 li
290.141 221.562 294.745 223.128 294.745 231.387 cv
294.745 239.437 289.17 242.305 283.953 242.305 cv
279.202 242.305 li
279.202 251.967 li
cp
f
299.407 251.467 mo
299.407 222.062 li
318.227 222.062 li
318.227 227.271 li
304.91 227.271 li
304.91 233.53 li
315.244 233.53 li
315.244 238.739 li
304.91 238.739 li
304.91 246.258 li
318.647 246.258 li
318.647 251.467 li
299.407 251.467 li
cp
f
299.907 250.967 mo
318.147 250.967 li
318.147 246.758 li
304.41 246.758 li
304.41 238.239 li
314.744 238.239 li
314.744 234.03 li
304.41 234.03 li
304.41 226.771 li
317.727 226.771 li
317.727 222.562 li
299.907 222.562 li
299.907 250.967 li
cp
319.147 251.967 mo
298.907 251.967 li
298.907 221.562 li
318.727 221.562 li
318.727 227.771 li
305.41 227.771 li
305.41 233.03 li
315.744 233.03 li
315.744 239.239 li
305.41 239.239 li
305.41 245.758 li
319.147 245.758 li
319.147 251.967 li
cp
f
335.403 227.271 mo
335.403 251.467 li
330.026 251.467 li
330.026 227.271 li
321.708 227.271 li
321.708 222.062 li
343.72 222.062 li
343.72 227.271 li
335.403 227.271 li
cp
f
330.526 250.967 mo
334.903 250.967 li
334.903 226.771 li
343.22 226.771 li
343.22 222.562 li
322.208 222.562 li
322.208 226.771 li
330.526 226.771 li
330.526 250.967 li
cp
335.903 251.967 mo
329.526 251.967 li
329.526 227.771 li
321.208 227.771 li
321.208 221.562 li
344.22 221.562 li
344.22 227.771 li
335.903 227.771 li
335.903 251.967 li
cp
f
347.412 249.913 mo
348.042 243.779 li
349.639 245.334 352.873 246.888 357.283 246.888 cv
360.435 246.888 362.534 246.09 362.534 243.695 cv
362.534 240.713 359.258 239.663 355.688 238.444 cv
351.529 237.016 346.992 235.546 346.992 230.295 cv
346.992 226.388 349.681 221.474 357.62 221.474 cv
361.653 221.474 365.475 222.734 366.988 223.742 cv
366.442 229.245 li
363.291 227.523 360.645 226.599 357.83 226.599 cv
355.562 226.599 352.453 227.187 352.453 229.707 cv
352.453 232.06 355.184 232.983 358.376 233.95 cv
362.955 235.336 368.542 237.016 368.542 243.485 cv
368.542 246.846 367.072 252.055 357.157 252.055 cv
352.705 252.055 349.092 251.005 347.412 249.913 cv
cp
f
347.942 249.65 mo
349.626 250.623 353.026 251.555 357.157 251.555 cv
364.279 251.555 368.042 248.764 368.042 243.485 cv
368.042 237.399 362.843 235.824 358.255 234.436 cv
355.288 233.538 351.953 232.528 351.953 229.707 cv
351.953 227.448 354.151 226.099 357.83 226.099 cv
360.386 226.099 362.867 226.807 366.018 228.451 cv
366.459 224.002 li
364.931 223.111 361.404 221.974 357.62 221.974 cv
350.145 221.974 347.492 226.456 347.492 230.295 cv
347.492 235.105 351.639 236.527 355.649 237.902 cv
356.081 238.05 li
359.657 239.269 363.034 240.42 363.034 243.695 cv
363.034 247.388 358.706 247.388 357.283 247.388 cv
353.297 247.388 350.24 246.132 348.443 244.776 cv
347.942 249.65 li
cp
357.157 252.555 mo
352.286 252.555 348.717 251.358 347.14 250.332 cv
346.884 250.166 li
347.651 242.7 li
348.391 243.421 li
349.865 244.856 352.975 246.388 357.283 246.388 cv
361.542 246.388 362.034 244.852 362.034 243.695 cv
362.034 241.136 359.126 240.145 355.759 238.997 cv
355.324 238.848 li
351.185 237.428 346.492 235.818 346.492 230.295 cv
346.492 225.655 349.933 220.974 357.62 220.974 cv
361.592 220.974 365.553 222.186 367.265 223.326 cv
367.515 223.492 li
366.865 230.046 li
366.201 229.684 li
362.888 227.872 360.384 227.099 357.83 227.099 cv
356.686 227.099 352.953 227.287 352.953 229.707 cv
352.953 231.637 355.261 232.484 358.521 233.471 cv
363.222 234.894 369.042 236.656 369.042 243.485 cv
369.042 246.873 367.498 252.555 357.157 252.555 cv
cp
f
392.303 239.008 mo
391.991 239.818 392.2 240.834 392.419 241.628 cv
392.98 243.681 393.904 245.593 395.163 247.311 cv
395.564 247.858 396.053 248.452 396.648 248.718 cv
397.317 249.017 398.252 248.931 399.151 248.487 cv
399.937 248.1 400.638 247.513 401.38 246.892 cv
401.751 246.582 li
402.716 245.783 403.784 244.995 405.058 244.631 cv
406.15 244.319 407.244 244.353 408.304 244.384 cv
409.426 244.418 410.487 244.45 411.358 244.046 cv
412.917 243.322 413.497 241.268 413.156 239.7 cv
412.718 237.682 411.12 236.133 409.858 235.189 cv
408.502 234.174 407.164 233.549 405.884 233.333 cv
404.609 233.115 403.156 233.249 401.311 233.752 cv
398.652 234.477 396.198 235.629 394.018 237.179 cv
393.331 237.667 392.589 238.266 392.303 239.008 cv
cp
413.543 244.879 mo
413.149 245.275 412.693 245.6 412.187 245.835 cv
410.894 246.434 409.547 246.394 408.244 246.355 cv
407.294 246.326 406.397 246.299 405.6 246.526 cv
404.726 246.775 403.932 247.336 403.008 248.101 cv
402.645 248.403 li
401.847 249.072 401.021 249.764 400.023 250.255 cv
398.584 250.966 397.061 251.062 395.843 250.518 cv
394.827 250.064 394.126 249.231 393.573 248.477 cv
392.17 246.564 391.142 244.435 390.517 242.149 cv
390.22 241.064 389.945 239.645 390.463 238.299 cv
390.464 238.298 li
390.939 237.069 391.949 236.23 392.876 235.572 cv
395.246 233.888 397.909 232.635 400.792 231.85 cv
402.923 231.269 404.646 231.123 406.214 231.389 cv
407.806 231.658 409.43 232.406 411.039 233.61 cv
413.235 235.253 414.633 237.213 415.082 239.281 cv
415.536 241.369 414.894 243.529 413.543 244.879 cv
cp
1 .45098 .490196 rgb
f
386.446 231.84 mo
386.451 232.275 386.713 232.772 386.99 233.298 cv
387.31 233.919 li
387.574 234.442 387.824 234.936 388.146 235.343 cv
388.513 235.807 388.961 236.098 389.345 236.122 cv
389.74 236.146 390.191 235.918 390.74 235.615 cv
391.74 235.065 392.601 234.546 392.968 233.781 cv
393.265 233.166 393.236 232.346 392.891 231.642 cv
392.551 230.949 391.911 230.355 391.136 230.011 cv
389.856 229.445 388.289 229.633 387.239 230.48 cv
386.999 230.673 386.437 231.196 386.446 231.84 cv
cp
393.884 235.828 mo
393.201 236.511 392.363 236.972 391.69 237.343 cv
391.071 237.684 390.222 238.15 389.224 238.089 cv
388.261 238.03 387.33 237.489 386.6 236.566 cv
386.155 236.003 385.848 235.396 385.55 234.808 cv
385.245 234.217 li
384.89 233.541 384.487 232.775 384.474 231.866 cv
384.46 230.802 385.019 229.739 386.002 228.945 cv
387.637 227.627 389.966 227.338 391.933 228.209 cv
393.144 228.745 394.114 229.656 394.661 230.775 cv
395.275 232.029 395.306 233.473 394.743 234.638 cv
394.521 235.099 394.222 235.49 393.884 235.828 cv
cp
f
396.201 225.599 mo
396.087 225.713 396.002 225.839 395.953 225.971 cv
395.812 226.36 395.942 226.895 396.079 227.46 cv
396.17 227.844 li
396.223 228.079 396.27 228.32 396.316 228.563 cv
396.497 229.516 396.67 230.416 397.239 230.794 cv
397.721 231.114 398.581 231.029 399.284 230.593 cv
400.518 229.831 401.148 228.172 400.695 226.895 cv
400.248 225.637 398.752 224.809 397.36 225.048 cv
396.884 225.13 396.466 225.335 396.201 225.599 cv
cp
401.223 231.554 mo
400.952 231.824 400.652 232.065 400.323 232.269 cv
398.933 233.131 397.294 233.197 396.149 232.437 cv
394.89 231.601 394.607 230.122 394.379 228.933 cv
394.337 228.711 394.295 228.49 394.247 228.276 cv
394.163 227.927 li
393.982 227.177 393.754 226.245 394.102 225.294 cv
394.587 223.966 395.931 223.294 397.026 223.105 cv
399.359 222.704 401.786 224.079 402.552 226.235 cv
403.188 228.024 402.606 230.171 401.223 231.554 cv
cp
f
406.997 224.913 mo
406.888 225.023 406.783 225.149 406.692 225.266 cv
406.096 226.021 405.597 226.849 405.207 227.727 cv
404.856 228.52 404.775 229.102 404.969 229.457 cv
405.218 229.91 405.995 230.1 406.604 230.18 cv
407.45 230.291 408.037 230.258 408.507 230.073 cv
409.344 229.744 409.937 228.775 409.918 227.768 cv
409.9 226.775 409.348 225.759 408.441 225.05 cv
408.026 224.726 407.63 224.576 407.382 224.647 cv
407.257 224.684 407.123 224.787 406.997 224.913 cv
cp
410.573 231.018 mo
410.189 231.402 409.734 231.71 409.229 231.908 cv
408.207 232.31 407.153 232.24 406.348 232.134 cv
404.804 231.933 403.758 231.35 403.24 230.402 cv
402.728 229.467 402.782 228.331 403.406 226.928 cv
403.862 225.9 404.446 224.93 405.143 224.046 cv
405.547 223.532 406.066 222.976 406.833 222.754 cv
407.714 222.499 408.715 222.763 409.655 223.497 cv
411.025 224.567 411.861 226.151 411.889 227.732 cv
411.912 228.983 411.407 230.183 410.573 231.018 cv
cp
f
235.107 239.008 mo
234.795 239.818 235.005 240.834 235.223 241.628 cv
235.784 243.681 236.707 245.593 237.967 247.311 cv
238.367 247.858 238.857 248.452 239.451 248.718 cv
240.121 249.017 241.057 248.931 241.954 248.487 cv
242.74 248.1 243.442 247.513 244.184 246.892 cv
244.556 246.582 li
245.52 245.783 246.588 244.995 247.863 244.631 cv
248.953 244.319 250.049 244.353 251.108 244.384 cv
252.231 244.418 253.29 244.45 254.161 244.046 cv
255.721 243.322 256.301 241.268 255.96 239.7 cv
255.522 237.682 253.925 236.133 252.662 235.189 cv
251.306 234.174 249.969 233.549 248.688 233.333 cv
247.412 233.115 245.959 233.249 244.115 233.752 cv
241.456 234.477 239.002 235.629 236.822 237.179 cv
236.135 237.667 235.393 238.266 235.107 239.008 cv
cp
256.348 244.879 mo
255.952 245.275 255.496 245.6 254.99 245.835 cv
253.698 246.434 252.351 246.394 251.048 246.355 cv
250.098 246.326 249.2 246.299 248.404 246.526 cv
247.531 246.775 246.737 247.336 245.813 248.101 cv
245.449 248.403 li
244.651 249.072 243.824 249.764 242.826 250.255 cv
241.388 250.966 239.865 251.062 238.648 250.518 cv
237.632 250.064 236.93 249.231 236.377 248.477 cv
234.975 246.564 233.947 244.435 233.322 242.149 cv
233.024 241.064 232.748 239.645 233.267 238.299 cv
233.268 238.298 li
233.742 237.069 234.753 236.23 235.68 235.572 cv
238.05 233.888 240.713 232.635 243.596 231.85 cv
245.727 231.269 247.449 231.123 249.018 231.389 cv
250.61 231.658 252.234 232.406 253.843 233.61 cv
256.039 235.253 257.437 237.213 257.887 239.281 cv
258.34 241.369 257.698 243.529 256.348 244.879 cv
cp
f
229.249 231.84 mo
229.255 232.275 229.517 232.772 229.794 233.298 cv
230.114 233.919 li
230.378 234.442 230.628 234.936 230.949 235.343 cv
231.317 235.807 231.766 236.098 232.149 236.122 cv
232.544 236.146 232.995 235.918 233.543 235.615 cv
234.544 235.065 235.405 234.546 235.772 233.781 cv
236.069 233.166 236.039 232.346 235.695 231.642 cv
235.356 230.949 234.715 230.355 233.94 230.011 cv
232.659 229.445 231.094 229.633 230.042 230.48 cv
229.803 230.673 229.24 231.196 229.249 231.84 cv
cp
236.688 235.828 mo
236.005 236.511 235.166 236.972 234.493 237.343 cv
233.874 237.684 233.026 238.15 232.028 238.089 cv
231.066 238.03 230.134 237.489 229.404 236.566 cv
228.958 236.003 228.652 235.396 228.355 234.808 cv
228.05 234.217 li
227.694 233.541 227.29 232.775 227.279 231.866 cv
227.264 230.802 227.823 229.739 228.806 228.945 cv
230.442 227.627 232.77 227.338 234.738 228.209 cv
235.948 228.745 236.917 229.656 237.465 230.775 cv
238.079 232.029 238.11 233.473 237.548 234.638 cv
237.325 235.099 237.026 235.49 236.688 235.828 cv
cp
f
239.006 225.599 mo
238.891 225.713 238.806 225.839 238.757 225.971 cv
238.615 226.36 238.745 226.895 238.883 227.46 cv
238.974 227.844 li
239.027 228.079 239.073 228.32 239.119 228.563 cv
239.302 229.516 239.474 230.416 240.042 230.794 cv
240.525 231.114 241.385 231.029 242.089 230.593 cv
243.322 229.831 243.952 228.172 243.498 226.895 cv
243.052 225.637 241.556 224.809 240.163 225.048 cv
239.689 225.13 239.27 225.335 239.006 225.599 cv
cp
244.027 231.554 mo
243.757 231.824 243.456 232.065 243.127 232.269 cv
241.737 233.131 240.098 233.197 238.952 232.437 cv
237.694 231.601 237.41 230.122 237.183 228.933 cv
237.141 228.711 237.099 228.49 237.051 228.276 cv
236.968 227.927 li
236.785 227.177 236.558 226.245 236.906 225.294 cv
237.391 223.966 238.735 223.294 239.829 223.105 cv
242.163 222.704 244.591 224.079 245.356 226.235 cv
245.991 228.024 245.41 230.171 244.027 231.554 cv
cp
f
249.801 224.913 mo
249.692 225.023 249.587 225.149 249.495 225.266 cv
248.9 226.021 248.401 226.849 248.012 227.727 cv
247.659 228.52 247.579 229.102 247.773 229.457 cv
248.022 229.91 248.799 230.1 249.407 230.18 cv
250.254 230.291 250.841 230.258 251.311 230.073 cv
252.148 229.744 252.74 228.775 252.722 227.768 cv
252.704 226.775 252.152 225.759 251.244 225.05 cv
250.829 224.726 250.434 224.576 250.186 224.647 cv
250.061 224.684 249.928 224.787 249.801 224.913 cv
cp
253.377 231.018 mo
252.992 231.402 252.537 231.71 252.032 231.908 cv
251.011 232.31 249.956 232.24 249.152 232.134 cv
247.609 231.933 246.562 231.35 246.043 230.402 cv
245.532 229.467 245.586 228.331 246.209 226.928 cv
246.665 225.9 247.25 224.93 247.947 224.046 cv
248.352 223.532 248.869 222.976 249.638 222.754 cv
250.518 222.499 251.519 222.763 252.458 223.497 cv
253.828 224.567 254.664 226.151 254.693 227.732 cv
254.716 228.983 254.211 230.183 253.377 231.018 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.2
%%For: (Lisa Taiga) ()
%%Title: (1__6.eps)
%%CreationDate: 1/30/2018 10:55 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",K=*NZFf'%NGCRtJ*NaN8r%`X?=j+n/i;1JY7+=oqToK7N9rU).(5hPYOoHB0jVeIRH$9O"m8ZSn+FjR6>h*tTH@lm)@>_lnr
%-7#f^L_Ntb^].GB4]8HDr[:m#UM(7W->7rCT`^op.=st$N$d%3X&]HG\Z6N([4:qJ)7?S]rU!GDQdcJ88I`0RL$n&G>Q#F3\#!gI
%qP4JbCL1_uGua0$HAG3*\<26ZSZhq;$O/lREBF2(kWi'<eob(8N/bVSY7B%L.A7LVM*,+d%Ag7DP-1b>k9pC+'f]^eP2)7[$S^4V
%#VZQRi*n)bf;1c;2s(N/;".JGL<pL:cp\JQoPlMo-6ht%_YdpA+pGTpq@b7(rsm]V2tWXJd36MsVc_0;3@Fu[,=2eHQRT6C3ApnQ
%M;Ug3$>O=Z,AF9oIh&2jA\$9*9=g'bcdI2m`#Uj18-l0SGa$YifSDVO'U)pM==2:S`ag8\-TI6A4sJ+\-Z^P&rh7Ct[mNZk<0K1<
%0N+?G;Z6e"i#!X]L`?R$+O"V&K=7jeG82.Fj)CK$0_S2Ba_b.51If)1@8V#A%=afXAP$[Y3XEFQ*[&17LBPK*G!>,[9#"m^`M>N9
%78N?;eJl/)M?&kD?jrG76%`j.%Z)H`G`O2E8Y@\I9o)6V*#=Nb7^0np&\j5HfGC"):qGD$P%R.%Q=<R^5Lbpd,P+0(_>(fU-Nr%.
%dJ@X](3%lJ\SEdhUg>ii0'sepB-fBYY$9)J*Q3duqO%Q$l%2O8eV8A"q15`c&;-R2$uU;Q=.t8p70ESa5Ng$DiO.;Z^r8Z8*V9]p
%])(=a6rGnM,)8pYXrK2LL@E`,."^2!:&h2-/biJIac^-O&sC\$IPGN8-0s+Dkce[bh\l2YY3N"kP#r)t<8QR=)?nff:g'!^J2-u1
%@JgN>>gY,#TeHCZrTg@G(b&S"1P!lAli*"#C<ncA!U"+6@U&+iRS>Vs90_?l"C-)(7"DRlkA*bQm2h>mO#"qD0*,=EHqbpO:%0TP
%\(8#Y2h!e<8(\Yq^4b`PVkUVbI`EMUh,4Aq;Q=TEoW,1=^'L6kg23[[8\M!!%AgHu^DSN%C>0fcj1;pEpGI=)p%1fk?.QS'?%Y?$
%Z^Llh'8"UgqTSGFFt^%ei8QlD;Q=3KGg.sjae$OhT#"P\-Kf+N(rQ`<s!^Y+VZ[e4<2k8=W//Z?V$lf[W&.=mg!M+RdmF.PW77&X
%10.HaZK)G9^4K^5qlP,@992OT`l6BN+h/((74MO8pWthr\iVu:LBn$4cRMp/:e9<D0.nP<OZtno/mO>;AMg5=ct+nARfJi(1hdZ$
%g/Qc`:$uHr.^W1U")VC5+8RXD2I)3>fO)2+q.OHB">b-=_``H>m=EreNfh/OeHFg5e1k?>9gd9s;o1:iGYPSm:$Ir@)EjqZ""OL2
%/S'[fYE>3j7Q1g,bVfgCI%]tEH74l.+!d;\dV.o00X1Uj)kETn9lKmD`e<+=\)LPsM-[Nb/)XjMVFM`GTu>NC.3*r2Rd)1)p1qSr
%;I@^bo#F#`<rFH+#lM&kUV=aL46TpKFm4Z7Nk'_=Kp+^I.USsIao+N[O.ifYVhr\!ZE1)(2,ZoI02]"[s#[8.5?mg40p,`?$8:"g
%5H"HZfRh!9YE2_1Z6hk"mXleqkd9EPU^jc3HtXeE5,,b_p^]fAh,uZ=8p?F)*6*W"]"[)BXH0\C+6rEd<e5=UY8=F.Q0Y,SONPgI
%.`V[k>`d)3WSCiL-V3@Kq+p+"PdBL/POi5=K1p0oR9X$]J>2FP<Tsb!gaj>V+I<IV\KI6.lWaq*S@&2]DO6ei:&VU6gK&</!O<_q
%8BcCo_^nj&isVE-8%rJX8mEKA!'f]m$0^]_XSbH%7rWn<D/SiWiDjS&-@)W+R0ZJB$947SrOsIue!%&+mC:i)\CLNPVqMh*PTLnC
%\>S$prKBJ=R!J"of'@`es$Rgg=P#2[DKDf=5#+?7#?kE5b,),fp/A:7#+q3k[8@Wm:+9664YAsgPOl%&s7sh[NWr`r')iXbkfEV>
%@$9Bj@hFeJI)m.44_RJlmZ3snQ+MLl)XfF="T@AI;7h6^qA+NTQT7c"+<cL>^8B;M5)Adm'_?Y%(Da>`SKRkc_gd)DRP@9/<P&%+
%^EUVYmor9'<7Opr^WpE;ZZ'+M^-1`)`rt9NfmIF.@(&'OD`Q/<Fua0Z!r-^BX\#dXRi)KF>,(*`LIhZ2+WQl;N[J%[FM'J"(&*=_
%m0<lBH8nHaU,P0>mUnn4Xuta=D3f[he'G[FCb%Q\>s<4fIuF*.k$,T!l2?XV9p;8`ZIY*L-0I&;nZQVaacG>jMVs^pE6#umc8&s1
%[@PlZq+i(o'!m(LM-Z\P8tiFE1Vl)Ks!^!>E/r&7786(/Qs7YUCf([Tq7pEVFtrsbA(KHKRIKb="&5dE"$_p#"ZYnJ=4MUkoOL60
%Y%S$gOG,N$MdX15krpX_[upm6.kk;ej[jhCcB9f3Z1>0W1-a@T+24(URL27!VdOqX@Fc0'_=-gdi=b>GmX?6jYikHBred<RAmVS2
%n%H2[B)+59Nb?WZ:b_-MLtc>7^%Z!I2dItf)tg$FZ[]KZi^9g0`W5m%B'-Gr.j+Y!RASL$b3bAI`\5F&ZY_VOAQnl*Hu,L)+2@=u
%;t`+PV;H&]<>iLLj\4saV9<jbJeT.#8e-:JR]#q]T<QfHS7s3'oA7SZ)/='5H:NSGHlVaFO,3WSIK\gjD4L-2Yg9g8g\/l.04nM?
%rS20KQd>Qu;=Bkk'BTOfIp2/N:"t%$C0ab"IST*8Y\EX5X*/oUGGJtrcl%5:PO1i\%6Q5LLe5FN]5fA[I+^k#DHa"6Y]jt[=d,If
%%)-?)0`8;>Cb&dono8ie.^c>@opn9#F$QXWPRfRLX+"M?Fc&0R:o'PPV`bnodm?E:s-/!.5QtDn/nmM?YQ6a9PVa8Uj??7(Xeqc#
%AGWP82X%NPWr"n'?<>itJ&gI$;pHqiY0uk%3&c?=$5VR9CiLUXM)#_N>'5s&UA.#d?HO(*HkOC7)eNA1(AoH#!l$M;cNDDRmOUsf
%3/]Q@Q#f1fR2=I2k@[Y>KU-\"(1eX/W@uM`rNdp&766@d#FXL$8oPR-J)P5[ngk.D00"mLbD=BTG7)Wib\BNdS4/h`qrWeQZ``SO
%H5<?g87tft+>YZSs%i(2bi>*0?bH;keX.[:kPO4`^.rnVS=%&]D9NM8Id8J\\UoN]IUT8GR`/(4H2WLK7.]WW(@kTmMtSi=5@rNe
%I`b>lf=kbH\A56NG&7`URL_CflrmfK$ElH!>(U_\57nbF,-Yf<D:O5O/[0!IY\HJ.(0It)Y\HJ*(0EG$<mA<&oK%^)m9(Zj%hefr
%/_R\g!"@B@qeF%SC?1!MJJn],1aFk.&Rp0Y7Pp4@noZ)&"ZrhWlsKA`XePBAgb-%3?a!D<kAf'`=m=Mu]$d/IY0*H%:d%t0Zb@K#
%i.@L8X+TTGI#616TBGd1Kq/0u\b(74E@tUn2cgN2+oR4)n0F7V8LXTY<ZQ>B;ZFb#:o:!N+YlV$+d.OT+p<CZn/_L&_M-A*\]89-
%)9@#npbHWYd:0e_n:-P`:?R#-Y8<2EboqOckklB\nP:Ss>-RrMTCOl*f'M/G@'b?H]\;VLIE9;Z#*\E'hm@%F1^"[(]=G9M5)Ocj
%8[Tg&1D%p_ap(%KR'`bJKEF$Ld+JX6IMBIQ76UBt_ka%k6TEFk9Umt/Dg#[IO6N2cn+]$j4==I`G6Tj)54UWqHuU="j?.<JI$;%U
%SUSDGI_l#%YlFT+/;NqKVsrW\=d.rTs#8U1SJiu9^]1p-0CoJCIm6LMK)OTaJ^jhhs5N5Sm/U'QdUsgCm.nq?`FR!S5J`q0Yictl
%q0kE<nIaP)p%k=7B@JR/qlV"Y)s]41@J_@[gZm+g;/@bBV@EUr.XD)m%h(ri9J&<uCDf`.T4C.h4gh6)LFF<YFbp"oU,<?Cj0imW
%4ft^?$fmP"@h_n`JdPXW+o?-L,9L5O.$MnfR4NSkCeuGdb%,uP:J!H$=mdU[8sGOtLm<^`r1U'+=\idQ/ZEJ_GN->[:d:G(bnGJh
%1Sm=$c9S#oHH78#Z66%kKq&Zqj>Qr,=[-uD::X&^<H',@'Eo=P4e%Tl&rfgGd[<b5#@k-^'pYHe0[n!rIS[+5b,,'F3sTA!l:fEC
%J+OkKoi6egmkQa'IJ=Rn[GRo>O*:m;01"PC.(f\:(Jcl?_Fm^M#mr=OiPk2-;45BO]U2\9>^m%e0/K,L#)/E4'OIXQ;Cp*RT:%,N
%Q-=noXt*$NpRm@]'d[J+`3O'#df/s'd53H(Hp;GacN=6#LJ>ts%^Z/=#sUBP&"Ard:Ka2hH2'TY3;`][Xlr2FR94A<SDt"s[(n]I
%7Z]Ckc7sPVdgS<.rs!`1rSfaliOSK<_%W1OlNp8Bi+qiSV;UT2dh:,Zc#\b79rY#h$sli<BQrS8Gj87I=8pEs"ET&S]8masegB(s
%Tqa;k9M`%ni8EX4Wu,NYeRRaDQWgTeAK>K;-J*X6jE]5M$]O,\0aIJ(gg/-7@+I=/)g;\PLFGND(1_*bQ_FAqO-,t?2K=mcr>H,0
%ET.\M7"7c&#o'9S-^$=F",WoAn(aHC3&Pdp5Nr#EC;.uiRW(P5@g4[h/uW:(;,/qAFUV[Zl54th#jN6_S*A4fc3JKNTT1aBS-eHt
%5oh2KA'A$q6^N1k+C"Jdk3>0YoOUY@Q72!T?Cd<T%qTAZY,o!Yh4ct64Y>`NKTE%J<2@6ufAr!Dgo^F0VFTRB<[mQY0Xs4.>Z>k1
%LG+[uJZ"3$eOOV$DB;AKf-I#%qcm/!gu`#:q[t?)pmL6iU7;)bIaF00HWetMNh9tgK2'[o/`\.?r:m;M0gd"L:&cq87)I"AF`c/p
%$W*aV7I[CSah^I9XJFa)eaIcade&D]hg'%bmje7"#?k]c"s5Um7DX\)qMDD[HIaSQ^[\!Fdk'$umj>62;#7Smr+cY9NgY<dFD()*
%*W#>J12"UfI/-':edm-?Mfmt$(HVSV"()FBM^K:L)"6L\cJ6t0Fmr]F</oMEb'EtU/Uj/YBopN_<\EQ2D1ZSA3nb3WF$V_YpTlk%
%JP;0Mbm"M@2E-!H"PK;+s4Np'LFgY`1?SbG+IQHpUK'T@(Sl+<3Z"T55ruKjl.iD@ef("<a'd/>/f,lO+IhtX`2r-Clsf't^<l\"
%jE$7Q!X9`\:@LN'l)-R+DkN_df>,Z0F!ZG$@g:8ER)A)Z9G+hS0jan("#?`P0Pa%eA%\@[]@*"FX^oLd;L;;Ad=6$1.d6U!?Yr#m
%1_Xb1Ep*$?luSpl54P$W29I/[RnG>:\E]qua]_(k3X>-!=m5(BNus.G=Y/;chs\b[nN[cZ[>c'3Mr3^b-VG<D0eItRg%9F5IbT6)
%Gl0AXkXKNu_mJq)rJ%FP<UpmE%7*bt.j&E+q?*iP<FrpY%>+llm,(.IpM4$s`\7.;1$sQWk_,a[kaqFEdM_h[rnEO`@P$^&M+M_,
%IebO=]3qOj&p?E:GUCc*$D4U2NY,%bD3&Q5c@oXNE,)uX\W#Yd4l-JhK:.`.^@`])\VUgo4Ef&f4SM?AmE3/+V"$&nS4-P<rC.DZ
%hB`GbJtV<d#":gOoT(Z$AErYh#=T#%_Z/cqib(Aepl4I$B:h9Wp;2W>06XfO_75naJ>OW!5+Hh4d_>\l%a8bLi()*t;cIg&3)"W$
%e.<,^oPfmK7;m?[?]XoQ.hB1(#C$+_W+Y!P[M?J(.2,Y$^cB]E5ms4CC]l2nmMu2`&3.^u2o%6<(Vc@E#JP3WIH*FjOFrl/c>(_t
%HYh[=nDh!\@P/s9Z!P8[cqbojjN#FrjLa9_I+$8%*Y/Mt9JiN1S.$"l+0TU+bL\ko?iB2U"ZR%h2=n!:&:4(83Q3k:[\>"_E'Bks
%1J_$Qhp-<:).Kph-5J,i>LZ/jr;Je;VPuq(s,;p3,!7+qmN\9iq57d$^+.T2d(/onh%)SAm@WEo9J"uP\o1!-$`Q4/YXsGT&eIt&
%htDT\L"IfA"5_87#*FAkN]rg"[$soVmO"G_/XlQeHBJ+:P-qp5XQ:2a2\gDrEDr53q'be!;Pbu&poQaj5u3EnGS,j6ilVeCeZ65;
%,7-P%KE<lt+#,jI:GF'r@l@+\QCdC#&=haQ>Fs$,eEtld]LcN9AU`T1+5[ITAj5MXp,sO>;>;iLRVjAkPWlaiK9*[Ag?g$#q5a')
%*3oE)7kB/=$GQ<KUt&Fq,[PQJRf+uegr?(cf5n?(KMh4pL>lfl>&G`opQbdXkIcSR$-'A^HN9ZSq"7([TN"XfaJ#t!kVkkA;HIVS
%>3J;R_&C)"(c&7+UiosV(_4Fd/ZWW5$U+gGVT7f#BII:A#`om0c>Psb_YOfJP?&MXcTtE%La39((]C%d_b^=1njVSB9%-GsJ`(rQ
%a-3\&Z\s;VSW'AUC,\PD"PPOn#:VB,((AV%f`p0ISm]pI3A8X7A=A\0%2g:6;tLV6>:.RkGIN_f<EnALk%D-0e5rY;;e]u>rk&nu
%J$^jc'6nT:*!8o7rCX5m+IY08eGqEtj#Y#"pZoTo+[X6=m2ao0!c(/9TuUdi<;S=R]L!Fnh\mCTl!F]Q3oV($<_f#%BkM+[-u$7?
%?KnoRXaNKncZ-`F%&6)`6,BsNB8FY[ru@#Wg8teuI1cn)Sc9jq5eR(XPQT8hBQtqGh3W1IjR,I]I,u1`pn*ZTH_c@^Lah9CM^dQ(
%$2W`^OK/Jj(uq@`U-VRb92SYrC]e/d(u'PYfNnPgJtNC(j?rEjUhS-Q"hoka^eqbbQTGMundV9:")C("3.97Z$QR3tc#lVBo\,>9
%2?f1PBp%LBZrhmP+M*=]S,`g?BT?S*r.Q7^NqE,;=/?Jc./>_%'HqLJ]*[7ei,8NSG=.5ra0VGU,YO63LqdmccX:rAfRF#'')7eH
%bqmCt?b.'7:0<MiZ,dM.#b;R[J</Z&j.c'tisAc]l[n<OV=50n#<jI'.=k:j#?)J*-Ue^b&e#op2#]h)Zs[Q.,r-b-nKi-/JW'&.
%Y(Q:o@'0TQ*LQ.Q&uijdl20V3%Ers&Xoi_cR-XP[WPu^<qrTpfYQs;O0\:ldSg0A$*1X`]Y5,k<#Ne'$f7CK(+-B_HSA&X=BiYcI
%CE6OC^fgsjdhg]iqI7V92R\Q8qDa@as,d$%Da%gN1/)Xb4tutenILS.@/PM`nRkuSLpR7o)]7>f[\PnrWPu^<He+X\$23\sP'Dj/
%OC3(t+2/\N@jqVIkBMQP)<3QaGr*n4Qere:EuZ3FS&!b]hBiNq(YW$96tjnd$o(\7*KDL[kl.9*M])P\rL79Kr/XD.\*VkaehHU2
%(#M7e"$I(bE!gn>Lr.cs*(_nBcJhBH?jQC`$%_#&&jJK2+^4]25a+$cE]fe")=b1_E^B>?qm&K6!kqU$i#%n<BV0ehPRu6Eo!CrM
%lsDDnpg'pkbZG\b9_7df&V_Y:6nX?"g+gTV&gZVBIE2)#?RnpXPTNA9'ZEtio1g-g2]7V-N!5M)3<$PA9(P6(,:lR[**Od7;?F\'
%FJTk;5`NEr9E"=W/'[ZLf#e@/I]<fJ'-,,`CS_HrUH/nuLB#4r^G]"]#"4#3Z:XWj0/BC5=Ludc9D.&+atR2WV$%1e'+Oh1!\Ih`
%KP`]2-"SM;S([h`;\aP3pLQs2QKEFn9GBdSQ7_2Mqp57;l?>?\J,N?Bs.q=/7=KtXfq>"JJE<PU;aJg`^1&LN6^EIWQkH%H[D&;a
%P9IblH@-%-Y@b?i3>:.K!\nWM=Wi?dZ31+>pm6KY^BBVFRs0WSi"t+lL.`\BgTUb^*>n"U5gQeGrMpBLE8u(KTE>9:)!G+gTmsJ$
%('4RY)!Jb##6oL/Aa!K;TGc2(%GEW2XoO#]BBZ:4i)CK=+T1Pq9(9?e"nOITZS0L@?QYD(YT,sVaM0Dk6P(7:64iq5(J0HG3oB0A
%pDWo&pGn^5BU8p?rV<Xe8jZH&GXgaC&j&RF`&l0#+ed.?>\b<k`2cX]$O:]-%ep4P\Sa"\]UnrbpH07g[]Jf#JOm':SWu\dY@*$t
%Y";/&SthY[GCLh%%:Ao!Iu75Z8k!WeMCr,"rDQD,8d"MWYB@P4,smCV2n_jD"8oi:>@C3_K0eH@%3P;JSB0&6?5F'ghugD%8`74e
%=b10fHk+d-CQ8P"LZfrl+3mE,mu;iO/C25<n<&G9HWX>0GnQb@,>!GEN`8@RqEbcbqiIu6J'F)U!uMAnVU;:t(s.n0&"4[Z`r1VL
%=b_-k-QN.qND0^mD"p]!:O?oH0Odk9+U*G7?[//$c>_Ek'h?#@@m[&7Ld0APdiS*"fb@mL_&s6*B,Z3PUCd3*.`.<W3(e.<_2"D:
%o=r3C=sGeYNp&9Y50X[tBh*)YmJPh!fhXp0L5acpEA0ZWid9TT_RN_EeZ#Ka1t;Q3g0q55ek%ZbMpA?Q5tCA.=\/k(XM/RT%EQP`
%T.\`N)t)!HcdeIHiGp[fq4lF,!^L#=F\ShDFLdH\)??Zl:&:Ilo+0+*Ju^epG"n14-5>ME"X'(Y)1C_`HEqfVZI\EXrfFL9&f_cW
%nNd%]fH4"<?j!/3r<\![n:E!W\XNNecabD<6nGVc.^dfA9<S(7P6JNX'*qX'D@I@TqEYa)VBkKj(`OQQ]#"D<U%nLQ+[7?35>in-
%V(MSm$pU8R\fcCX-uAqQD\`oNC^</?ZT@=9C1daphes7WmCn6o'BDMH&,f/ds$CX36*n"k`DYfHrT=U1pDd<+ITrd(NZ!o,,U#E^
%"PM_aPq9=-j1IUZc\UC()1kFV1usR%iUtA1?GC(T08>/hPMt^Yd;$frUZos8g7U6Q+@l!M6D,as9+6;"28/5^5ne8cn0>'8qF%tG
%WXdFrWEe%.1^0%H?RUqYR[Lqm>Ki6kd&M+)D/7?bA-!0Y-J$S,Ff>Qgf0?JVnS^'m\RsDeI*%ld)E/8jr2B`hL?o6UKM$l'kZ$h*
%##[eu("M06B6IZ3L(`iJ@S"r>MCN>J:fVA5>)3McS@.%^;$aBRojfZ(=#tslXq-T2^^@0nKj%bQU"+]8C1sV12s$K0f;*<!-NPNo
%^Apg(_9d\c#)Qo*G4Hj!OCi.g?fKP]A=He1!^#Fk\HE_>^4^X4JXd!Zfn`N&BUc2S:XqtWhN@XdZ]4)uqq[HN[8B2gX]SV[[hr!.
%.1+2>R8'mubn7Ea+d<o/C?S:Tla#Y,BEHeN^'__#")VRRZERm;nP$)7K21W&#(V98m9iT!QgEjC**qua`"b/?0C'c_NIk[I$W0=1
%1V)DM(PkN/2310E@]7Jh5js8?IaNul65$Ihq]Ua;nfN0+=&X4?U9kZkMGctT4kmp7XbBM>lMcnA-&6MIhTmgN_POBi+$EWQ;8SO^
%"607mq3T-JLeup):sW=5qErh[W*!gkg6'OO*Z@L1r^3jR+J0CJ/Tn+(c>o^V[B9'd:/SV!#O"_]E9KC3@*ggfQK;:QmG1<#7`9H>
%$ACY2bH,j^YcYc/Y2nH4h=p%4+"@_G#haY4mm)RZ/:9ru(pV^-+=(?]!t"KHF=R<PgL"=p-EF7jj\R%kSENaXg5$h(amC<E#<'Hk
%Z<#'?nRZX2Do80H<N1trH3i46;+=H6VRH,QA.h:^E2cS_<QG^)D+fCsA.?orY'T:\k<`,4l:M>\,5")!^$)/Bd#T%uP'S^28]i19
%FU#"k@]<c,]Eeo1anW*d+kZQk'J/AFd"hOc901K\U)FZ*a^\aVqID9:Q[>YV]'AXrO)T5XGQ'8j<m%_KVk@BGe$^'u*m.$.ElF2U
%J$s5'2,"O[Tc9F-JK=^uQlL[j(c;H6V@:_?60aspebNrZSR"R7J5]!D;Fk%4U[Ejl-8e5g4<uC$doo#5+oNT3_G(jU:Zr`$jMa58
%pt@=YBg-T,IQSQ9k>QTeNj?6rA&Uf-(E6VeO1*f`3,K;n1KG%VV)6l$GmM0;`0QV+CqZm76k@3WK"&b`P/cG,Whaf"3il&N?lE-Y
%XY6HK[4afB/YuML\Slls#;HVo6cNU);)g*(q@5Da+'4lT$kEoiNn$aq>?=0EUHK<n(`YQcUmcmOM:AYqiQJ,"Mp^i)0bLJomY-:T
%nVCai/jhn<4dj^Ba)#+>O;B?mND;!$60;=Pf+WeN%!E@iCQ"d-$p3%@,AF8Dl=K&4UGdVm/>M]EMlLq5<Xbhi9j8%>"fJQ5'>7_S
%"9,Ijb0<*N7Znp1h'%b">6BJY)>jDF#M[2,c89gkJYZSkN&^Pr7BcFH\r@^I#;X`B3_Y;9\I:uc*#GLcjJ2r&EiO8YD(UM5VE)NA
%$/W<q$pYg\Y4/"le@0A!okQOdgJqMmN_9k:ZGN5_rtD(\+:$`f="o`PK.,;7TuA+e7,Nr>J"j_ZmFf/Pe@gg"iK>mu`;kSFWsudp
%W2a2joY6as"ddZAX7]pS5ZZDf(k:?I[_DeGB5^*B%%.Yhe\7q-L'jtj_V:R\SC.EsQ=rXEBT5XS$'tE-I)qJT!rLO;RVOLHL8p,=
%h5/OqTYQfbjf_0iNl$ck'`u;GQVRk8C'bT3[&%*'q8m<k3S*9*dce9c6=+,=]?uL=P+90OR(H_m[B%'VR+UoNrJI=nUn/Z1[oo/Y
%[an"Ipsb\(n\.i/C0P`uY=Tj[Zrb'k,<r(t*L*4rC4C[eVPR=TRsd_:<C=$BRrdp!80!?oebpg.c]T*-QjD8ujB)$cpu;`EFJV-b
%RS6Th[rq343-`GX\,VitiUC=/X@L&t6c;q3<ITY-)Pj=c"?VTD0e>>WX57KFj)t"]_r"k>'$TMC8[i!KK[lb.6+D&+Dh%1u0r3cO
%>q._JM-JA-[I_QWnH?g+%,E$u5q1!5@JhC<Zt*6K',+*MYL-0eUHet^'c\jY<[@&grA"@1oeXL=@5QT@C]@hFbBNc4rmDMjK0+\E
%)8u\<bt-94f^;qH&*T/KH7iVSlLQa-r[BA_>oged9)g^=J7*-Z0?h!.eC3\tpJ^tDlR08a6UCr..hVB-C(D+5]g+%S9#Eib%,?Gp
%cUrWreA6_"O=5E-MF=,cV`a5l+;-ufZn%H>]hLYAD+ZZgPK/R4,E^o'\Jc"A"f>uTomG)27i$oEBWi!e@j=_K2#XVYAi_@f0`m]H
%EJKGZ.BANAXK[sjXMd2#aqP0aRt]q8L@9@i%>Vj3JQP$0^P;4Op?:ko`K?P39<6ca\l:mu5,FJ+iNRJuK\)TdX+Tet"'nmsB2=!a
%(\`PoIdQX3pZJ/uL;VEJCcK)4^(_&INgF-UJN_7`r9=+adtF\&mBT!oQPBu./>r:+7N9(C?GaaGE0rhN%uh=+2%]h8E:`u>KeMcX
%ph0#s=u\u9PPAdZ(6\RYkCiqAI]..ZT2keF-!\k]p_$^rKC>Uhid2][7<d/*1/)c!Sk*_8Nsu6"FEP+I3iCrkjuM^ub:*>[(A`lS
%b%;;gnNM>WPPAlV,ASCbk;E)Rcb8^o7*l_V5"%;'2(KUEBj`1&g,QP$!9>s/kM8A5#Hl\&<Q`6XIO@3J-0WhV%6D0;0;cl6rRH9J
%]g2\4,L<pCb4]>R^4*GX4W2U"Qti"[1^oF*&5+U1RoHg]T2F:,a)0i'L:mBScaDVeG//+<8qSY7miSK531euAG4oA\:S9fG#;[:'
%n@EMCE23)61qKimBL&-M,t.(O.rIc2U&>g)>sEUcp6K.g05VpL?+e%>_NhH8*Xb^=ZEu:3:Zi&T0R`t?Q+F!_YGH;Eb7%]S,glC3
%M.QEb]=BflDW<GL`4`!OgU5:YO*`2?Osjtq$RBY(A/>PeCTWXs7r8\*48H_sa.61J1<T%4Ft@i\8fiBH=8>td1k3fu.td,ZIr;ZS
%:VsA"?/nX/FcX"1V9OX17VUB!9b`!<BePU6qtkd/Tq5%%CnJJO[SH*BL@76ff-BTA9,@@o(V'mX3Co^r0@tcIn$-t>]R7p=C5$dI
%0&8^)e*/d&>2f:ZI[s5JeH-V(M9e^iQ7e5,mSbuC)MFTbFH3@CVFW9[434L);F3LNPc_uuk\U+^Ci>QC-:e*S_Ye%k3D.</b7I[-
%QYK%ZiGeLV!TDQaiUHiON`N`%1+^$,]G-BthgL/:[`&\,liqY7`73Yb1]"MLO/N-M-[-MJ`t%snL4CnqOcY@M_Fn[jgYq8=m!3i0
%MH.No4D=9=mKJNU@""M($qL$GO5XcTUkUg'P)4/EE[`$c]Qq$oa.ID@iC"t5%<"+gh([5*?A?Qc08Je'I3hPtY.66u[W<GN2O@df
%4Sc"2KnD0B/EW@qnFh#"-(M&;&Y$YLCU\\9Dt!HF]RR9B#Tn01=?+"-OUYqEQX@Y@2/OY007FmoO&gU'iPJ$%3IDG]Ur'%Xl>-0B
%58F\Ef=40BZBA,&V8=)`^*`9N_`*5BV=:%eR0u6lmP`HL:NtE<puSg['RhR=S)MN7<@M1bl`Gj+[Ct%.;jHuoCQ1:\GIHs)_WjSL
%0`4e]r<V_YeBq1(+:XX&Hg.l5[Ij%D;P\S^]bJZV'2.lplIuqk-7,!lnuMrB/@"Zua%O;FH=SJ8h0iJ\>F0N!%^c+oV+gK\[$6&#
%@?q8HL%`sZe'Z._7I?%:\nYSqQ`g"No$TZ%"$NL791uIbnEWuK"&mg8"_pW>L&j?Y^#u4u;(/)Oo_!!;H)[UA/?^f*c/km%\Qt5^
%\>*Vu^)**g2*//sFJSp,c<ITgHuScXYadj@^0!QK&c(P;gXbe5n`c3>0#-kpQg^99lc[U`DeW?(9%pT+.!:j5WKVOnB"<8RBeK/3
%;N6s<MuELpqIZV0&plWTXq8^=pD#T6h,t>^?9_Ka:3tla9U8pj3MKIBQ*]*p]5k=4hd*ceC`ffBD;>n-V![9aQ290*F/AQ\+0>,,
%_o-:L3S9%"<nHcb:KM%Yoqtg\>jAJ4H7HA7F2#)lRO7<re\gN\F7nm12nE2P'*kT49D[K09=sl%>'j>\eb@\)ibGZ'mAu"W'!o%'
%Wa2bReiLK%L0mQUD&:=7[0%]iJSE[F\XSejZb'7^Xh;*Q]Cp2h=BUgnKir34m,M8.H^e+V`1sg-C]3#_H<f=<>A%iF'C3c`jO8GO
%6tOpW(T#i3nS)okrDndIemAX+Zh6A'+'\3((1,Vcf"jPUL?j2uiCK[qhF0DdgQ(X7$[O(b:YnOc^d^f9h9oKfkt.mEC<+$:839Ob
%&NtQJ'O=MXe`^$\<fHUIVgHhiQ[U-)plXr6MhtIdH?YmiNP;CNPGkcg7ajaig&emkRf/%Z,h=$'2n8&;a2\)je(QdU=6,@a2-&A?
%=65d.8m?VqBIV8g)nPnB(lLj&cS8$g?Xq3QV+N<97atr2S(VuOp?YP48PB$4f__(uM!7Q64A<(!H!O0`;Ye3*k"]00gs#H_b2u.#
%^V"jl>bj<ZDffm';eb(-Qb)9Z4MJBCMt>]n<'5=&E>q,Vf@BX*qaAK^So2m6Xi+3q5%m%iM-0WE/A\Ggg51Go%o&6I\V])gDGGCV
%'%4np;5/KoD/V!HdlUe(X/jC/:g7P@14u?gXc%%ehKl[qIb=dBA@Fa[0,5ZD8aR)]ol>uCB;I_1X;@4[Rn!+;W*Ib%d=mG!eO&=2
%VBO(QkSC^5MDiS.7%BCk.Sl0A18C#gUZ)`jqOs]5C3Mg1mA[WSFcq$\VsZGULK$u#n^PVDni@f9QF\on7,R2:qfY[Mq=HE?/?Tu>
%n#$VG=h;9h?lEWMcbu4,*I`u.^5jj#G8i%n,N#]sR6J=4B4J%QSJ?)=-2'$V=_4eG/u!/>hB:I3bmg9!fLYIP!r7#XjjRE[Y'a5q
%jXTXgS,3ccfD(=QL?$6d/WW$LiQK=`J$VYQpmS'tnGO8G2J3i8_TpP+:H6Il)<#!WGqLKm#Og[C`;q8_nju\PYMJihb?T*YI$7Vs
%o7`a[m1&1VEdKm_'F+0:J%0n[2ga:OGrH,[,ZdapC6H[Yk*+KbH9YQX5+a0;\&[f+>p=01Lr_?`F-(ZKG)FOZ@7Ls%U,sIiLUZ+7
%rdAC&Dke*(4dVVfh:J-]PMP(M9CH^=SnNJ_fuipCq8l*7n+GWJM83Fnl)j?nj-eKthRW?mJ'g>0mS!B#m(V&7`.P1M_l\P*:Tkk)
%,-0[T>,TnDKjUEU.9_$s;RtM0,B_bNXf(%-V.P%%VtHVs0*e'?8WV6H0BpC9FAJsW@%'dKI"T_?W7/FR8_9"Zouc5fG3*U<bOQJ4
%rTs&C,*@;fD5OVP\$JtMCMckhV1jnBmeSB&ase:#qu$<XHU".XC5Vh.\TOIH>j2.(n9/pJOGsW$LP=qPRca*b[<d#k&W:BoKQrY?
%aqhD9d9SQ;GLY;Z2[Z&9PJ':4)LX8D5?9RoGO\KkNXi#Zj#qZJG$HLUT9#I#o%lt!ij"!=qs\WI!kF9r``(8\,D()g]),*n4&SjI
%l`#lmk0;r`=d0?PSF%cibZXaFU!DNDamaS7D`#d=>jh.[Q<c[=n*E/J0+qpnj@/crTIq:P#+HDN\^l(hC.c[g_Z&#Wpo;*mQf7-(
%i)7Xs9:$H(A/1uPXN.j7<Fi.$>j^#/r7-e2[=?^e^HO8ea_TM)_l]t3l/a,C.u0I_@V)7G^Jcb&7kVpn]jA8+W89(4V]S^CY9-@A
%Qe,D$ft(U!G0-5[k2+ccI4b2B)blY9R-$<WW*eFG#cgV->(&&J`uR=Xhd+/Eah(%.XEkt8>N,%Wce"HZk=8-h#YReg@Cpfrs%qS-
%<ZaB5kij<pmr(=[d#FC4g.Q#G.Cr^m5@ml\LSq%BDso^aS61DXSs/?lQ07JVdcn)ADY#N?`%A`/KHKJ4$GUTZR^g)W]bVe;s'!*O
%`nmF`@ITTIP-)3[8%gCS'Ilo,rkZj]oPdVX8V9A"ZBDjM(+V>ORpnh@W*E>VF8Z<?WL!DA@oYZ@82Y:knQri/&mDDYo,*a\@tKu(
%]+8VdSOm/<l(a;SrSmNg:iFkpkQXc/KuQPqmBt@,X5PCRfhFA_>Fh6q];93Ko+XnKQe0uQ9)&5t"fC`nZ!)B*4iKJN]gcG>-*FXk
%Xda-aDtW"7;L9d8.CAOKUtf+alg/a(G"S=N$^EsEY"-G'DJl"ml;kBM?$2?,kj%[MIB,7VHTOBJ\6//69<W7s2&8B1Bg.3Z4ndpE
%+>%;93[&8DM<>iFFb;pF7p#$9s6Vh'/`iM".2j.ZTe&BfCLm&_iuI.NJt7"Pc=75CnlTS7#Iq4>C8&DJOm5r06+M7qRt&]@!f/UZ
%%.Fr*6V[EB<I]1OS%_X^Y#VqV4c:.X\'gqtQhA#FeZVf+d+Vo:\M'g0"0kHcB/[H=.0P+UQZ9.$4AnY@350[2V<g7^l\>K(#`PS&
%jlW47kt4S&[HmiA.N,-6jW`H4"b(U@D;n5XA)mM]dTYb+]*B\2%3L#Ai,T?3>>]5f2Bb0jP1ESKG`sb`WL]9Ns&?DWWDai1Q;23f
%o,/R`cG)De@!-u.='(@*\M"EuGk;iikjs(Y6ac-W91/SE'C,K2+j-8%5m4rFn'!JW,rhsKRG(X]2(G8YNDr@FnHEO#bqEuMA3J,!
%ILd9FA#FcDL#BO^-HsH!cd]cF3A5gMY$?9W+0X/=?<qt#!WJBu'P_%$Q+CFsEVZ3+>^`l42i1Gp3FL$Z;I9$-Ddn^J)"WH+<h$<u
%Glj<r[6V`$=fSL$'hLWTI`^<A-_i"$WN>f@+Zc>0A!m+$/3<IZeP5f)e&Id%Kl.Y'o;JAQ+cG1^[3s&q(FPY9GGUZn,JNes]L]Yq
%NI2H`9GH+c)^jOST>?<0::?13A]X>Y=:Rs7e?)<2bG@u]XF72Io5PZ7_p!1U5(Xj^@X>_k+<<l!cE?VK'HOkIiA4R<1$-l:XgZsa
%-Jut2)b'a?q4;U?X@<JiY`R_+6fuC)#\4K0[AP,Cfp'+B^@VMAZ.'5VLcC:h=`H0VWhhnjR&[,#3<\s+2t\F_&0.EqiNmIp)]JL<
%3XGE4ckSrD7eRj76-CqdD4kMi.UAfVa;'YPL1"J;J1fb%dT&,#<=UJQkd(t<91H['kXI>c&Qf<+[/5Jj'.p`@c/OpWc="Z9k'S:A
%"'Ds7G8@"H6\B7a4Z"cGff`P*:fUG??gYrGZ-^6u13=N&K+Eu0`.oP4:JYa8/L15U!SJXcnu(7%[VGrb;#'s!`+Vj-7nkOqk7WcE
%+[m9JBA?plI(gp)NI./-2iBo,J`!bE'>3:cCP*$45`LRQ@jddq2KbGdMm^UXcL(%G;S(UFVUmH[kl^=We(eh__oMTBAn4'"8;[<Q
%GC>_9QF@C-&,4A:rU&(3os4a;;!%:/l:b<6m!>'BqUtUZA!:"T8A6?-%X'aWrIb(U[0>#!,Yu=H"a-oE)b66m#<RlLasalKeSHG7
%hADaJZuurno%Es+2ZI`pBA]?1bX6b6ePT->WBs0p`qHq(5sEJngnru`laJQB[S@fD4@`W7`B&Kiq=p1(B+d.eB6D+/59K7!o$7Qq
%rBr$!h-:u],DWZf9S;SpIfn84ld*%&g7u:7Y,@b8VTD&a6POfMb>ua6O+X#%oikoK=EHe!dWeXJgY)ndk6n3J_YZs*'OU8HMn"sc
%".2Q*O2S'/.XN&T1mutV:26&#Ml"`Yhp;SbFZq#\2YM$KQ^c*3<GJ4G8h=%.D&Q?:`0S>Wb0&JIno@u.[o`=Uj'(e`O?+tqI38Ze
%#Kc!Qg)/t82pV`.DKWW+gHA2InXZR`ASADiS$[sPArlgJ5WO:!k&4t.[]O)K,[`BQ[Mt'Ab3:fklkh_;T<95G$9QG?\P82TH\C(h
%,Ib>+B@N:#c;!\GS#S#(j)Oh)X+8V>\$:nEo#TX-QX*"Z]lYdI`D$BHWLX[_oC?%-9A3OlLLUi5RYF0G?LT?["K!=l9*GP"M!a;J
%b\oSP\J#'/Z^H.r7\fCN!_Df$&_l'`D,T'c`i_>KmI!`Tp4!!m\S85a`k+dJehdAl5.6gIln!^Hls:h`RDE`V31YK:j@4L5%/7QN
%=&\5IHRrCY3r-igdeZS)X'B$"*+`LO;WVLj:DHs2B;mXT,8!K:chGW0WV2FcHeTXp<&0,N86TA(c=fO+TcI90]2u?3;QbaG$KFb+
%f\UZ>f&./Z)5bNhP-LK5F*F-=d'VpmZ[I#/O1?O?MT,Z%2`>/[<I>[\jtQ(<dT`M&R#?\c-2lKa+Hk'ZaY\"]DSsL<Tbmn!E>A-h
%=k8p;j^W]m:<aAg\k$aZs%Wrs2KW8Xq+)p5;,Rk+6oc>llU<U(mckrs+a,cLZDMIOEcF$PYJd)i9od]?eE\iGASrmpQ:EEOP/nEq
%H-*Dp#$6N,8*;.?nWH)ZBBmM=6(V%jq+Ro3O"I=9*tHb:DYM^"SC:8X+4<[@jkZ%fTG%=LSU?P_Coti6fB!K+&4"aSDq4CNNl"fT
%gSTGP>H3Kg/BOECcm2cXX7_G"=#b"Wj,ZVY\m.48n4LjXCE:ddX!eUdZe4^9_m)(7isBN?%9HV,2\,N4=sm<r43h^m]90`\5^iTe
%99miQ`kbB[+Q[[]jW.%$'-hNn2FVr&:%b%!YAr<@_"`JJX0t4CX;S7:ZmEU`Y<B%\K!!g6:L1AT)fE/Ykm0uA3l>;^2\N*Rqbe5I
%[l>/Z!dHjVo4o/1duQ7Ej?bcUZLu`DbE,B,b3*-,i?h"s$uf8PeRC$R="P"L!3IEjj6F>ZDY6iND3h675fh,Q;";/_f\S5Nj/_=i
%&`p<QO:*:pEq\ST.%]><Yu,l`A(0)o)XujpK@P)@Qq/?K4Z\JC$iA'NF)Y(2iep<>=(LFS3^p6+=)q8^jX!88Akil`[logpEgMk<
%g\^&D,dVEuTgJTp-Nb'lTq?%0+Z$VUrlLF#WCq>U(O*?$aIouK0iVm8T'+dOp540EkiEAs%^OFe*joPG\^CcKg_n2###.'>`dti$
%4hF2sK:q<?nXAqk&2l4=b#f(heA)qR$PB=rg6-\;B,WnP.$`/R]k55J/Y\p^9>^nOSW`1d7V(DMV?)WVB+VB'87("<-t/:me*OTL
%EB(K&.=Zb%@tYLLbm6+a:5E6%i#!&"WaUeO@_A5'GURq(6Y@!E$[IQ%HX;<u.9ha"j)6h^`iRH];pmeI_hW%Ni):RJ7p\Y2f>M8F
%]ljiiYm+>FflaMg^_^=!*Dot,`[9a6#c9L_[YMoU+'q^^l&2a*b\H[f;*^K'%'b!%&RGm)Llq7)RA@O7U2<@.;)PW#@p7l3rK>pC
%Lei^/;]U\pU8:$JSsM=QaOrWN4^l8k0o<>Kc[])B`<g)I!e3".@,oCN2i0S_o68o1KOUsN\uI\a+Q,BHNVJQ6q<"KB59S&`g>61"
%Hj-g[&^D,r$nbV*num@biugo-_bQqX]4W)Qke7X3?"DAP3s+Y?KL8W"7AG/i+leH`3+7`tcDu(4p]9h(F!Z*BqGg9rFeb?u:"t!r
%kC7X8phW.iE/Gnm`P==bk@@Toms26$1_$^;E3gTGbf.lXg<oKADK=fQ]%rZMh!O.nG4p/>]J>Yin]C(h<Jl:[4Mot(gU"pC,:S,$
%i9EqkaE48@PrE_bPC,G#:q\?UR9M.T-Q[US#FTK\&PH05S,>Jk;WEjK.'!7u+Z2qL&li-Z2+Gk^M3B=gDF+3P=j+MKO_'d:G#>?_
%CtC_M2hMVh!B$Y4duBQ=2Hi1^k_/4&enBOVg%1]t+l<-VAC#1k#Lh>I?JLARr?`RQUcNhEStro>OHO8\90Y`0+0K,<7j9Y*LBE/4
%&%1M4VU<W\:"b#hDF[_O[cA+QD%B=#'MWS^?>Z*V!/Uj$#U\XQY,)npg,DbF!BG"#aYY(qOCE6CDr]mC`I,&F:?JnL!u9QPI#D3l
%7Z`V+-CX]T]6/>)&(`Eml*^-;9Co0p7e!NGV+@,J<-hrjim^Bp8eV$C[rf6/P9K4#VVm9Gi#W;207B's#&/\E]^CP,7<qW.D]W7`
%@e(d^?a+*jmu?MR)`"Xt`OHOQ]pH6fmGCGVegP)N(V3B0QTtqI@9^IS;=W`l<B@4p6WCh$;$Y]]&MJ9>F(OZW2_q%:aSj]T`eFA'
%It5Y"PBc-o78.[/hn;YBWDUp[A+kCuC?3t4fe(>,dP0$H_Oc>)^H?EckB#Iq)mq/="D;\)YFZf508g(n0(1mbB$gc:iUXX'K*;cm
%0[_Am(K0d?2,hT)mm'>pj/I(]qDp";2.EiGc/"LnrX\\>LTNKm+#u>\&GM6Bj4m-//VeLc[@'s[g<Z(2&ep[9b>oIjj<Z`oI'7uQ
%>dJF2k#77:g!9,FT5$,(EYQh@CE%2!X0HFd8<$J9!3'?X"u^^%bbe0CRmd8?J0#aE<>c^9NlF)u]'WuW*Z5jIXiBnO.nihs`FZhm
%>kN0C%Bf-oXEa1krGlk`U?dO>m[fY-Z<MU#.mY64Ca+rrcmH"T<9$'(`TgiH$'WO$r*)fUa9i?2,A]QUai1\[+aflBhA:=D$bNNX
%\U4D)^V<KKQ"*V#2m0'RDt!+f%/Xo&kX]XY@R:*kWiio2\Hs1t<A1,ZW;Ic(Vogn`-VJ7.r7]^^DG.Hmor)YT>jBFBUGRel5rj;I
%^I2)pAGrIT37tt$Jp]f;fK_BC6sThPiF'0daFP*C#7uHnD\5Mp="1=kGV"=P,*c(Djlrk24hO"XB2;:F,Us8B\)j2%ol*BF;-mHU
%j^4A+?@\@kG'qm$5rN^_MrPaT>lG6'Md+>J1M23jCdY'Ur_Z;M5hmssg!%k7WcKbpmM&6^h5?:V`B4:S7N7abUJXV1HFO6V#JVsQ
%S,nE)1^qN_45G`i"pfSNnE'`qVV>>6/JNrp5b.br!]>$M+IlY.1[OgjAHa&`1G2=6rutKDORhc!.U*EH%fq58'BF?b7W?>r`HL\1
%+IVZ._FE;;OI=AW61Xi_#c#AhEB]0jOI"nL_%%919HFO_faa*<7LDakb.Yb5D/_N`M;4"g.\\K1,tM&rLh%rnAPZ^Aj=T6"iV'go
%_p!DgL31:Q;e-iJ/W^E]#qRp>%s#kNBC#4`b(HM^_+m,J_m.!GlNZ$HEEHbCS8eRY^L/_pe?!XmU10LfE@Cq%\_1mAm-ODlR;Xcl
%8Kmh)XZX,E96&-JTM'=cJCfY4_c65dabQXn7o'\iRCp_)f:BW]X>Hk)[SjYVMANIXUk+"VHr$<gVU%`O!0LE57,1""G:rSkJ%1s;
%hs`%4LhOi@PX)J>%QM_mG0=@F;>fA7jA']0W+^B&iuV_!UBBf4#c##XjIo`.#:Z@pCH+@fMEmT]c6C-aC2SZIZ!d<Z?6or>LHB*l
%1R^6NZ@,KT?h`,D]@tQmrQ_:mHs5rL:QFbCUYR;P)A*nS4YJ$PWqa*uPU[-b"#G\l/r<i@\jrXPn$SJ+<?Y@W+)Ic+`.j@690@fq
%MS(_).e'[!FEA08<\u3cN'3n,&2ED7#<TQ"12+M<^o]/)XbuQhdM;>YD^b.<EN)!sY8+q*\8PjAiqb'q\l*`Z;f!U[_7NoHNX4)n
%F?ho@l(.%\C))=i@Z=SpY0cu<lFE&'lmFf[;HhH[kDHmu!+7Z[JVQA8&Dsng]*Zq/W33B1[%$MjHRRWpMD)(PBBuN:KGX=5h/R`m
%[o2S?ErkY>?"BRmqdn)fc6B5#o6NB)N&<au>0\+c\jm\]q42o@mmgrOoK,Y'V[>[%pE.KSMT3q0olg@IRsI0PadtV]l$Pn4,i-7F
%WWRip]4/c-0?5s2ef\Y>L61G9&FXM&mDKK9^\dP;Tl@Jm16$HXhK`6r?#FK7J6ctDUY(E6]<SK>Kr_gd6.E4G9`C]iH\_3?%nUiS
%o'8?\Q&cDr)@^s`isSG7@rBMDOuliB$#t!6."DZ6>W[YJ^G2U"05"d!!]\-!lV.lp'*hNn/0R7OJ<n:<F([GKB2Lr/<M6Yg4#ND@
%F$%bDLn[%tl]pi,78fWa#P.NrE-)cGU(S\ThkRM"Ar`1_b=Pcc4uuk!>I>/a'Na@''%-*Q)#]gOQWGg\-]N8@D1,s?F-hl.lR]Jr
%;YP<5?J?@'\"sO9AU-EbC_eeIhmUoZ8rTE%,#RrrJq!FsHtE+1(HZc:AoP1:*nP]B\#)/;UBpIrGIX(ppX8Gh.L[9ZqGpODGoKTg
%#Fj^VCc?LArg\mf]P?g(UoqQQVTk2f*FHE5`+JbBI$H_<p)fC"81.26Z;9/$C@1e(k9uN2RHF'S)*E%F!#ld$,44)$kKOqJ-Ec2u
%?$3X-G+Z(pC:6sNe?d2X8074fBB=)N':IpMFoGeAeKrSS8Qbs%`)ZQ`(OYCK.f8UnqrT+,l0b2d]itPf6U-2d9)%,`#l8!J)_5hT
%54I[c5o5rlh/%`*Q?G.k:C=T*Z&p!5A@<)Vm?cqE9p=*d1JM6^9XB)]04jYk"^&uiL+h*,S\s=,9AHKnDV&XRnhqe2'[uG/=['KF
%\EdbmQ[7@7Bc8,W09nj&m<R'sGAlNA$+=4gd5^QH'MB"tPk+VP6C5o#[(#&(5cX-@W`s0s@E[#Z02s<kWUJ<=ZQ+^21^C]cQ.VFS
%@FOXGh58X(J3;n]00A5.>6jVpJ9g=$.'Z6PI_1;iYt+Fb`6NYS<RSkGRpOu<47(W0AZH/H_atcG*?&rm8ZBsm%7cC);;YiE)2mPu
%=A;jq(FM]c$Ae*^,q-DQPiA.T\m3BXn)_TcFK<,g[rUqfVPkuTQb2B;Uc\,D+WLpK2t$P%n_N[GjjX.VaP[O^,$IrAWjsSqA^b;>
%W5<`dQa-(t[pf*a62+G%Eq+LMO_/Lq\4ZshQd#_:c2IqAE?ae&<lksC#!:l_2YKBT]?/3=CY*Rf,6RHpm8Hi`:59fqZonD;R;!_l
%^a6EF[ja17Nsm,<E_Jdh@8h<2?ms^j:bcHC<uih@:>Y&Jr=;X$+Fq9l6;AG32-)='5s2ZjN32%`6,PSND90'@2cJQ2E"R];B*p*,
%;t`1U-X<].#Ch.n(+tWM\F$oo$=G*R4T]T&cYnS0i(VU>9JfQ['nmNsi\"KHmH%tf-^e*,23p=^M4f:%:!f^l$D;Fi4UB5pf5&&7
%nN-ES+uX<r=PFF?P(=G0>RmiUpjTPZ[1^'dB0#kW>KuMIjc2N/]%",0-cbi<d,UDI6b,sF8">dL`o0,R(bO9g)h"ZhHO,\mo&rL9
%aQ'.E;V-@!OPe)Z]2'h)h,_.k-`ZII5*'MCA#@UiL!WIWh%,il4[-D%rK,>0D-cD6jj_AXDr"2lAmP/q.=]EUTP.W6N]jul&b`Yi
%%b"LUp<`CS8$8J`ke-J%?Z)Mk`u]+\$J1L6k%(-d-N3RaE]$:5\npO9i1Vr0CB0&A.dq=:KV!?.npE4--bWFFG"G.n4i^<c_oO*5
%4NSL)F]VZ3G='qu)X"?jV9pN+@9l=jECCN3?e;ntnQdE[/#Z&2NRd6V(IRD7]bJZ,%i2RE<rVug8/jib6`43@COh#gqm3F5=cbcS
%eds.e'nELTa.8to^7s4Litl:arVZ,6#1ih*)n6QO.,aiRj&bb+`k%[aKo>/3^u'QC3(7ioNhUeA.nM$(5p/OcTiUJ"<=g5Y/>$<A
%;4Q92$OM\u"Ou]k0!s1W&LkRC."N]KcDCF&FK,]'\l+<T[qO/<6)+0'r.8Ybeq;gf9Q21I))!8D?BGYKdQDj%1JP-5LoFl:%2R/C
%Y[E>s>ps2>TKgUR2KBKt:20sN'<F0HZ?ogYjm,K?S%+9J82PF4q`Pu^A/@c[6#ms)Y]."U9S+$nAsaGL>%on2#m*96:4(bl)+Q')
%_lQE+AXm[J%,;cjpKtLkhj<`Y$4]4Z(</a)A.pWuKBU?qCkAQNR[dE=!>b:"q'72B5Wi/&X,.XD3?X&Vkj,U]n;ZE-clS3UkQD@S
%)04lIS"ME1^hb2h]39K;9^jUt)U2u9c0@,hX)l:$E#;*RMO?O)[eaFe_$Ms`.%lTjMb:?N--i4tO,sTT@L9oGP1@JVKSrHG.n<]@
%U2;A7(6ttHm3YLQ)I_b4j?WflcjnZHXsVc5:92&nB/g-UEI=hEe)B1/XfT;a"SBS-+_bLJ/g8Z;i+ch+kU98l9-.>40"Gu0>4Ub`
%B+(ChY?P0j!a5oS6X-W@.Nri"LUQ\69l;P&>&ADfLNCfZa4Hs!Z3#Y>;SrRZEf<^@ZPD/,^n5_jK@Als**90e@Eri#*'3]&"W$U7
%$"Z[d73MMB\,8<^DFLg7*K@@[F3kcEG:!HY&bq#MP/Hk5E6sERRa]E`A-.SQ[]Zb[Qe])S/HKpIZc1:_eh+$U_']A?El5-rP9:.J
%D-^FADDcE;D1/^FF0HM!et9<)@$a:p)^UiX1>k"i0@n[rJ8[0H[tVY4E_DCmeIjNJ3*QZZH/6okK&a*!A;N0%&@UBS?Z+[b%?CG?
%rLJ(l,<-@r8Vn_22T*s7nK^M>!paTT?lp`2FL&FFC3#/fX4<@\B/j,\XBFAr8X!\:&4s?MdM/=H(ssq*XsVc%Y#]=`c>X7+UU^/a
%9hGuADN87*S;;-)[o+c:0R$0ee)Zf0=0!WCc>^5-=gP^$OsWSMP?WP\R^Xu[#'2Z4Ap%;EjZ14=8;uOh'10i/0Z)7#1G#Cc6q\N9
%\mm`A@Od*EBQk$O1qA6-Vpu8,mGXSVe"5/CVuf@[$tK[I<WQYZNoF0mE3:P>]WP:NJ^/3E)WUVh'3/?];+Gq7=F#q6$,p&#@M/TW
%UZF<A7>jpA*ELn33PhUVY?P68K!Yj'=G5ZGretVP=-IE+Vq#+H1Rs*;35.0lYd>Mu#b#=["d\9nO!JDJ^s_/b7>>jgJZ^?/Kl^F7
%;eQ^)(ef9_\%jcWVaZVe"+kSdO;,UCK*\Bs*Gmd<G$&2akFaPiY<RT7+hWMhbcnn2&:]m2=VVD&>XYdDG$-K1BunLYXgUC"7WXNc
%4f_dl)=Z>qRB5lX@WW7503gere)ZNIlrGJbZ%mD)(ru?>id0ul(P%du,gW.s&0[e.-jG595RRWNngl.2MI?;P&1<AE%R%Ytn;N0]
%5!4KG!bZ&G<!'j(cn/?DD`A/%GYg9Q`"@T71srtWKefS[B.5"2&d!mi=\Da,3>_f,a!;LR1\3>'%qG6C&sSZg_dkla,AGR?3"?[l
%:_P#!B(,gE->dlOGg^=1_8CFp'IZnL5`TiB^nS2'K]Ihpc(9Hq&M?F$`!@'3is@74-7RF=6NV'MO=Y$=9!YP?B9C&Hj32<X#fgE8
%a!dIo>Xm;%,ReK49&`7d+?bBJ7^+<sOC3o%2JW`=RSAm:Ek$r>NURm?P;NOJ/79G9]+YOgF!)FJK8LTs'UR`<YS]J5,!ZL4U6)S\
%CtQRM@,uQg$Y\H&C*3\M\3Vr\X98##NoP+R!>nGW][;p5cfTg;847,6!U,l#L^:ElL7f-b!F29cg=:jWMd'nA$uik9j?<>@*CR6!
%TaX2D(/-uJk:,1S(s+-^nLQ@N@g!,I7<?J3)'i(XKu?:^`*l30/&DXJ`D&[N7M:Mr7C49JEl,*bOF<]*oP(rNLaP3K708?ghPcBa
%PZ',Ea9mJ$_W2p'"LJG*-ZP'[,:(9?,%I$o@4)51`)Fb)!(0:V&;;b?KA@<a"iK'n#:VZ(X?h:H&;oYT<CMHC"hrbW>2[6nTI,i=
%Jd.HJ_2MbT98V;8!suea0SV)J15)^\/B@qplp4A(I41is^&WU+.f<^AUF(d;0HEt?bOVf:gdE)AXLj>-8j:`@i\]NMYmnd,2.0)c
%%g56o>QU.S2WPS'.:D!55t)A)#f)cLGp.j0B[3Or_Da;*0@HePburaD(^2f0W%-_)&_T:$iiu4Q:$)K6_;IQlW4[rZ"8GHlKHY6[
%apQcgLr`ar1^4'`27455!!,%+@$s`CAn]o`/$L5^C.3<%-4"Z*(3qZORTQm"R:t%V6^#D+VLS\6o#N)\7MQ.rQ9^WX6%lba5Sb?$
%BHRZeS.\P+^nL*(&XbI4+)"1'YRd0^JM`37+A7Le$C:U1<!)V-,R#;L$mE2-#W%fVh*PZZL+*:D5i@R$l,E^VI+hP8(8M^=+.+es
%&8X=]Rjc0K5YONP,1](+cQZ(ep'M3C(3,JQ<YHn`+H=uHOk?[bp@FeG(M):*_>nRiMF5SfF@i7-87?FPR!YF!9r3T;eT)?dJJACR
%[E'8($mI[YBVHYl$Q8BYBOD.eYL,fC**PWj:#F'&[K3GEDG_WQ%*PnV?`0/V:('"c[*^'?3oLhe)bF]U"k-#:"d=]=5Z_nL=Q2p"
%&4R.$/W6*CUI'_Oa-t]`<"W9Go*&)*Brn-R8JGb^#Tpl+(H,liWhru'=lWX0Hk;AjFbUfsl(a3:):Ooss25ijASK!g:=4/!&ST(X
%_R`.JCd_p]BVB^o#VuaM)'INT79Pb(aC8S/<e3-Ych),%QQR^%<'T*,J98ASZC.Bj6S_+j!j^%=d0EcJgdKO@AOS#O'!j79=a4?/
%JXRG,.^p:U#;oWb'UW+:/)CrWKHcMg_oos_N1).e1rC8`Z*Gg1YR)U0S@K<Ko18n#R>Nki!WJ9=RKVK+"2Qc4?(mB<@QoTq;%M/E
%0h*FA]S[T:!EW)\JH/?!U.QqTUQ!!O##d.YB#744Ami_ihL[#0<bB:.<kLsHem!.&8/Se#jXJI`58h?iK7c'dYY\P0GlopkQ6?An
%/]luJ,(X9Zk=iI.G]>;*LuKhJOTGeX?]I)(6rQh`S7JB!J`^fSdC(I16L<%F-;d="2Z\21E*3BM3@$W1U+mr20fam)1?;=?$>o!a
%TlJnnFD=Li4(dfg/atG2?W\)u"F1h607-/R0PIh67PG3b7e*?q"<7iD"[?N--Bb_VW=,5Q"X089&$d^,*>HQ",>HI8h6!bL)_?WP
%7&,U:=<kll]eE0N!9>6h$cWQ9L`sqA[_u:*BLEjh8n"9L#'q,GZs[K&L()ueOsA3sLZ?V+36LY]RPY#QMM0@n<5i$t?tLD=k5/)K
%H]6l;O8"5g<^)Dt6o%Snn)-L@3H;PZB1\_^&S=kX@<Q4$MLe0T(+nh#!rFtq7L&7=Yf3#XFG8SM+DJ&.LoY_h"t;5NI_sP_GW:a=
%(ZRr=\s4;JeB()]co-"Ok[_cBLr)4nJNs9!+[AGb]V6.=0P5LP10+ejU1*m=,A9PV0nbMk(edjiNDLPh//%+PW!UGcDWf$6nBmho
%1.,4Z:RH7$XO/H=[)CnDc-[rZjkOZ6_-#0,VFZ:r@2SDGdkPHE4=nmi_5`uP)`A'EZdlsBGZ^@eb`QDE`f-BG-G5J/U/oPj9q[T`
%k\:hn3/07k9Q64Z.o-`=X>Ib_T`B"q)c2*@'djhaP7/]4cl!:UCfBP+0YK%g:C<EdTT-*2bF"TNVi8j@6k0n6q*!2RM_o($=+nAO
%AqWF:AK2&RrFdm:(/0./prOkU=`[*\T3utj6eVZbM41N[*bt+O%*#EhVc)Tl!"Uu5o@),_%`RS-k4"*66XS9#p.Y,\!Mlf1_VIbP
%6uZ<H1[&pa>`rk]$>;7iAWAMt-cm2[(f-&:>:CiJ<l@GU-ES\,f7oc..pCs^hX+k?5gL&u:e_$g0[0trMUg<G<5p6,9Bmj]r.t;-
%H0/N`4j9mleK)ii4`^Hl`;h-C2-NFr!mM%&nMH>n)%9q6F$u-L9n]u-p+Y2AVL@5)R)BjS8s;4UenEiLH(-]&C[PX&]q#78,4,H=
%E\J9Z&I_rQ=jgO]LTIT==9PBULI,'@O#W<0(.b]oFRX?4N/umOc\)I]YM94EDaN(ZZb7g,n7GaZTM1\f<)o&C#e"I]$tBVNN>QMG
%PR5>8+u?%L.&XOp7jN,.3<_#<)!eD_,)k4hQQboR=<;'k,4.m6cl"T:DAmbQ*T$=C;>ih`]V/(7AL05[rsAA2W'&(WEL,-Fm4koS
%S^GGsP<<`kh:A.)8i:iQ2n%'YE$f%kKQ>-Nfj;rZkE#e'XC7/XdqWkNd2+1!pi0BnjY"QcMFE*TeQ=*d=LJHTSjXD/^bI;2(2'\(
%J,sp(#6)G:AqDk!1hW*G7"Gqe,;#!hh$cVtZa;72VM#Ts@1Gf3VUHo+at?89N*ED(Ft9MJ\!f^cG\e)>OEOHbm9HbC1P`!S#%kl(
%0FBOoN?i_3j3c\b/4UZ7Kn.gO3]Ji]mk']idB;.=Lh88/,YaK=nVearQE0-sde<Tj'+``ehBO(\20m.R@hS#L[pB,B+-nC_maeX:
%d9(tFUQ"@R)NI=Lj&)[t1eQb2P-HBK(et]FVJsA72U1-(ST"]DdtVurCHN40G_?B5nH<//Bq=3NJ2D!,5B=b%R[m9<@%dbIRdtVt
%GGDF4`=gC.MtPi1Rj8+AFqA+B2@=")AhXBd0W],'P9k[p#ai\;.@_EmGT5sgRm(`aa8EiQdc80PESc#`JF-nO6nj6tU_,[TM_Q"2
%+%)HZaBEqYXt;#J;@78MfGiANMWnD/7HIRFNTEjW9Hn_f-TS.kD:2epOcHE,UH+]SVWO;onI03u\]>%'b,.nnObMnPllhFeZ4/05
%MC.QoMDHYOS+80SlV@u345.-J9s/2("gk19g/l+d-nTK+-`$Lpd0Li-fNi^Anoda=j*!NPg9jG%gUe*d_0$:AnA^-dQ]76R+:C?d
%A1=2)A5V4C[gbiqY/AdXM?H").m^N(*$SiT1'N9F=m%[TIB[jeXcoW6I:NFsfs0+Z&s4uk66_V1dZ+i`d+BN@Yl'orpIHYpP"tK4
%PbY;e.SCZiPbkHZ.EJplM<K9,\;)DiBh[>TWJ@47cB(&kK6E<shU=$%Qqn5+lYVL!9X]^bpGDo?5a+Q.,>eY.Mu\]XSN%F[k+ndf
%cEWlgHo,F.2"N&<R"h(]OVc[_3/`R;@,mrS7J1(4k_tfdS6C[)E5i:4,<GZFN:O'D&<d7kF(@HT_3r>Z5oa<ua_4oP/boR@'Sb7L
%2ORjq1H]P?P,-$Yd0P>8?)4_Nd+)lc.ACMC'At1o>>iA"BJjA)(t`?B6(?GR`6hDW]@AIKco1W;.rJffI^I5:G\BK$?Z6,$X1"KE
%fT'qr1N&%5@Jg].9ZDEImiF3tG;?t&XMTb;`1ai#6PZ5%7q+AZS2X0W$]m\.E?-*\A/VF$.?]]/0H2230\-K3K!MU7it-.&nW5@6
%)>"]qEM<)fr,EIN&#YdA#qb_/-XIkYfiNHhSa_VOL#1K-_cu4;Zf6q2BpJ3j@u&Zol^tb^EJlkqFhOo`LD_0gob0K?.3NfnDTUFq
%M7Z945?7rTkRg:9UQ-'oN^Zh*U"6$$CbuFjLfD%h=pUJ5&MPRVZNp)^a?2eunb?ua%]g1rd\^PX2"2o$Ga(3NlQI=''<gtaG9+[3
%U>19rR<B*2=d@"#Gtm&^>+e;b(E/Md\Bl8^8m5Ccdl*lTA=Gj>A@ho7*<C9Gi\ZWDn5)_c8jd6989Yh+Sh#5\<4P/ULU6RFC*)fh
%_at>b;ld).kYC8BWsUX;R2[<$=jsUr0YF#u3Y"fDQUL&bE;/t;R*W;#Z$['-]r<_+LR:^^c-Y1i)B=+FUF.f6dC*G01+1J(YZrHt
%'q,Fh9!UG"BGbGF$HklEb2j<e8@1H:;Q1d4fl:T>?Ps[7$@1:(n$.#&25fRTH%m6s+c359B(=("FX%JGb^>*\Gmcd`3k&toiK<=<
%]K(\Vdmp-qLj>$83>+WP7qif0aNeoF6Elo;,G,XlB&hFLYnER.Xj3ZbYQa>$l]BlNGo/qFbN[t?8%bk2o0o&9AsR.sf?m;r'Q'79
%_4Vmf>2^`:gK\D,XMBTW-][!46bDt$9b_0X,S'&j!nr?8HnU(c2pLnIBcR*tLD)=bL1"Xs,D"j6R9bbAPiH2MGBcaLejb<5dh*:2
%D>IHkS^ZY[l'td9VBZu$ngA$CkO",G4dMFA)fpOP:YdefMW-$_<pbP*(=),g]4p'%b)Yd-4>3FK0H$qoo/t_CVTfe)`j'i3G;*GG
%8[m%'F/U'hh4J-reE6tuMk^RT3'T5;ZuR8c7lROYh]@;d=MZq/>5&T$>=V53#E\gp!tK/^NWG;*c]'ifeu]KY?O#n.P9JQ6&C<h,
%U,a4-B>V.l"lJM/]",\fTb?t8\dJTt0`ko,;+L@qTQqE0(cag?#XoZKCS.rqd1KBr6<g@mGp+>7V'#Ta2NQ/;>O#fAn&CSLjk2a!
%NZK'KmBS^L`R.h89;g%0UkE_)aQRCZ-$;.,,49>+@iTTWR(5?>+=VlYAh,%/O-2h*:+u^n'D)Dg`Fg)9:fDJNPF1:1]b(''rr6Wu
%c#k>QQ7YD9Jbk.d9=WXG+@h?`^&jlG5\NZhrr2$uN)"Tf`6Gqp67,H2P"p$.[V]-TC``&0'oE@V5*h>:5:=*nTFui\r)*_Q&/Ett
%2a_Q5+^-?3MkU9sG&,hI`DM'!AW]t0lnSa#ee4U7M]&Z*mnt3X7@NdIqQ4GfmR81fqXAVN=H6A&)jM<D@'/tNHUYsum!X5QWUp:h
%@62ER!YGjtNiLpAP%5b[8BlOJS/_WV\62`4caoA0:?%$Bqf],,fk,^BYCD:_+6(B!"e>1erk[Wm[F?$?^>d]Wbk:c4E(Bln)XWE8
%a)Z3CAPQGkEY?XC(Z%>9%dD,F[m8jcGgQimIqimErH*ET#mR$o3fLCPmtCXlH(jr@id`S,0>CR#5T7`I<uY[M8l4#M*9=^k>+\Y^
%'S_]D;q0TJPY6m[Mo/rfDj10@>n`;bq-rW0N+]Vj]2[g=W:<aOXGl`j:T15_n(#5S!<sda[]]Ku!+u!Nc2nUAcP@h(W[+!7oVGm[
%9eN.V[f.`c$pMk2e%"E0P;(K.GlHcu_[Gu6ppNelNE:BjdW^2j&S*/3l_WCp277'c6;6Bcl,']e`h%*+%N2I\hC9]JO?33AE5F/F
%grjl/bl*'uSe7eh1Z`N!4IA82c8Ktd;0Pt)DNfd7Gk\:'533CareqZNilY\&p'C=3"/cNL<"R/gKD=+I]/ad?0&BN#qY-m&bP1i/
%-6W;(gHHIj2f&6(j2-,WE5+WuBls@DRc"%[_fMEnpFuOJDfkY)$oiQS36p(G/kpQ9ADQ[e3%K-A!*qnf?=)TI=[W#^M<MZ92u."%
%`lL24G&It-'a-K>L$*eiE9RcrV3d$hX"Uk#i7@?4fR4o,XO_;;mNWS,M0k$s4N&#,hrk!qTAT?)"pq]uIS"%mYG[$ckilI:-G3As
%JG1g"s5CA/T:KV,2+U.'7oNH96D)u,.,UW`=[`$!1\i%9ok%-Ir,13ULRe.Kan*i_b<7cT>mtB,L^=EQP4c_=C9?e4BD\qrj89TV
%"@_bt):CY@D_*:I_oIga(`o8tJ&USHH'j5>R<kCM]1MR$\D0U5pIu6/PK/@5UCIg>M8pIQ6`f;k,4\IljH"'A6+K-n_,FXrFm<9,
%`\>&\JRTJal2-5]rrWrX^A(+C^>A=3d(Wb;/*cqAaI_nbf,UDcU^W2_,]HMcoc`_UKg9f@o=nP^%=#IDkGpL:kLb:JG_[C`%YKN]
%j."`78'E%6CA.^uVrTn??ghdrKu1GHopu24MRpGSdq$[9Iqq6>-LO(2+,_96`;;4a1S,Zdn:H]CEY$.Gj0d3Qh1l""4\GY1_W%5g
%G%(-NGqX&lIFd\3(YBQfq,:ReQJ`Omf<6Js)8mGqkGP3K_d#NJh$<,o\BihML]66KDU3TUT-WGs;B#b<L9kiDX*75$[C>RNn7eX]
%mc]G.s.CLK*JKP[rH4Gr.d#]2mbdred&[iPf<4mq))l22i)Ok.R_>LL1^m1Mbg(]V6/Bc0#G^q5HN!6Mq<ic_8c%AEhu*:gh#:(_
%m*SXV2!ANYYR1K/GWEMrJuia8'/8p2I#O(MjCoGQ#5d<%b%pkAPPhp-*qo>\(3ijr[rCS!8G1lZ?=-"PHRSVKk1a(4,@*kNmP,[R
%/gNY,HN`-k/0p99a,*B6T/]o8IlHJ5>Q;Ma\1dbE0&D@`F'i+3YOh8;%j1O.$MVqo(t.TPYNl;r<lZ8.RXUG9Z22M+s'P4/ErUe2
%naA9W[1$A?RXqOG<'AQ_1k@t(U*5+dnpV:2PSca?RnhHD.6a%ARJSQ,gfpM]r,_OUfQj[[9Iq9#^/-4&Lsf^+;.T*&@,^4K;Q;Jb
%6KX>M)pK<3:O-%F@MF\H*SA7igNHFB*F)*r*^WJP!Eqp-PG26.l`p7l[q;JRL^;RcLC7tH=E@(k>DUQd73KCIA^Nk<e&rbehJB\6
%Sf;f9'G>Ej5=?!,fVuM"9G,;s(#""Toe&3JC]8IX4TN%`7J,nqr',=!%)ptTaM([%,KA&hMVRiOIr6;%=F+>Yb`K>cW,Etm1>)FM
%79-lL\A\H$q;,;e^Gh3`?VluU0.\7CJZ-fPX3/ipVGq7t-HM6(M'D&9#_>!r-A\r-fYGXO@2::,.i(BTJ1=Hm=RmY\X@QkkZ'ZZT
%Nd5?*$)]2j;n:<Aa@Od>pXMh!W;3`8.I(JL(,n\!@paB[V'c-2G*+26bGP+IH1t/c3+$K#M/p=Hjq#k&'n)>gN]NtY*rk!5Ne#/8
%oNG6<qLoXj$D;OTn>\nSEt?to]'^Z(jl)PpGf,PKg=Z.,+l0$5ALd!iRU&kInt?rM1m&o[,_'N(/a=3!W"0j20D()]Q8Y3q*;7rC
%T$`XrRG$7P\D>r"k\W)GddF5J?8k?_BHuZeQjN'W[H8#ZT:u/f;Ks=BjQ=`s52=1ca,4SF,F:o4\&0"d8g@8?-l3:U847+CY,50B
%9:1NC:un1kEiKnt8(5FD\]2h4TK,[IR:Cj+7D7ts\k;j.!*8?dPc@=@=PeffT"B@?o1DA[]M9g8j?k2D)0:*a'j+?K@A9bU;FQUG
%H4.Z/;\gc04c[S5NIbG[nn;X&XgMD%\/-3f\fdLZ*bqp94H;XMW-U#gl,kLBfu3M2PiF;]l/2`Ei$sKRqAIpI`M7I$0;;mfpK2,s
%qth3I<0/3V);LM3_fqVn=356FhkchRMUnB&8V:PmnQ_ql_KfDh&?SR,&1[pQCl'+rZD:%'gH!?-9GrWNRF'#;=H94_i=BEXR1MML
%-rUgb\jAt`DTRGlDo79an*Q`7-NY>]",0TWn.kqThO3\!S@o[2]_"n[Y_1sTrJD^H3beoq+/Pg]Cr7]B9-J%ME0<SA;rY)86A0\u
%K61HRA.lWRF-0.nc6#ZS^XP[u%No-OMF;Gb;u9fg<`;51n'9cl"h;FADph@h4d.JoE-(@hP8XD3^b+Qc_YfaCO^9kTr7k:dqRJg3
%<N/fX&,ZCm;gKpNRkf9?3DD%q3%9oZb6tAU#<3X-I]PH0EgUe,1mZ8k$XeMsN?WYN33n[0JgbEoENo1W5*sVGf`e$gTr=O5_ci%c
%f'tS$!&]T\):CCJmnLjFjb6Y2:s@Ou78Xl5%\eJ8mOYe.&@8O!8o\WG1/=K78_4/t)h?!7DZr13)5i%[:J%Ps[aAf#6M3a!,*jJK
%ejC`r8K/!EH/+Bid:)P\SgS%RI!b-%1uSc]1ITt@l6H22N;>n@=+"'6Wj9Dr>13&Idn/YgUqKQf[hjo3/']ZIJU#KCeSH(SZ),V.
%4m]Wu-;3b>c#P;K?-[e@/@:h"0'nEk(l8$S,WB(P*(;`&mBq]`OKe%-<hM<4Zd`#XloF8#ei@4JN2f=ojXu)KCLg)(Dp9O#5XoQ6
%9^V2u;bJ9)?o,MgWq6'"DZ=$s8OH>b]=ib&r*AqUZX;,i,%R47)nEs+LYX@sWl61Y$cej-q<c&Z=DM4YnT,MojUcd&nc^<XrULg?
%bts2c^$ejZMa[.lG*E7nIi2chGF=fNOD%p3%$E5djNH%Ng:A$IWq91#(F]6fnfSjh-s[WEV)+?a_jLYT9]=@L$0qeiih]B8cF6R+
%B[7ei<@`1QT)+*Trb\gM`f7%ee*G9TYiEe2Y8=&D6sCE[FQs]Om['nK"m,n,qZ+W13Vg^Q!GDk=hbXmEZJXp>jWN'N@\>O?4_s^V
%+&,kFMk6WCQ'sAm.t!bqN$n#C*ma+%?UTA+__(l#E7F+=F5.p9f.$4;N"d`W*\*DK1./)Pq.PPK2F$(Y_\<t)`Q^\D0eCiB>ULiC
%KlJ`%j6k9P3%H+l_-EKY1_Wr\A9%6<>.Tcd$7uKEDU7DP)eeaiWl]"A^8u1eeYhl,1qYjUidH>$TKu//ZRnpURZG)RbE5IqplmnM
%^GS.Bp?@bQqaYGR<q1h,I(-@D3H`a"3i$>,Mr=r'emA3F=s_m3$i]J8>@-&j$Lsiq``)'T#1QTVi)4$!D6<>aKnt@siT7Ta.u`8"
%&R:1oDMe-Gn=/rC)dd\/9'+&S*(S\-5RoRM1VrX"+?%''5NIc:\*pE7A*cZ)T_Lk0\=J2oiXkpZ2C>8$';;VXAR'OK*29"7&/X8E
%p2u`LiOq>4+PXshL^kN[PhNZfK_N5$#<+Wc[uT^rloTb64@T#Fq8E\CWeN*7#IM_hJmnYp_alAlnCX'.91=fGZ;3fsO,itcM-u"N
%%$i&AQHASMg[tW<]aFN!>PI]nF%?go[-G.oph>P-X7co-pk,W7B!X:>GV4FtH/j9OB#"TolLoH7*NJ/Ac2=9>go!C5i3bb\[h!rW
%PIGp\X79H3.-ch:L;sN9KoDEoAdhfMI2%H\aEG@GiDq:do)^VT&[SKaMk^Bi]CmAX-_%Gp-?[Xr_JhjZV);&rm*-_A3tPY6ET`;2
%16?'4n0s@aANLI)<'71h[rp*J'?*a\*@>LC-P%I\IYNY>3$Jtp:k$L'l=50F*?&#LU$9\7JHID;\BaKtQsI_f&m`Y]h7_br6.AV,
%M*MBabD0aiX+4'i)<af$psor:#>s>uopAEL^aR0_*@"\Geuc?I!2r*:O*#&!!O3HP\\QlZ7!n,747s8^9k(_e)M=#CX1ous[T\iA
%LpgA%Ja%=G9NI&CRN^@`=S";^8<7;@:qI>:8!]'CG6h>`6Ed*tX7i-k]q/fS522)Z8$@A.bum5kSV9H"+`I/fO:'V/1NN.*hms'0
%Id>+$%iY]d9jPIY4m(<cEihq$5o)4jq:Kq2L476B^NiOths/l$9DqO+J1MUN,gr*(\]:DKgRANV&ZpGVO6>8OBG%$=&*M8e@gkP'
%N=WJZ2`>>O<X#Y'DJa$TT[VK/n(2\"jW=t4c'TkdYn,(d#dqmt@nQeLJ,NQ/W%_@*^FrK.IaS;lY<>Qsbkd+(s(-+u<fb)?gM[E\
%^hPEMnFf)A!Y:uWH\B3Cn9l[4h07<D-QD=/ZA2_2gV(A0p"tB/I[AC=_fLXn+dN.WV3Xn*Ys<*.KQ]E[A+I-'MR4I@K;%gTCl2'"
%.Jc:Md`K!fMV\b4J71>Rb\nZ):f`UtkIo\MW8NT,8mA%9L@Qi/k'XW?+6+XX;3bAX`<5n/;84B):q\dkr=9TfC&?d;o&%_J^7Qo_
%P2=NWgEH7G@5c.%leB;c5bdGjN3@:aQbVtO1'3)Xk?S"_RD)u$E6@&Zqs0=3o3bBWRN;E0bnIif<auls^G).khPC?JpjEbuIM:8$
%K0*KXmQ]@`[DX-?EZ$42oV"d(l6VW2W?C$@:'$$4/Fnh3MYJh'^mDF%,`O#,H"RmG%7N]sP]1[:lX!T=5tYej?>t)f>bB+[,$5(=
%N\EfB2%Pncjq]%:<9ZG8SYIR-Xe\?J-[j`K-_cI/NdSRb@;dej',(32UHc#"+!r7Fl>u[4E,J/3h9u82#4]icgE-@]Hf*B:Q_\Dt
%%r,0'l?0<mK!QM7Xr128Q2ZQ4`m6)8!pNN>FB,?[X%8ip\,,inMNKGM-%7PK(DQ(\4n5KtMqDbWV/co?*UhULP>md<D`sKR\-i*f
%#h@m22=?l<jF.Z"]mZb3%,r';+Q*foXRbB(?q=5lmZ@;D1gFCmn_P%d^H)"d'6Y(d:J$MP7=N:b`ohK=_0d&qo@A:=JauDHU(#cE
%;?gFiM=QJ`_c/M,e%@pVF8*+H5?GpS3BSj]pX-R2iqn7SIBUC<@fb.V4hCLP1uB&m"SnSNU2C:!U-pU<6:iD:_l;ND.hlM7hR+GX
%(picsi:27,1NT2&a(`7@LSm"Ndu_<dL[48Se`gW>q=YrQ/oQQ5j]HH%aeEbN'f-e5D;G/3#!>SHL;mBk_?oS#TCFW:n#OQOFfqUf
%.D="&a4FXPiU)9Tp#28f!dId^W6&Ao6E<sP*8\eW#jcJ<+&"k/8Lk^OnbZFN$;j+F..u#!ck=V6_P3_:<E1`/E?$#PrS0a8AGPP"
%W'Ak'Vr`>&>c-sJ_`%t^[oMVg.seil^?(h;INFp_kfa.Ejq3DZ!u!gdQaCuJlp<1q`LB8'?1)\^bS&5q8@28?E2k"q+#E2UX*c@*
%?m=XL]+(AQL["#,feN,E-GA1uJn#k:O!r^LXR.)6jj%6)6G:G#r&u2dOl,?<H+J?)c^re,C&!-f4s-nk(5A&n.p@JoPB43h/js9/
%lfOg$9X/Y.02`p;5=M$+3oc4%$6^s9qh7<Q^j)fg,UVH!>$)!7*MNi36/%83JR?m=!bFio.')HJ][#Dq-d:23b.MK+n+GdR[pR`6
%3c#mBak"ap+5GkoH9U/65Q8UQ+8,D7$[q6=kH,kRbM"*ump3+'pB'O=GGtTW?-UimRk=NKSke=j5ISE"IPL$T*\dK+*M8^VpB*La
%g;D&3E;nb?WM`%KD#"KSaRT7WI.j1=lM3q&fmT5o-uoa&q9bRYYhYi:]:08i(%SM(j/q/QmnGf,Wc2jLc)f61bGE?*Ab!2O0<c/A
%CeDGRId@aUEbF[Q%EK;WeUC+O'WE7#(Dm:Lp8Ioo5sL'tWg\nYi>7pNgK/)XqCjM9%6;.Q9,g1t%jKK1q%a=G];6A`&u$iq4Q+aA
%YAZ.41]"[LMDAI"[n)?Ce-H4^BKYI_l<Vp6GipiNIka;n/acKL0h\,-[IZf(V22(EW^q"P+Eph7#CtoF(r_.^bmC>Z0G9#_fa?o@
%\%r!&ip>Pl3cS;Y:b#HogWgHm#YTh,?5_T(aUVeQ?3ab8U6(BeD;A9QKpKpR=oS;<SUZ's-Q_&2mtl74o%E-;]/SX$7,M)M&%9B^
%O`<<L*\<UIbGGWq/IJ8p\_9,j%T^^bN>=Lu'@;S':-!AX2;.&h_Q[D)pfT-)[J*tE58ls$F7RBIb<gkUZE]FOqUL.)06Qk*QQUCj
%O&"Vh\8##qEB*c0(lP'L+N%)"3k40bF+@Y5`D<-YRRJhsjh3g'Q*27H>oZDNlW5rK%q>i-mUM,Q`$"o]9f6CVqpmT@.,BLo^E3^D
%O,$)"Q64PdgF6-DD?R1QJ*#4.1;pKq)!rF&c-5XskFZ[857<NJ2.+tTedJJHY;fjP8"eArUZja&6M0t75JI$gh[bd/=*h6<MD.Rd
%/YIJ@Undbk$G;LF;26gtn3Ps!!T.'`%n923m5O(f_#er>PZ?6ROJ_.h:<@j1+90bY&\&('C98BJB'GEaW3OS+d\:3FNuT8?2IM"i
%Z`#.&,+5Am?1i9dc@;slQphX+'UYCe4S`e^hlZ9a9_)iN4Z2!h)&#Ms$Ha]V^nJG([J_cd`XDoNd:>K_k;HY;g-IhMF,=-6Vs=o$
%$m450@g#38RXX?*)"pariHqYN%U9^(P%_DnDd=n+BGMsp(L#CuCZLfD8P7Q*43:kb>7%[dHl4Kt8.6q9q,<GE&+FT)&mY^uQWjN'
%LcP8<9%@UG:$,]s/m%&&7jaNpEc)$TXUU;q)VZPH3h])l0eJM85A\o(`,h&mDpao&UIE@?Tq]U_JG421Z";hk:bTo;B1RTgU+#b7
%LTg@U[GFnu#%n`k,FQ(#?oF,1:t3BSIbD%H^b<<ta8)gCUWG4..S*Ugci3BcU\s%Fhu.F'`5`76KlMQgo7ud])Mm-&pi'3hc;Z.V
%OcUYkkKH%f5iP2SKAqeq<#f@HeV(b@9.\;XintSM)=S/:>iD?0B)kfr;'*&\K5]ZT:Z:G6C<)cD+Q31MiT*-+hfNQHNYhdh.9bp.
%e\X]tAm_g<MtQFq^+osY+9t^@1/gRd\:^cUj6-+qf?6glV<!nJ`q$5nO8aRSiup>O`rO7nV*-BOVhKJ%iI>kin#$):5Oe#!gcUP-
%)tKQ3d[-\o%7"hLNC++L]Jm<<D<2"tqSDfQG$#fEKs+9>j(24QfH(Q9m]i#q!OW$\5qV'=R:HNM3p"RC2<9)tfse3,^R0)BD\ll:
%b!:MTZF%ohLf+g4m]2qNV'$k)D:L-='UL&I<DrW(m5`M;'[j)ZG_i6.0d'r1Gc2k"P\mGO2UA>FZZC(ECEIBM-_p5P<`kuMCO0+K
%R>##M*$Wj37Xj;G\piM*'\($#oE,l2+iROd".1Fkn?'+j\.5niHBVH%F3aS>1.g'=O2i"0ZH5;3UTYN?>6sjB-[cK&hDNYS:He!L
%#JKl)*H,]bQdr%UU2clm-L@RCd@Qs(].)r@popAR$4l"^bt!4`&7?q>ecl:_E0XDXNiXdWI/28b-teE+GH@GQ&Y6b,6j.ITnqCTD
%?Bc@mH4`.U2"PD4$XlV!?W=:Cd#q?U8r0L0_2srg#>IVXA9(/89?W5!q\#X:c?lm\&-rj_S"X&>Eu4mV)t;'XTnXeO=U>bDTlVqu
%ppO-kH.1!QP$!oCQm/&C^itr[SZ>CRAKaq`.+tlX>!u;dfif\-T#ju;LqGQ1UfuW)nr5i(W(0qTmZ[VCPM^l^bL6:*+5ZMG;]`[K
%@:[(i_&_];%>?E&'[)!tpgt*8+Wi5l+7aB*5+JuU7l&=e+013piW\MjmCEGh]7s[5hd$asn7f**p>URCY.h7T7k%m5Ach"4gT[Z$
%>h^;n6GLdiFM&Q[O+o%pRO.m@U;1[^3>!O=5Pp&I*CtXgMZ"Qfk4=e!rG7H84&oZq=OcEufNC%'I)sT)Rsh<]2P+,Y^%*dmV:]V9
%6Vo:>ju8V(Du%Nt)X^8HRjre^R*V39VFQPk&b1U!*&A3=1:k2VZ`e$eL3le)"]8>J"X6d9I&C0:.ep0E*u2@7Fbim:L1OBrVb/X\
%0!V$OCQE.;O4?tUOQT>f=0E-,p`"&Z!p9$]Pp'%W2]hPZb*RPM5!Jt3LOjgimcSl+,t]6,.Gs5mm[OA<@Y4%c%%:AjnJq0kmh,$_
%3^@W,_;k$)N.-Hr\t-<+Vt._DH[,D)4$J/<3,pJtQc4NaTZgjL.gXNF)Cd/PJs^8jF&SLu,3<lE?Qn_3%u][a,<T'@:F=,k9)DIg
%4t+pmhOX)LJbTAk<0>U5bo1Rr&*\-`m5*hs&=<8hB7IXS^Z$$:G_g3a(Bit\_4,aZ0G?Hj^ZakHQSaqpSG/m;N0e(#1&3^1L4;e-
%%P7,_3n.i50rek*-Ya*<O!YN<*t0K(o!o'6;9(E8"nE!pSta8VJ!cqUBmc<8mgmT[:8iqhm.%mWG1SIGj#6HFk3kh>@>Z*Qo(fNf
%k)agebte]EEH=>1inIdh<XK-/9M<F##)6P(&JOuq&=)?)lsp/NW2PsZ&;>S+]pElYWp>]Nb\^fO%c't0-9rYANWFY@TP/;8_FGL,
%*9X+U8!qB.WEdh>g(/Nh2?0EC15KihH,%,Ve)ri@o65g#<&Yh?>M<]>G_loF_/5<cG0+Gngt;kpXt%?hC$A1fjLqlVJ'Z;r\F,aF
%&e!)55ht3V2Td9LS(]+-)FdMT^U;^(=$5i?q^1n[IjfrQ>=.B")L($.Uk14%Nq9RN`5hlb?$/f.4Ch<,Wp8WPrRG8KE^'cq@;*ED
%JrB-2Y1?G$.@'Apoqu!.X8]$-qgBEebP4;]icVL*>>NPH><"PV/6[IuaL;7C"tHV4`3@Z2h;hh>/i8NrK*_`d#Q+oR_#37#7)EXP
%T<rm53eJ$M(?[@L0=m`I+"c$XJ'0/.^cCr#9^tebET=WT@)Vi#3obd$j+3'IWCdg.>\#*g5uqG4p3P!'V-<H$)+&URXu_T'EKrXt
%"_1tGkPNFQmF)Jg1_q,Kl/BS"BnmE)d<R^,+MPZ9hH=7jY."cPNcRF91lU<CP_U"H[-jM%keg#A=RUGSo\8-rr@IX:4]p\SpA0t]
%s$4[!5hkuQ^Y9Uq2C$ZR`A^S"fLbmY+^24n'3Eo.AY.#Ek\`Dn%tg4c<s\8@m6UX*[3Y9DThR?9&ieZ5kGj3'oL+/l8DVa_/ip72
%jA<DHochG5.=R&c6SS+H6)1gCTrhL09TkK+c@YC2'20CO?eK-^[mH-D?:<J1l0?2\ligu;>]r-V*>i1i[*aUQ]7b:#nKUHq(4f]F
%\oj9QPV,NUGq2]%_cF[[],MPUSRLS9`oFcj9:h*S]*\7K.m>MDg[]VnAIluS@F79ADVu31N*8LnNJWYY$2D'10jE"!%=ZQX0ePrh
%%2@_pYCUPTc:$TUZlcp5Cg?'j<RPpV1%^u,E#039g3OuT#kC5BMD!^A'DJ@^>n=?P3DF8A<dsDDL$((BS[$nR!e0C)9bN/pOI6:V
%J6>8?2lfb!hs/*T`VH<9TCq]+\pdK?2q8F%E$nreo#CN:B6iQWq=eDQhNWMJm,b].Lc=mm0*r^kC*'<ir]]M)lG<J@H%X_Z1%9Q^
%pqYC#j7E)]9`2f[\c(ZWU^sOo2f>@>6=No+rV3r#\+#)h5Pc\jNBlaRZ1RLpQr#sF2n>=N.\F@M?P7h97m1fbI8<=4o@nt!%Aa"t
%7eKt$km+ECfDkUb]NQ]pqjpmTJUm(FkO*_(I%a?5].XQHa\-e4h5P2V^L=^#AAiiSc26SRo@pnkpA&R&]]]<JZL?b`48n%a8YFu&
%K6Y`r1KG(H?\ese*q/$XTC@ENn4n2kf6O.(Mg>/0`d?XiqjqK)[^`Q/B<Us:?b>prq-?1_+T43".`c-aa&Gc*q/<bcn!oM9`0*%`
%b'9P&7a/&3l$pL)q/G<Ac[@QgraE+4q+\3?!:UZ!TITdsr.GSKL(AB]:U>3,*rN>9`_lLrAG@2*Ta?KdDL\/EnGf01`rA1#aaa9(
%s01TS-2ia^Dg2<fHQU\@U1nsd5mKD^[V=RE/Jf$<Asn(R!<7X&QcKe&,s;[7A(2/Qnca#T`sb>b>4c33=TaC19lOaUc-Vi8AL7D'
%e6N9'Vn>AXgl^f>0TN!%OR\@.OW-./&=$!BK@W=ZKC]8o:fk[[')u'F$,+-D0AH^p%HppL]4HWK8VUthmW1o[#[Bo.8!+74>$#Ac
%P'KH^`n&\t]b!(:9me_53!CROlQk0'Esn/9ed&u3M;[K7B`PF%P"mP[LdoYOa;WDt&2iDO@)mjNMt\F75>9!qOK9m-+[(-\*7fO%
%6jsSdEcZJt4?<kL_Za0f8:iWq^uVZ<6PDs9*XsTn*aD6's.'7Q`SMoUFJIQWW;:].\tR\HbTn3a+[fOV4YZ)Xk]-)=L\l.=^_J*0
%rnHE2p-Hekq\:u,q?ZX$LM(Yk#(?]&YnWS8_gIps?"4,Q!K_%"kMcb0>tl<RMR@%C"*b-"_Zn2I@>2p@5dZ]A9;"X&jp6KligTUb
%b^7Q2:@ciLH?H/9LrO>8E?D-`/PHF??hM*T9PJ>P478n,`J97Qa@!d"!NYU,Wrhs_O"W,!s-0NNN7bO_)=5EVP<NC/(GN=t,:gC[
%+6Nu!7>LOZg2LK26-*XW)A;NRCp#lQ/RCIqa&52BP5XOD";=j6K;)lU&:4\s0Bl>S&<4FGeC?3ebll:H_<p5_8,PYU-;<ZI`dljH
%9+qbb*+t#&%%dESroh?1jr>o5o2c)j`)c83=6PaHXrj%?<LY55"-D90](T7p[KK+b0h9fQfEOt`3"J5h0]\o`bH>9g=2=kk>HL;9
%!ZO9$PdK.m7eHs5XJ7VkeHd+Ao+W'CMH90)`IRUU-[md;.m_[O$Q_2WIYrec$B`q8DF%$@?>)+/f5hnJJKCR#lPM"K=R^<&Zk]?E
%mD"b)lAI-4J^$M*,gIg$8_k7dqrKnn,t<\"`JYGtjm1P_M,+j$d:+PTXC?9`0@=HKf&W##hK\[[3u7<o3@8\V-hkeFk.OSj6r/>[
%P=&]6A<:uQ1[MTCQHG#8Pi][lD-rV@#J3ORTZ<nN'IGb<ctS8'EjH-%:u-Q=aN""Is7IIU\Z$dTZj"g>"6e[!9YloREpVLla11.(
%UT)V@RFO3oU4:8,kUjXo\Q^ks/\X(FEI=gkli;AI&`D$Yf\IS7<:u/m0$ufr8OIrTMsg+LfoA7l8_pD&",@<qEmbSp#$t&-,0Q]@
%>kn_*A5#cNC<ULNUobKYTgP13ia?<,c03"m;[nbh7W#@a\hmn9_koe]RZ#Z_<</eNGVP/>?;;Gl`rE<d2GnN9Q+sl$lh6^T/Lf1C
%-&iibgIZ>cDhn6.3(>sn0O/Nj3[:/l*Q2Fq-mtB?f`$X3[/2[sd%^`t%9KZJHuibof[<([*hPOe&6_G$(0XA[0,HbDBfPA]l*2-`
%+.4u!S`CcHon)g4%?XUsGclWB#glsn'`M%S.bOkdk.8-#')$)RlQ3JkT7^#k;#o$&PEkHS56*'pW@MpE/N'-:A0X^;a^=37=HEQ/
%fH3/D@%$$WHASl^Z.%gE6Rj3*j*M'_@cc_41N.%=YG/F6Xo[j&hE?e,4oF(pBoIIU=,MO0D=YH7In'n?q-A_L#/m=.7bgNU6.5G^
%m#K_o\pG^t(0Ds^HTd)Q\3R+rd:""`Ej3sj!4\`3MobXIds&@,bd9SU>F`;fVE)\JOklB-gU?PAUt'WVN5%:l(s20k&Bo!WCg5RK
%fCK62=QL[EOj@ZN"Z(mRM%ks5D9)?^hKeAPCd3Y69-DLXC_4na"rJ$0_\"(<bcoD_1a!mbq1JR%OW?\7O5!-HD-/,=<PJ+<,47EA
%I?AdEe8tNq?I]lIg[*BY=1GHb:M9"lB7HL##1deB_i^st[_g%Ij[1V],(;[qPIajJ^7iFcIH_)p(fgRoHY(,^n"]M[*a&,i,u^d"
%p$:.i%(lKF.E*;t&Ek9dl5,p<qf._K1d]o3*0RoYbmol*`Si(2(^6WlinPLXemGd<]5-_diZW!3Z?5R*Gn/0omcp0m-=,*@F_]\"
%=Olffa5WCJTmi9:/gJ5t&F_?%)02Hu]iDP5AtqKe?Dbna',jO>V_n;)na&B;q*;Jf*VW<]RQWrX(Ve.::FZu-9bV`7/Y&PUT&jc>
%Fnn&l>4oQYS(m:BTkE_@'!,,/Bi`:F/:uF5>BBF)"R_W\`XnP?P2n:@,/8,h0"HUR0Mr&3!qn<:.MmlJ[te5\A3+EAV=QeOPPfER
%Zf<G=`L*FW'j1)0hLj?F"Gda\C+(#FlF*ho$1A\5][t3Mbo*]d<BOT4p+(BqdFGAi]%l;r[<O3^4gWU8.Iku3p+qIggafQYB/1UW
%=,&,GS!>T"(ADG"/""h:a*P94.@$DPl6Ekm[]so/42lu6ZNc`lAh_-3*X@NcUA!Yq#d]]!bkA94R';c;nh%GH-QI(@WZ<C=C^:)6
%dm?FKP@c'X`I(\M#.m-8Erh%k[OkHhkM^MLaI1h&c*=IiB.:*em'kGh8Ll]hi[AhfZqRB$?:'<>!R^Im5sSqP)n:\pSYrBd!TA:%
%CWRpQmdrTb]B^Q3Skua1Lp082G@]qmC>BIolU+[eSK_mEA;-JLELF0cXe;"`8`/BU21h,0Q-O1mG5(1!=4u?"VdkV('4d*CW,/k8
%7?pY_kO.^p7YM9qIYKnN0uLt85`+gX%5(2V(t'9LM3?]id:e3Lr&ZQ8nV2H1d.;ErA'<9/B=*nGDln!bec+:fUX!pRL`V2L]ghIO
%$@K4(E=GDL,Z]Ue%WU^0][!Xh9'es]Lq1?6nGu&O,@6UD^QPi]DJe4M;Sd(jXf1r`d+U_tnE!i[K'k/V;t2h&CKeH1JqBG*`VT"%
%cm]m7>W*F@F?7a?fUk_e8ZG>AXL`2T=&St0f\pnkgUnT@j^5p_=oPp7IBJreK.54Ig?q$4c7Xl30bp\h/3;!U5"@UPPCmGK@[G?4
%rosEoiZ.fsdL/FbHT9j*L1h,-LTq0d]/.b4g1-^d$3c2gM!"Hb8.JiBHb0Q[@d2j\=ull4r>H+i:Z"7)SZJN)HT9`hGPHN.F-IlL
%*dfaO.7<,_)>n`brGJdND8.*'1/7:sjabngRm$l4n]=0C)mP9-1.7<D<fd[HlH0,9@s]+uh8<[Sd8Q&2:DO-S@9?KG,8f.R)Q#jh
%af+GfX,teFNn0r+Go5/]j:iT;Vj<YOmW_[;[`D-mB_4+-X8'\B+`_-ZR)EQ*aY9qu@`*cKI$G>Lkabee]F6%R\bR,%5VZ`]rGHBW
%1'sWb?'N"*AE+`!lk8FM6eN'id#/46[[?ChbN=[J5TR=uM;VC<'=96*=Q-IL3LP_q!Wkf5J7,)inUBE*G[@^NF&Ae8kb=YS%?q>s
%_!@#_m-5G;]+bFY%HJG3esRBU,"@9(:j^4aiX;sP+T$c>=3tSg#I6-3iD_3WgK;LD4I6l8)$MVrNY"W4>4!k.Z\V@#.OJ#W<erk9
%8cnZ):nD,JEUO-18GpoL7N3Hn_DnM=b`PFcFZ)XoS/LPO7=Y5qO`6\:p_j\qkI$6%SMOUs%RK/%OL"n_.A%dm7",/l%bBN<3:,b(
%NoLGbW/"m21e#og_:K4P#3"6t,PX,e;tLnL_X?e_8q[d0(iqqL2L?3d0LnFi)@^+S"Skk[_3%s+@Q9JH!_\SZ__m-M.BH%d.t^<j
%q-IH4,MZMM"W3k9</])`9Mtd=3Cs[@63&YKTX:4%;J5tYAI$**(oo?kZ(9e9>^["AqrS_tfTi&:Ytn,mk$'ucP81d#doHTg+bEat
%'VojU,e&E,MV52?I3H3X6*t1+OiT_qaMY-S*)oAr41;j<a+X;MJ9aFC1fu(_2'DeM<f'G4jKO9,&p'7r67>=]qQSbC-^:r(A0BE+
%$USB7_j1:MR%l-4N+A_Tiusp6,Slq4!@tG\4mB+!Fje^b1PkO>/.-!?`hfB_!_]YfS.CTf*Ep1pl'#_n"K!,=bW#Ys8mVY$dnE3@
%O;=#06m#%QCn.&K8KgQ9h@$Wcq->7-ltO[BMnEH@,"6&U[0MQbi%#t?R:?qt<!UhnB,?=Kk_9kW"r8eIlA>b8Vc4B&_UNmSd^70_
%jU*mK]E/?n6Wq!PSkL>"g+=VC+GZA<Fc"`^-P)S!>7oA:1\m+O$,5A0h]VR,m*+W(]Sm+Dkn'-k1f/rNo4>m?,3Ci,o'*T5M9T)6
%Ye#<6`F^?MB4<p*rV53idfHk^c4$,@=UQD;_%N(1nt'laMb]WOffSiOaQ?G0kO7ARJ,UN73;sM7USeiL_sE@1@]YKPou\2EG:BiH
%LJ%d2B(4@Q6OQb77CGY*m&<`Q?su^E8d`qQ.'l64d'[U+rJYq,hh=:>9&mU7IS/!.i:R5_I:2Z\]Ln"LHT4"7,rDFqiq$YDUbe;%
%O()cHc8a_iC94_se[2\"5GX+AIn[ZJG+YLth@p*RcDH';5cJR>3V,KVJNX.C!hub'.+VLq2:@t-3)k'`dcUZP+_W!A1`5MV2c[LI
%,+93cglbe-?;euLCm/#*f4p5>I!s(/KXYs=PrE,=M(qFT)K]Pp.?!%pSV,k?1!"O1au2+`M!rQJ>W5c.<8f$/$5!N:ie3d;.6`Ck
%_pPZs"+]Gl>s.13-(6Lk!HPF2Jkb:k;gKht[1'T:Z+d(paC0@j1;9%E?lo.JBTnk<\'jRq^i%f6Vd6*b2g^bZ/,["J!OiSR4RGuQ
%8&1/*]<q$Oht,U:Q+h_+2*0?eXanf*V>%OqH-Kllmccr/Bk+Kp(*Ul=JBjiR/VRPB#Q-%tZpj8c1>U[:@dpV5%eg`YgNaD0OKP+r
%0nbbu&+hc[S[+K[["bUB6`qWJ%=do4`gd!UQSnn]0@(aO%iG1N0,#OE\+@R+C2N2g%-_oYoSeQ&]Vmsj7%$@7du0m'(Far[]B+:m
%9=b/cU1cq:GX<uH6qt1+8o'*23s^u[G6PKil=0OHS?`0NTj:&cKVT/1(TC1ijo4+ib]R6gWa=Ei,-.j(7HDed\S#Ub`QraB"l;_X
%q]Q&51A$\j?R@&rk4<@TqGYgV/pg6pPMg(9bf`A`LKI!a7$fAR^-75SkG'_jY?n83bF@@u%tiEG'pqq&<qA`"$d+_c.V%BB.qc$;
%U)uFa?9TU15CIM;2^t.9jklR=!MX@a47%W]-rg/j4g%E-3L57FjL_@YZL/o*;@QA\*L$%$!M`Ek4O(3;Ar(VuBp=d`f3-!CdIEiQ
%^P;Q3`bdcnN/JT_MKmUR2_!&?7cOQkK#$7qi&.YjA^M#/*e&SH_`l/h:Jl=3En]mG1L;9?kq>b2#a[$*0>@_gT[C-&VhX8\e3a"1
%;Lcf6pLP&u)>A^Xp$S'CFt)^og2sgI2^sXhI`gC",uCI?kn9$8=ULe#H,mZk>Mm.1rbq:75"f7tE(]#ZL+%*]+&Y(4mIh95;L\.k
%FMZ_$T20fu+s,5,k8-?UYJ5#ohe23>c2J7OWdj).9n:Yc=%E7+Z3O'Rb>`ls86qX59u?:0b\TG,%51?4%5252.BU_>QdgHPF@-95
%2NG7sBH)edS=7<hPkON)9a/QnhClFs%`3m%P*oNF"A$A27`lo!d(5gRjOPQ5Zr33'"h&P!L"u;Ub;JrQX#8(U[/T_A!"AEce6h[M
%h1Z%=\toXMV5U$eG0V.oDD^VYL;H;3EspW8BmL'4QboaI7E$uX$RnPLP4.3C+AkS@(8nY:eoJD1-,Z[R"J)\SVU[5#=rR+&:<4mb
%KG9\:;/q8;B+(/^3rEm'DBk[-M<9_u*)J%_U@E@R$EbAf,r0Kfnq#2n!Ig+p#M2!JX*lh>0FI/9TP"kbRRl,C!B$ebb*#:M>_n7;
%hiN"KJIlVY[imh=N0J0mYr\#ef'5O@((KL&>gVD`&68ao.9rk5Ngah@b)Do[LcPC]Xa(*h2c\_(&4ZBj,q+Gg$sgMd8^j:>pml=\
%4EhEb*q)u-Xf"]BqdM8e-!bVTpb2j5O&m3L4X;&K;mSBDr%H1+B*X`K&;O6OHU:*iemmW^2VtMZ2a,gYb]ahM+XFts>#8VO)l(a8
%@\Vnm%p#W49J9kIg*%Y".DJ[2@!U:C8A(]K!ht"L$m._@;'^JkU89R95]4]gcrj=Gru-\6:>6Hg"qPb'LQuk\.Ljg:bt^eAb(cht
%^'.mV#kG.<_&QM"H"V"!\BlkWN@F?U#kqVR*\$2#5l"fD^'$V*iSK-VHfgn-iYVBgZGMc/9sDl.f/M-p`1RSe*j[X<F-eLVboos@
%H,uik:`(Y`+mN]p*sa_rqH5_)^+h=4eQLRc]a`@/,ndVUlZlC4@C<o@nj&U2&;CWR+RfuFa3Od%JaYOj?9"FV2b"i4.]O+HV.6*m
%8uV>pr3^$o2OA5S3,a0oi6bE-[2M9<7h]'8VjAZWfTDtp_-93+;iR+a89t]MO]KB&(E=^7aGeWrZIAIhV<A'9;Y:"R_PKTCf7amh
%T'r5AN$aXQ,sV$JLUJpR3'j6tadAA%]+/1n8Rsc"96'IXN-%V"'Eu=*C$':QG"7o=U*Or;:ke:^"NYKuFc@jqh?oQS8kS:/5ltU9
%k$3rV*Oi?.7sO7Cc%76$HuB7SEI]R0.\!0Gj,GiNklOuI&P0>7qO<SdJX#_NB,t$'N9F&%[=E-(U<:E5Z@H0R(7%be!O\Qo.aHc$
%cnjuoVS%cbc:ECLe6"@,;8lN0hTdZ4V;(ae*pZ5Y`&j/9Q.Y^X[qCd6@/(ncL`X`_^mRaL5DRn]5R'7c59]]EB<7EYJ_@h,6Bl-\
%>f(,?PZV/-cWJbNBQ_5hh"+/C3D$6umL<F6&.Rn>^"r6@K<;)mpVJh^BP)a!.<YONf'o_"q+)s:HbM:2LWa0@n_SXC3DlsF!XX?!
%%CN!N&47^XG)?iZJ10lRgt"mf1(Z"r[aGM7DAYKkh^"l`g[TfjUsC0_h"'2W!-K]a6,kbc/!ltN,n$pLfUX_YHK5V^Y8=Yp5fb?'
%Z1h:i?;bI5/S$CPVUb>J=YoF"OS)^m1Y-5k43.(BAY@^_!]pj:M]V^=,O>P1*<G,*-=4O%0BH"<f>'shK80H;XMIi&%85Rs(n$C&
%eYX?$Y7Q[7V5=^s.F(AcXt))8e[Th2W#&#j7e+@O>o,3rF5bH1CaAk5ac.0Ic"uedW\gX>C1/@VF.8HY!2<)c'hl#MD?K-T;MJjD
%C]4ACSYKi--K?a>m[^Z#2pMpuA@Lp8g]UN8=,C;qF_YuEMU6*e4%)%4kOR]%+`I`;*Gf@?@&=BN'(:PBO5@2\EH?qnat*R%fX"D=
%<<#F$F^9!*C4R)R.+K6/GF1[pYs;5Q;30MS1(41]j-^0Uj1lL,Xk4-!B)9%doZD=;\9FQ79EoU*YEH5!0Wh2?c0@h&d8YdOh]&Fe
%W]=j">epQ&602:q1`<e/'VqJQTLn@+WaX17&:0:W6)4U6U84"fV)-k<X,C0dmV<r`/!@4QNHdd,X2X^3&O'#pIA&F(6j6C)P^dt%
%=Ys=BZ,^PRgFB4"+>Qq?^9(HgdTciAR@ogoGr=b-97b,H7.D=1*1R,t+culCgfq4;TS(i)`gPD&C;dENpSL;kYHn_5>%+M*q8,`.
%F"kon+gMA[bnB[bq*\Q^9D;2r0Y,&CiGu217=1LtOU8\Y]!T-1bUpFdB"%2g0IL%Hl9#+*6A^"r5\+[JUg;*e`CPL=KnifId2F*Y
%l'/B#:RHF;I9Uo5=5.WC=q?j7)_(lB<&HZE>O=t*Tq_o_UDj[ud&ie3*,WjP'HI4(;+0IHJAL"C1KngM/Prg9*8X%RE27c<>?"E4
%M8LRD7jH&7G\VDd#<I]1\q;(g2,@qL!Zo.A3p)Vu[YZ]`[Ocr0KP@.h-VUC0-+0JMS\<jKXJE4];[G&oU7IOHai[NOCh/b"'d8h3
%[EX6>/;,Z(#f-=Lf\bi]Kb<^`F/#K^"C6aA<P9UQKA"6eWS]PD@)S(ucCX[^clG08dOb-%?RZ/tGuku%b`gKc]+"q#paVKXU!X2'
%goIsY1JSb04UXA:acfk=rCqD7@L;(R+mphF,t/\q&#u`52UtHep"/s-<AW1SE]eGrj)5;bb!Cosl*MnUd!1g$#(;<Mm]iLL$jT=c
%U>g'1))[fBo=?tZQiMmRLL>t!e<N^?QAob*3g]m\U8sN3(W,E>8%>?%SHG'3jefMNG&Mp=MBWf%7GQ?uA^<I5q-$g<TI2;m'P02Y
%W\=ETW-Xm%d']/WlWU-[[?/q\RRm]PYA_9QUSf1RO6n?Ucn"i3/P$.!GScXY?`u#74P20@_4c'eFU4]l=:Q8md?u3cK(hOMDMZ^+
%4M/1VLQEc]VY$iOMA.MSe7%@G&aqJt`eDq21-7);is0YaaNtabbHPr0;KQ#WO^&Y5OLOB)JVdt@d"XCrYuJ\\?<rn;A;TT.dM7aM
%Ni>oqU#m!JN2W<(AGP*MFOqWr/K;*%6+8u[9fm!9=]2mYlZbj;iWmS5rV!L4<h4B6!cVD+MVfW+OdcC)*TcUK[*lW8f3jCCe/Hfj
%V.4t%lUs;'i.0+]kE@uU82Or*&Q6[HhRN`NSkr/^d>f7o$"XGL3O.pSU@'gi>Y*,#K`a,u/S]iJ`3P)>P(R=t#+*5YD+bH@B86S0
%P7PjpA6CPk)QNe&9b73-Y[eH<7XPGs<f4hb5Um-mGZGji;m$F^.*TLu5IUt5pbK_85\&`M#B7P;)kuLFTU69b'<VEHlej$^HGu6V
%q5k#XFJi#=9/%k==t5gZAFc^>YIe7`8&J"g0p>`mdI=#n%oH].Xe8YdU4[SN>o.)nIdjeN:OuYFGmc3RKq]I<9t[s1-Cc^p5D*0f
%W<!n`E\eh)Io\b!25aC$%,;Oc*;[sjV]ruFNE%,gP2VaF*HV#,['jk[3pbopSJ5WM1g`*J^h\iHnu>hp-;@3ar*iY<dYAAlaG1&J
%7>[h)$on-\H[FV(ro_5`G)q[5*7V(3FCd"ZVql0K/#F$0`WNh,LbKA)pP,M-fZ7uX[1lP=i5-fH)UA!!OW!A&HbraUjre[L!lV]e
%nNlH35ceJIKrmb<4@\Z4.b.$u*c[qo8g4aD2IA)I2[@3%33U.4OQ)[T=_$f^N!YWMmSlZYU%UBl/rFtFPIh43!iaod6M2A=)D>p,
%%>;loX&F+"3]hG!oa4%18$]FlMr2+"LtCd&I-2O;PXpL1<ns1`^4CPte/=u+i`'fUU3i(paF+EkF,T<e_=*,!7uiK-L4-*&=0m=H
%P-)aJ%P_,Z.<t\bcaPr$FG/FW\WL6tHeGmEAN!rXn1&C%-3#1U&`QnZqX[uR@.%L']gOia\>\=j'oV50,<kQUP^MC&Y/Z$Ys,(68
%]o<n$E]:8e;`PLidHq?"2+i>*R]Igak,heA3*b;h$NS<0Qe6OjgELM-8ol-YN.RLtH>0.c'?]1&_/h)hQ;_t,Y?00mdQV7IcZrIM
%Is6`+S1J3UK'A7t9h&"E9TgT;TEIp*E7VOAb>O%9ldib,IuTCpG`edZ$IN0+hDi]H7R]U9]!/+KQUM*]U8l4/+`a`l)FX^br.aAm
%XB[uVDB;25>gSC[,j/8Kn:5,3S;F6>(-m0'rdf6j851c\8s'g"W%r$Ed5H3#go;,'q]3.XMNV,p^qq2*SDhY7On.A!cO4fXW!2;D
%F9i0#C:4I[>O1@(.U-(i-f=Q3-JefdC$kb#R+X)^.P(8:AH:CKAb"An2T2s[(%5(i_F^nWkm:o+(6t`^'Y0Y4hKA/I\)umka_GM7
%O!qm(^$I@CMrMF8dYK&AA*f-G1::1\cKu>=*V\-MpI36X(1ARQ;NP9_<24mG?l6))[?A"*!HBYS@_!-]$fLQt.%Hd(a.?e$aP(jg
%2T+C&f2'JC378&$HVU7CqY!nm.J$mJ$[@kik;:#HjDkYc_l].[EL#K>:q@1S>fI7^'p)j\,T^Q?jfmXX/ADIe3NET9(etC#4Zo6E
%`5'm,)ul:=:Hnb%]+Aujf09lg"6*lIC)*YI6Dtd:,[DpP(`=Xc&8dP9.kEP'1?CP0TCPo/'i"[0nqA4O$<^e&d>X&E$R*:COlUtC
%D6j$LKAh_l&'%N%9*:0C+:";s@45FbHh;8aZLpI7gS7Gh(!:0sCu)eQ$[sgQ_W'nn8n6*1bBOF.b:u?LO"o7cbR>>KY9i4!MdM+#
%7r9l51CW,Hiri`!]46EXV2%#h_$78HDsT14e8Fng\(gQWA?ThsIO$pse!mcbo5`'#M*$ct$IZFHKMlNa+e26E<5"%p.oF][8).;_
%*[cu_lbY1g+'bc3bp)9uc`4rfYb7a^eor)`:FMLZU?U=o#+p\`*&3p'3$?#;X3]0R\X-$gXi#<!o?pU&:*+>mmKnnV_m?3laqF17
%pte3HH4!`0cmmr-gpCIh>:L46d1g!()\to^[W<O%L+R?O&"cQUQuH9^aI>ZYNb\tg)SV>n5AdT`9\ZBLBgQlqp-/sK3i0'-J-`AJ
%R$t[\.3k!"EUJ#j6K9D-L6]DCBd$EN*o.im"Bf,:R]N:EGW?5CV-[4D/f`aZ!#4Q1+NcNM;4,H;%T,36IIrHI*m`cIIGIUeT=>i_
%MZBA=%>rc\@@s:]8D';t3@ou,(mm0\3Mip[fV0k`Q.L%I4-R8fW>)64K9Q8hdf%t37QKoP6j1s+G:m?KJZ/#+dFLr'*djq?RJlk+
%Z@MPtT\u]0>SMo0C&+3'*UmPKB\@98ZUk?'<:&H"K?[#N.B5ImIr36>X2l$qWhT(ljpkRNoIB*9^jo`,0uE%UW.MR%d,WN#-gq63
%0jUSL"BM)PHYsh.5NKMuRKq,qmp#n/FKCDn+ri_q&L6>-G2-8!KWGBaXNSSYFq(\a+DT;O[^[B!Yh`@PBVUtVQCG;03c>EfATbH'
%C<.SW8;<='!9c[:4bHKY=9TPe(3?C]LU_aH&W?D.-rXcSWt$'f)>)^oF3`nj3q7AX:,nKE!s;(A7cLk8S0A>s:RI/'P2!j7/Ml1S
%MOnhVU17&$h^\A_'N3t=ARYG"i)HARjPk,OKd"Do.J.D[a9&FIBoUaM!C)HN3psi0A;#c\f"aUI:;O`[Q0uU,fL+WRh;<AZ5Z;,r
%^20b4*nbHn$IQ-1Y3!?Q9IK.Vh'?\j@PT3!rLl<BU(l61NJSC=c2.?i0ig]q>'mcJ:,1ki7@a*koU,-F,&*ZC+om`_ZiW9'.,3Jm
%YFV)P+[oO%O%)8A%NrMZ;0msd[be/:h[b<pCpXYse"!!'QpaF%1c]Qr0_h%k.oC#P>K`.pausF"HfOu(<Z=eR785\F9'KU$`>b$V
%le>pr'?:HYMA`Cs_3maXQY6rcnnp2QakHgLF_H['N1T$_kQ1B-/b[i'gL=!jU20@4,k=[:3:7n7QkIWuNB(K+ND$c:&@9H>FcjU0
%PJOP8&l&j'@'6[S.HV37[0_-%apX+='VLn-\8;iZCl)R%%#6>m$(lfXFqjara6liBcHYd%OW9K^(e(X`aJdB(VsR:'J>P$DV8V!Y
%CU(OpffaWp\MD-aUS4a.@&4ta8LH]XJ?*&Z!T+;@U8I?HIZon<k\l$"fHRNm5d%Ib_DQ'/Aiu7lD:qWsUT44mFDlKAP+!=l260R5
%QQg0/2lE_W$#%oR?1WmZ'\b8ren&S>ml'QikM!;)\+.5c1SMqkh4&!mkjZEVY7rDsMH?<>lm[aGndE1>e6s1"eS[(jDBUKf56d(q
%1@h5YLR>?BA`eR^WE2B+G)H8R)&9VM58\LY.)moK,-o9BfTNiQ!]&:a$V+[cF2@c/?!C7.<s><7-`*BL>-Mms1CpSaOI5_S5?;id
%>FSAIS[uD8W!XADf]$+63^n,/XX2#A4a#^hdbLul)PHXETZ1CV*0]]Afdu5Na;`B(!<h44b(NUuMEF,f?Z,!.@;:?T@>3rrTe4t;
%,%(a(6bX7hG^;O3pm]*P[?4XjaCML-l2Qcpa<sWf0r@K2G,'R8PKqhVq]pY8BN`J(!6$1EPN9'09(oo>@;@MCg=H5-doYXYIdEA=
%#)!=5%PYo1"rCQZ`)<>2V7E1<esZ]6'24\l',1=7p)=*_M=KS*k-Z4eLO3q5ME9>!lb9MaE\nH\8?:*%(U5n_Ua0="@:aL;`ilf#
%r"YrF_F;/F\2CbR"!/a+I?akII!ATW9f/+CoXupB@^\YLRk_m=Go$OR!Y@n-R>39\'ABsU</V>2rM.)9NkdNTdEeNOo!/OZg_uM7
%"5B6,[noAL9F/i(*&2fs9]Ib[p@K,DL*4POhE/1g[]g=Xj0e,5/OJGq;\t)t>#N#[69(YeF;d8':)2AS`W;t$[#>\>ijT,ug<:?b
%h&/"&q?45XF7u/u%lg/jO:DXd*UX^c!7"DuAr1rOC.\e6Q!S=H:KYR1'9t9Lo:qWb2i\Mp*XAR&Y#5BEB)"h#@Hnb?m"\aHp;Q;#
%#\W;"5TFA33\m??P0U)*:5V%V`c+b<%gpanN@Wmhi9Oi+ng$rBIu`G3hn+4o7!Y+^I;bdE-^G^Fjs=]Qa-llr0(d(;K;b)tW>(H\
%g'lil!<S:SltIY`nK=Juo<JPd]f"f,&6\^!%(o]0<nJ--E#ek)Z=kkZDFio-"(I<3[SI"L3'cDqW_>mg$ZE;.&HnDDm&%G@H@]I5
%B$`qJO(s[`E-AM]J-;q(14?VFRPAjHX]>mr)$7f#RjH8g_ALBr3I8ag*.`4fJ.b.IQ,[<.7W#;ra[XOX'Sm=M\=GMFb]1NF9[1.r
%!QmIAS#p0C\IFaMdpN2_9N9Iq%9?TI`IrsOMFe'<.;dI^T[Be`Qm.KPQEr]jOkS>6nT10>#LWd^V?LR:P`Kb"Y<_JdVHe@[f&^^?
%Q@j@6H@a2*jpN[LYsCRf)5JKpkXB4Q@;d=S2;!8touJ!YLm#7p/Oq2@n7B,$HurC4+^R38Zjo/s`EG1i#3_%PE.qmSd>)2+7#)?h
%-':bBSeVuC_G7H;q@7=-<[SZIV0,76E*O)YWjP53#%EYD0A!9T8;UMDF>D61$Rsde?"i'QRk_TYc@WKHL*#HpM[r[am+L2qW%8bH
%\Q^pZY>W/Vd]BoY'kNrY4L59.;^Au2Xde]s?btPIEuRPeS`qJ3UW`^W=LKil<:jf8]5\TkmM$r>)i-*n7ri^K-I.QaQ!.F4ft32;
%8Z*54W$S.U2E=<*IA]U@nRI^A6;g9iT<ph)iD`#m1>/EB2Q%r^@sCM/7EB)>(5U9:8dV4IJiF<1]l2LB^=,45'H@4k+f6`1$LT/4
%iL(U^Fg>W(RBIp=^2O-7an1\3KNF<5\%LVPc#gq93$k%6a<rUF4!E&nN%ZMAV0!V8Q.OUA]d1MeqRSKWqC8;Cc"5fXC-6^U_r9^B
%jNO'<c<(dW0hEhX6?ghCi'`mP%o/@+5ZA3A7's#pF]f=Cp/GDP[XL\;&?t0".j]]g,t[/e;=(-ac=)dZ:)b`er30]qd_2Z]QZog(
%$NF4.e('``V0@ub`WXD](+HsR5J^l-C^L3of]"`'A^=AI<SAkdjDml//PtdVF"I_5LXZS[a,tjM]U,j,VrU&4IQq.<'R[XMWJIU(
%`E6)L@RaX,2-#k^KADPmc9;=@e*:(&T%t6R)#6W)Z,XnEYaEsDC4tf-?gG@+Q(*tK+"AEe/K"-&BWBp-EkLW5HcMtZ:54plXUBK4
%i9g%H.d2AYSZ9.Z(]maFhG2h7<qepIBS7==WI(A*H/JRJC^qLImZO2$l"]gn&(,Qgs%?=33c"S=C/,3*;Z+N%7HSc@*1*hS7A#ic
%%UbD(%^e+%MY1`mrH(pSoF^cc,eNc`;a=%MCYP^?:f`imq,tm+"bS;hT;V8$l<F=gdU3>$#G`O+DGf(fm2Y<A4Y,qHSkZiu_mT=,
%Ku:B(bJjLn7G\ORA<;cC8GbjY0B?ceF\kDOZK->(-^g]%&>lH@cfttig1u^aWfa%.Zo$D5N/gY34@%F<*9HHa),;h.PdK2sA1bJT
%E!QL\:oM[<S+gXcS-Z.ak9\Te\to^n[;q)n@C[6A<(0H;?Q1;//\/eeLH;IJ!B$Sh=%gb&T9S04$XuHpPa`_9[.\M5$#o0EX/3'\
%Sa>iXFrN!t+lY9BlNp=oXjhQ:K;lXHdoP2M&$_j11G,UB#"b5+2E$u?r?2QQUnOrJ#!=JZ+f*(9qYQf!1-DpO&2X@q"jmZ8"nDst
%&r[:+MU.[jiY?V2dl$*$7?cd@U3'G]YGeAFH(9_Bh+L:si9+%@0$22Q,R`tQjM5$H;<@n%*,V#[+lS+^]#+/IN)#uU5b)WAo($ao
%h*b1`)F(NZ>c=\aI>Z;h^R!T1+4!g<<g*m#RsP:RpR!G7D`&F5Y)'llG/6qr-GREc/7I;;D"N._;6/H32M>`3F$e+GA"j4c`M!m.
%lf[Vrl^HjUk42Y(\E=Df_&i,f/FC>VFbRcE-L2!7[ttU'-Ft&p>e@/'aXAHAQC/"DHTk41[$u8i!,6)28qb9+/'9r,RlV7<NI+U6
%Q@k91B!"t\ds#Fip54b+jd+^5;MeGhM#N`=8@:n>V_:0=8egCOo[DS3OWF%uU+^9H;t5UD;[Gn!HRX?)7_&HI*tFpH1@23N6RG3r
%(B</\<MB0$:Y3@9B?o3q(IaNfK_NdSZK=b<&l2m]W(NfU)03hF70Pit!*QcQ-._("5gh7lX@Le7i>K9))7*))16j8E*f3<ngFWF$
%fM]_W14uX$pT'6f/Vcqe%+(68;4*n=[j.o,D;(a[]F<<p%\gpFA"HW4A9_''+#T9R]-N/S)V"prKqV$AIp0K@WF-Ph.aE"KdMuna
%#Xu\U)%d1rT;/m<U4D>Qj;d9Y_r2FIh[c'ZYP:+59-CiL7sm`GkH1l!CAt,Gm1_qN@qX3&nHg__d3qnQMc<eO^(ucdQs0\Go<2eB
%1C3l:8EX+Hm?'t&&?HXP-X4Gjoa+_heEhA`qbY*lcgl?0'G_7WR+W6H5$#e-..2;ElHJp"<)2k<hJ.s&Bk;FuIPC$'3o:$Z&FC4,
%F"m_Y'76A`,ll?7>lipj8fTfp42RfOmlJ)SV<XRU$<E-ML@37qcQfJ++^q&*[eG.98mECNRMA1e;=P8])Si('2HqhLTrt-!XYh<^
%]ljXE;j>n_.#U'l9744l8eE9hh=nAFo(iX'QW7O-Wp4Vtg86L&9&l"F8"%RPGRRfp^!`%nZiR*E:/8hYdEH>-nEPtlG)t/J/Ttoh
%(_f>t6Zr#]"c[/'R]W.jB,I@LEGOgn\#*JS@8hMb*)a_qo-u,(=Mj7V6kPb)Rl(Z:6rqk(TtG\#^JJ.=e?nm@d:N!F@r/1oo<]4H
%g#PYuA4-W\jJ>U6FTDNm\P3CA[Xu5<=6I2a]7@3%cn"!2,-"dIpN><,<q>mD%868@<UR?&,bL>%G`NiWO0.]V`n=&QN:PHqG'l-K
%Xs?]3&bTD3`ZI59'q#a/XeSDWYihkQ*G0EU2lkrq.9;8[B9#l65mJrSRgR!d$UA1-"fr;3B^'p2P*JX\Gl#"bUS<33VgEL>+Y%-5
%8uQSq2QP801=D"8Rn=$JZ@e1qQ"3XeY=;;41N%=/^k7E-Q/(4F#aD7sIT[-Ki4pq=OdP<p5\$^(d11Wo^=*BP(r@5#&M'mcNl'pI
%]^g"ZYF@EG.N`cTLoDXa)>IZ!N2cr<$PiphZQ5so!]RUA.<j)/P-8:QMk7l^UNDb.o';]u8a8nVC"b&c:I;k&c*]8I0@?1PjY(6+
%'FJ;?/BM6Hhd.3&RrgMOROhY5]qAjW7en\aGTiNlCct>"!KiTM9^9t\pdMUXMk2JQ^::p;.r-M$[3U\$N^P4N'\j`S.G*?PI;NfK
%.R#>?g(N>!>E&/RRR@*M(FpU?h9C3i82b7t9^)ak7.m1N^u%T!69,:6Q\?qHGD(Sa>OMt&Wg77IDd$.':SS/7o[m;Hhtpr@DC<@0
%+jHt$kJ;j,eL?<\XtUrO\d<+A*-<O5*W/HZJViD&X&Tr"*qQ)\7S%Ze.%!d$KP-8[e\[9!Od8T*3%VM`ia?M=Qiu-ZI4j^5cX:$:
%O4)YmI-kA57<#?XfL0]3EeMZTNC19'a4e+C'KcmDaDQe`EC8FL2e)\.W\p)2)TEa7L;f/i!C]@=>mb%qAK$G*U=n#r:@7%!+`S@P
%QkqAo\j7o@og`sh,ip:[#eKMtGlce`h%9j%;"ctp<65b,:<?`g>.gH;5uX\&>a7WL$<6##lLL"8@Vne=d+SN'B8pb49/siFN#fjR
%^V!$K%EQRG]@[`FO]08s%/WtF(dDYl+Sc>F9PRGprfU<%8O0[Q&T8Q;0,J`oGo0h>Tc;+-Kni_Qn$7lJJOQm,[HlhH760_gkK=R5
%m6g_+UrE*h1/JSgg/W6IE0uR5Zc^>`Id?XnMp!9+St*q-.k.ZAfZM]=@6-AOojm7oQlYI'MoK_8'V*/9h'1g(0I)]&L(1eSn74C"
%_\&X6':5+U.Stku]V7=SK2Xn)f?\S`.c0Im8#-IG$)/G,AO@\]ej0F8]Hp_Z6'3+/.8f+e?c#C,L:i5`qe*6-*AQ=a`UVIIc7N*@
%eC`-kS;2)r+JrW'o.[46=)"u#ED'$]!6V1EAQCYb_M7Is!-GEm*=P.A06W+n>s9&Mq'ELcnn#b$^*lM2b=_d<LWAgQX':H\nW!Bl
%JlHIE-)8QU[*(bR>r1.6;`[/A.OtuU=2,s??`[um;PPe^Xs`a/El<p]NM<)uV78ZDm]<$q<?cAP$QL3$e#X$/WYeaPE'fbd.jlsD
%B&F`2+/6dV;be$li=i?DC_XUP5`pH6*i:&r;d4:B=r1L7G+!m-`=U/75QQ>kkIj<L9TYFIL5frWmj2pV<V4Q1jq1TD"lWJ=9>'gl
%-aUQoPqdn3)q.fFr(qunm.&]>C8"#UK)UXRX\WB#b'9*]gB!.5W?@YsS;pQ<^i`Ld6N2R>X>X9#@TQ)X)YU;uL^KG@fgbl%kq`%H
%""2qB]-F=m"KTG#@LRqhUud\]j07H4%%Cq''cf`L)qI/f`8OkKnsAs=;qGl/^k53F&k]f.%8f-DGn=2=;mK6M"(3o0nTrEYm[ZAl
%Br.Io;rcl2pFDZN,-Yjo/*g(V!<Kc&7e'g-;*P,.8S^N6ko^UW7J9W9"3)!UW*<KGRnWs3;R5e/W;X>P_;6eVEZGC@7X[8&eU+N#
%1fm2,PbQ0u:"Q;DrR^]Rg8O,W7Z"U>1lkR#;Nqk,Vo[OT:WX`fA\4ULBl@a^_C;32L@Y5P4Q!/%keOBHSb6/l!jQQSUX-TGh%p!;
%(Ci/7?UYer/uaQE3u4r5!s76ZFnr[?l@X^?#8Z?O#kq`na<NR%7*"*.BbS"Y.@A8\5uE7?SuV<LF$VRY8D:m_?BO+d6_G5C[t'=i
%`SAk85[d!gNMpB3q@V@4'ah:"K?Lckb45(k0*TguE<QV(p?>1m(4uu`ZX!'=(')q@'T(O'Df'(j7sJq:)/YoJoI*FCRA61ZO^3up
%0%BT6J\U^pCb"[!rL(95r^C'6+t"h+LpD!'El!M\o_Zq2ddHH+Q1^sMV/unAIeKWOI@m\o`h+aJ/oLRfCV6;6<dA3UHQc7f3ppiD
%f*0No*)J6t"lKDfBlOc@PkU'A"_ICs-*/Z</0RV9mWC<0f&HkoKAq(EHD()(8.RrcZsCc!Q>f&f"j_o;b&URdWUiGV-`QHU.5_I9
%g$FW]VJqY:&2Bt+0`MrWN\(lp1+`C/bPAh0.#-_TX?<Xo'-Wr9M=^Yd[IpjS\BfJd`n\<,G;,bmOj:8hV.,aPEjep=)&s^Vgk(3U
%mWuTa>uC,hPuib*&`bUQn4V.OXbDcfV+0Qpb/$JH5\,2Cs/%S$J;d^)_+8U=Rqqi04XO&(#A0gq.;6O&N9(:1/sd2fi!,)8\?XJn
%As4pQ?%@YnH^ToD,cWIqW+qg[1!BtAU5MNF;Bpo5!In4@6pn);:dn:I\L6FS,%:Ur$.rRp1q"L_=WbP_]@O[tK,#KG;oU'#H=tdd
%(0=h)i,DOM9*@^jk9A9R43GkVb=tih(.H]-OeS%E9\a*=hJp'egg')]1NK'epnZFZ'Y3\[e@pl_EM!oc;#6d/][K-;e*g.NnY@;r
%h=F#j9c%-LC_YD3l%RRnb*UL_A48.cD`4YZkfI204)Co<-'Whl/?NlCIH5VFn)WH!89P</DZkDdNG8eU=Ud14/]9q\qWu@&S?o"=
%<$.tsB8bPrX9MNB0)%=W`ZhGgFB"'ZfJKhHmlY!s_m?q@9*4AD_[?6[2V@h$gU=au])@9T/L,7T0iEsNJ]a:G6VTrga'Ia>"@n5?
%Dh(!iYRl\7`hJ6`JI+<oiF"\5XoZZUmm>N0+P_'PW-q]/V<Tfnn?8e6#lqW:oc>5^=OF'W1R+L;o@4/YX'37HTQPDtjs99X9TQRo
%B4HW$Y[qn2:fSRs%Ug:'*Z;e[^*DtH1ZMRESX[7eCaU_GDaX_URmi*@G2;E3T"Mc7F`hq?'>Y]5cG'4'jEcGLK^Zk&+JAj6E_gr@
%7MXn!BB<D]8:?nX%[`s>!h'SqCF&HlGDRY+)[719b#o!^)\StY,OdFfirHl>76[I(6Hhh1jq\WBeQj-Bg7i&:9cY?3;ZIJ/E2@N=
%G3NW1'L0&6$)r"IXB7Sd(r]2ne4`G36lZ>Dc0cK6V"T=k&2hD#N#f\E1/=_eFJePmWk07daQnBgkmZLu3]qa><%_?VLIsI!XO-Ri
%G,?0t(.#=GO@2jIVH5s/!T.((4I5Idf/H\2"*cpchciB+0M'qA8n3N!Rm.^\D2o!,$C4qs:/PVc$'5$+j]l$R4@k*<*F97#''t7;
%9Jat5+[nJM^8?6>A*4%l2BcLeRs>r["1BICWpWL?Qdj^gel(soai>b(o%$Cg4)po0b&pJorP^pn^bXVc(Br2J^UMs'!3W'&nnm"t
%,u%8bbBc%iI9)WnFdsP])Sao3pGs]eNJ9RFIhrEc0?J?@7oV/TdYh^g%GhoVK8+:kAD90137R2O,phAoS\5R[,U0+\Gk!V5#PA`%
%Eq;Z]N/+8Q5ls@o+l(@Xa;!id\D!KIR(<VDI[p.u'I6cqgs9YV\4Cn;24t>MF%S/)gY.H!MkrcY#>AB#FGA3Z'OqRf,=Q?n#n]dE
%r`^34dOaeGFaMS7$?laeeIN6-@s;@94K5,]G\9`@E0`**UAG0gMtT_)ruoNW>d:Q]EFB[XKMR_mPSr`NBkn^K#5j=Pg^RgH8Dm;i
%di=IlA.;:JFhIr?6LZ.uVIXW4mLMn,TL.e/HuBgf)er9?DKRW*9utki]_EF+P/MM>Z!^=3Q3($B.E20WgCgUtd7e2]hI_"nL-Ut]
%<)%@Hmc*S\7D3\R@>uST]h(;rrhH>>Ts9#Y;kF%KmZ)G*0Ofq)>kpG9-*9Yn*SCUPL1&1!=MRSA:kKge&K_CTP$2*q[#o+gKXWk3
%Ba*tTGLX'2*MV3F(N+)&R5H=:2/`&(ru@C;bh/a\F9_i5^D>YDC*7OoBFiLN<`o_`%B?:FqYt\lB'QB-'@Yh#FhLiE,*oMtBZ)!Z
%riZ`IH7pVHnh5Dd)Zc,`D`!!4>s(O2KD92_a#(e/D)l!U*C,#XqXNMPEPhDid%Nn6c5(W0@UIPYPmS!*D'Bs8Zi5*<+f#gqN]B$=
%&W4GU-)YL"^GS8uLNHiQdFL?^MKIFU7:@!*?TWJRoEK-qj8r1WNrr)2H"SW.Of"`Vd?qatf\k<=WHi"r4Cht"APLpbT`Rs>,NJ1*
%0I&-g26XA97*@(iZ2!_P$8@e`Q$W;(I;7-d-hZ)d^&O_4AKED#&/GNHrgdW='C.c&.[+kDU=8$u>7(!d>fIdQ-U:l4-YeFMI:1XP
%kaO3a'3(LP!)[A_L]!=G0nZ9q0^SqJ`!6)QPs11o'qNLfE;p@M2jE?U4t_-5QF'%6%$H8I!Tu`In<XQijFa#9)O9H7C]022'Uos-
%S.#3P^MImYpRmn2G3H;..B6"5./T`V$;ta/#[e2Mf*O_Nj+OOo3c1rHYM1k_1&N:cZ4NnhREJSfk02XjnT?Oskn"%BQ<R7/'#SX/
%kp.7h*JldTViuo6GSMLFm-i6\eOkjgC'I``INe!.a`O1Y@8\fZ?K+E7S96C=V;);k#GfI7h<k>@9@8m-CD]ZbNYMd)3<HK7lFal:
%Yt&+_ff!p)H:eBN;G4Ma.X1=3(+s#He\^nu$-ElM<YJA`gOFn@23>tW0$-s`1Nhm(:>D`)Tq/!$'s+<kmB]L2>"%IH.9>rHK9oH_
%DeUk5ePqdC=;q%AWD/>JFi:\XpQ2t=0Cm%XRF(V8;GEg0+N^e$AIMOn/u1)SbD!Cq'W!dn2Yb]D8g85mTe_iBmFZ^p[isjiB94Ln
%Rh1I6U8`%5plSk.>K9l[ZDi?TRu"5/$c.A:7;/W*c51YbFWN-p*3D6.qZd,%qVGr<S-0L`U=H"S[d:H_(O(n.iIk/M7;&I=`%I_)
%AhI;r!Nfe&AOUFf##kJ*Bk`lHkfNgF+!MEs:c)BUreLYSVJD-)*[2N#F@XeVen3<9'R(V!M[F2)BJ+UMR[TB=PU/;+iD`\5gVD]U
%l<$H0l<8A!NZe6f)V`]/,7]4i/=heQS^DbPk@D(1@Ut'U__p,`W699=]p]igJ\5Pejr$J8A<aFE`"iNnCPNc^>bsnA#6W$5TC@8$
%+5suFO!/#=1g#+oQ*SAZN&ig$$On(Fh$C\VCD_1Anh24o:=iAI0B+1eR!"OK+bQY.3#d/Ya$1jBlmS@Ji5t:iU".+)oi';DK-#?t
%I$[45K,\!o']Gm&dkShu7XB!-"'4Bl,5*hJ7+^1!JY!ImG,:hIRT[P?iN\<)\F)&L'?SVB!#q2"1N*NNVP:YRfeu#17nC+WciAP8
%X;rm):2$RF[lMjS[uHf1dn#T.I::kCM%:8pG=Qs]c0"1!'/iZ1.aG;0efcjPq\#O+Q/7+$?4@0jj`+Td0a^/<Moi4Uk(/g>h#cFr
%87Z^!WarG!r90J6QQImMdo&\`)DhX$/h3Y!_<;2E/.kfq;,N%3Q8pPtGQXT\Z`!N@N%%Y(<66Z<E^MQYY;AglkIc=&h!k0!KFhXq
%o%NVaiVK)J0MF3L#Do9jX1?V/CIB+kD6@K^SJEf>OKi8''8pg?k>d'@6ukU4.g3oDE\U8A@u($&10.DOYi:D&&h66MQ@ZaXlCak>
%KKo3(].'S$#i/eO$/#r9B7)B2*^QM;6;o6>.&3dP>mLlsg?S0q"d<ih$UYrEU0t,aNnE#S,YI#tPte/bYEP',Ypkd]"L<I%cjNAn
%:PVZtgtWhD3,O7k"LW%9=1Zf8)?*60kgnVcXslkO@-q[mgq8`n.Z>M=C$WRh3sV6XC$5:Knhf):)(9_haa3+.OfRL]dEm,S]9kQX
%;_jmL$2J_4LYn[]K.+22rnUtd/au]YD&"=UT6*2m%n9'+[s*Sj!JE\b@Ec>n3nYcSUrNp$rPt-Fl(ZHFA/`CN!$-/>EG9BeEA,[u
%DOZC5+l#b1X4C[5!'Nk#;cu!01>?s@YrM%'acqB3?rc6qITnd'36F!U&7i''O%E6amW6A*A8fjTYD%C/>>UTm]lmMWb5I)lP.`NC
%s44JJ.[5W7=H\^,RU5Vl$GieuX^,t2,KO@s:,PY,^`8,>ZgHn'R2N[=iCp^k:,Tf(B&.;-Y7c[NfbSb"O=:^@K;dsCcFh+^eVQ^m
%&KQBg"<j!JHqD+qP"rd2bH9IC,gpcH<G&'/F`TA^D9W[^%jh58$s=,'QBf6nL13]kPMa]-0GK/Cl;42Q9$0BV4^rmue?SpLkeG^t
%qdmL(C+r.97Ef1sR=AS/Rk$-g+",*h"Fj@AXXc&,$dIV\69ihQ4cYlV':pQj$-f\<Ejl?\5TOi%E,aASR58mhe7L?e<onaH<[?%(
%;O!nXST`>3dGoR<$m`S]=iD.pa[:5Il&c9^lCXe5:T#JO54>T+T7`2Z$W(*4StU-b'1Bg5Z9Dk29<ucYKp4)>8b_):Lt$,MjW317
%8N?[l;)R;rT^iYQJ1.U/8K8k)?sop$KD&JPIDnS"NhVfTrt5W$ki?&mBP_m0-'`t>6Y!M0_\0$EI_(K?,O"/unZ<n2cqg9#ENHF-
%"s*Bu/2%[4Pb^;86M&!I5ASV\ZMLN#>Sb&TqIht%F"@E<.isrj_6GV#)\\.+3Cqj"AX%T.ma6qLB4l!("&4A+#_ktbO]o4Qa<XRF
%:R:h*9i+&952VfG.h]eil97r;Wd]+n+FOZrK;8(B,\;7r@4Rcm31(#kkf0Zoi&h4?<[?0m!r.>7gZ;Dsmd>K/,o?N.M,mH5Z<9T8
%=BbO`<Fr]TP`!t&FH9,"j#QllU)]O'D17U0bmqhW4!Q4#=m/A&/DL.FZ<6)CKseRG5$7L"c<RXc,<fRp`Um^AZQYCSYdrP\MoEPr
%*B1@7V\4rgV`K!8lSfH^-=)?&i`tmcPnt,2P,o8H?ja7p1pC14'=+:lCK"`lX6@[BI_1^6j8?Gjj,I\qC,jYRH_$cijE:'(PHGQC
%E\k2);(=GNJpABq)0t>8V`l\1YL&a6I@\/81>nM^k_bVng-0FUAB/*\n:cR>V6;c%JZ<2O&dVgAf6/+sApT%*Tm=ap$o0jJh<mTT
%rl`4CZaqQ.cD+:U7GOk0:/4"]BM3A[&u7G7Oo!GcQ#8*"ZX+):D.31GfCnDQ'%k.iE3lO/'GL_]Wo8BY:q"HjG;g2:V=[=n<Pfe.
%'Et@:kb9!chBJ]Nc/),TA!]8F2t>tpk_s]@X%(/5;q;qahqKUKe5*iPAnSDbBYuSlo=(AoVSWc_fqOM8@FCN=;F`s7(U(?V^B+Fd
%jY8jR_AIjo8QRDG*D1M8c-?Y'T9*RPKS5i,>fiCX6u(5hOed@&r7D:u^jGIW0l2"5o\DIH\>dspZ.a*m?Z#!9.jBcB+;N30\m_>g
%W5!'e3.7m[`q0U4`1TE0cH)b]OoX:hnW,JiP9PLc7%8oZ.,nWAQEJ<\.1duQMt:h/<l`$[YSBo7HdE$Q1CXnG2H>VAU$+g'l.!uu
%dql(>WPYGjV.K/;6t"$VWL\rQ<3t_[%n-,n81-KI65!*!$j5p^:nc'O@m390C4`BP>dpDn[\N2,o7gXn)=h6pe1[T9UW0u)Kaj>6
%\"G"<dtEZaEunsFOHJ;n]'9o$UUV/7iHAlB\n&J,Bu!4+1F0MO"Mr_5SUgfa<Ec%5RSJhMiOR&0Fi$5qNtD%8/HY(5'NcnP2#8ip
%%CN<oTb>hKH#6-(L2mbE*G;P%Ac'!&aB,+o,GKm-3/(]8$X$m?9\^LpY\LACHB4S"M[QEi">E!/Z26<-6N<,)M?!7nhuES->XU[l
%lu*3%5,L@=L%K$D#`=ds!s*/643M^KoIse6BG@$aALOGUP5^]1["g=!./e004.BSG;cgd<]1?@$!.oRn\J7=f/ltpBj8C"Mj_XuG
%`CY6`I9eJt6XHMQgT8S"qmBcqGCJ=aCgMSXC?.S6mfRb^AX$*\pORrR&[u^O&&!J'ODf(Q]jC@]of$0+DT0r(b>n)4f6;TOh!3#K
%%pug?FLb3Y\VMkVF-4IX?[hG@\D,YLi)W2P+'S,]csW`pr&JGL!joGoc'Jf$BJ7bUcsG.AcsAq\%U-DJobt3h4'i,n28u;m\$sP7
%I`P0(I@GEUC;9K.kK].#NK"1F:,gUJ)mftPHe4<EX$\$&bO=#2\PQ):Lb>lVOiI-#IP/A2o%_E]?/G*,BGDGt^>6ITfD-:;dIh)%
%jeMe*kHCGKFrQhd174ml/`2<l4M.SB%N,h5o5,u"^0IUl?UU6i]L^ApH2ZOodHP]%CWKiNGTAPmZJ,2CQ-4l1a@gUqZh".&p*Qo6
%/PD8Z^7`2-0"Zg^MKr=(F.4Zd"Bm\i-+(/pLi.dX]oJM+7/.Yj?$`/geGi^l0*XWqG^,Uf]2>'A:3BcS0A2`>'%:pqLX6Z?d;LfU
%h+Uu>b"cR%Pr"gKaNNqCCH/6#2.kI?':J0['3X=1r,$#CjpG92#P+F"DTp\t;r&ML9/7j"3,rk_*WkO0.B,7g7D9Pm%KZ34(KB]1
%Entj$)NUq:NS:f+K]`-pKn_*\ml-pD=3uVD+>:+[7VtIRea:2dA@$rT/X4spBJAc'oFr4=Ok`,iN38f[m6Fuk#Mh^.eSV!+=6^(Y
%o[*ss15!qjU;l1"=sF:C]d[jKf'QDl*o'CH-8`5\0P8[+BZLOMg-\XT0[]Jtjj]3iUV!1&GED-f6e?QfF_fL0>phJ\7jg.iYf(e`
%q/?M>OTYF9$o_qep8Mp?mNn>K1k^m\cXQsXZqS0lL">e26Ds%,!]gM<\qa$>4_j$Iea63==6^(Yo[+&+l"Y+V!/(0ogG.V/0=9e0
%D*g>7D5"XR,GB86>f5S=kV-A*;K3LV<l+ncZg>i&bRW]FG0hhI?/&Jh'j#'kde@^j^+d'*^&>USK%@qmHtSleZh=/o\&\3*N/<KB
%T@2a:kX]h-*a3D&oP*mN*2$S4D'-^hnUPC+Y-'YAe#&=ql^jFZ6D?T\*F(mof7CTIJfCr9lVt=up(GQ3(S33NI**rW&,@h3P!O$D
%JU,:7\k26R?=X;s1-=$'R3br"#jq93#n=nCEk>1kVOoO9%s&lNS)QnSh*0BV_7aAh6A+S],/2of`^hfFE<:4bH%?j^eVi&T>u7Xb
%aE>t*CHSc22/:aG':S6^',n_>n`A[,I(4dZaFS_WL)[OCqc($0pQEc6)Ifr-mR%[,',<`-!!^NX9ijTXTNZQ$l_[&$G[,B<eA7D2
%69BVf6;-kmpHMHVTF(!N?>.H?g4XXLgHp8/`e;p120:s6VM(;^'*&pKibc7.3X&5k#P(2CkSDmODN3AXl\+Esk_+Zj\*8(6!d"cQ
%,7!eQBl;GOm8Mg^ge0OP1aL4jc83DfGoD;rgn'pLoMc0Al'j9G+g-S*>U+62Xmqu@S[<S']W;1IO)FhZ,Ept0[/_kXYQno@3Yh#_
%4bU(N"Dd8h$:H>ZL)ur`IZ;K5kA-'[TZQF`?;Lm_Ouh-18L7I'M!FW[$*+i:`OVTW=3qjGORGn`UUG'4lLs.BZ8&&<XuK."TbY(C
%`TOsBn01#5T;#:d:ouh#Fjm%"4Kc7QC=fU%Rd6^^>3V=Y`r1:pK%A"oHuF`Y[<;@G[g2Yjbn:rOhI#TRi.WdJp\g&8L>hh\noP&c
%\q=6H*P08NWnX9YY1+';l(]%5Y,M<-Ue>_39kXe&6;)4G-F?_-(>;D>-F@%FdJ"upCld!TTk,GM3MC"cd"HQb0=6@LTq1K"W*R#1
%BWdCkBGjn$EEh80\UrDRJUDC))mshc<4<,,P)Tc"+_COLB$'TphF*)7#%gUi[AJDqWTf&F/fns@`RV@#I+i]%3k]U_8k>b!]0Gs.
%:,s!=7_Gh>)6EN*e?oPSPfT"eL2ZO%pJ8lEf:T[)!pul?^-IRYTJ_0@0<KkEELlC'\<8@bjE:=_"dY:XlF*KeE<WJ,"8Udf2eq[P
%WGW77,o[M$K[Y!emf!gGVrr-qNst#mq\HHJJnj+-Y+#o,j)NVO;7h"Bcs.Z`csWNBMn/`\E!<A+"8Ud^2eq[PWGW77-(?2;0FZr^
%pIE(XGZ*FQL4j^A00StP0A%nUefEh_l-M:/=5=p?E2ATA:*70r(m"R&Y%)JU9kXe&6;)4G-F?_-(>;D>-8[]c0LsklBT/)H2#fAq
%<k>tE0s]<=mgTct69FBHg8StLg9p7"k5+:p7S7^5XmXP@6#5OH^,O;rg:D^4gOjjpk,3p:6;G=OJWUPCqXa4sr$7#-h^Du-F[*tg
%iZ>-2\/r%`?0gbP[-8XW:[d)N3@pBYB)-(oX^5q_g5)(q3.nX<T"=WgSe>1hapN%]&/?&J:TH\nOtm$5X#@P@f(ag/Zjs[dFfO3U
%9!6[+fBK%H)"+1YX$;6[mXj$2JUDBn)mshc<4<,,P)Td-^5h6qc@@]dI9QRgfI#SN8Ca*(m:Q%cOR&c2f6CPCCXfLm-T'FF-T'I&
%j3?lH5j?r*XcW_]h@)>Xlh7;q&+1a5,rC92S*_X]7-tnRh4H^Gk3\$9kS."^%W^BIkSfM_DN?ig;FbDuO'ZK3W?uNKH6cS=KQ\Ik
%[,a\n69E_7TtOuH6=XWonC[[On3?*6eK4hlqmc/RQp`+Tbl/[S69FBHg8StLg9p7"k5+:p#+)03]3JL5Y^7T"o"AaTeCO"ch&b?E
%2C:86NQdGB3M[tB3Blg/#l_$g.&U5q%Z&s_lljtRLT]UGlIMV6]1ut9Mb[g(`@u2,Ij>HWj\0,&nH')2`7F$Kf,iRC/5'6('3Cbq
%5\%0Rr0/"li8)WVb[Igc>2okYniH!#f;WZ2/%JPJ?Diij@(;fbjMfV?j`U\baEOMk6!LO:D0oqLadC.!*/1"Ss&PQNiB_!gQ$tg(
%H>@X,e[U6:0-.WYj/Q=9G3q>Q\NW':<CUE.dIS2KrFY]rORLG5UUG'4lLs.BZ<9KrO2!miJBGt4r?8O'/U?HW[nKk"XZOUHe"LP>
%Y.?d]i(>#`SN_@nOVM)<5>SGT$10uaBZZ7fKQaBM6@6hoKN>,$(u9mHi"FQ%;eR$l?#Bm4af_9Cm6Fuk#Mh^.eZD]\G+Hub+.^bN
%'c#X+]X`XFaFS_WRN&YWqc($0pQCLB/^Jo/T7'obn/coDru#)'S(/V-.B'Zqj>uPP2&]QP)RF52M/;q5#n.SAGh%(jKn#oq2d(YI
%<qs`&c.?%(#PF2"&emZFa6-<f'2nZi\,I?Z&*C=n?dL68D'-iWlC_?\Vn+I[j@UFiSN_@.=oM\#lf-&i)[Gr).;mM`lWr6dg.O1c
%[hH\F6mB2HH*N?4OJqiWP5u-%,@o<jar+@V5b?MQcqXPr[4VB7CXpg6>Rqj'L%1FG1*<p7K%@qmHtSleZh=/o\&\3*bg.*%r]gGK
%^SD,VcI:t_[+s&95`piA<sdrP@p_??3pfc`SZ?V/g86C-qWrQR,acBP]>%kXRZB?Hj>u>JeSA5l42#o1k3$?c1S%*ed`i?c.ZO/S
%g)(GQh^14R;ij03d-7Q#D+q[TZ)[,meEX(&j)D[LE'K8iT2/P8)EEoJc#f_hDP-4fi*N^Oi(Bi8mn7?AI&?<u6YOno(Ktb]Xn;el
%DB<n\k>\o\*F5Wh[*qMu1h8DUs#Rc4f#E8gB<iJ`om55uL\?miM6%h'fCK>LY4FRG-ZuGR@L7HY]qr5jC>;+XQO[<=ERh0W]69ad
%>T]NX$G:N9mFU0ZZSi<S44E#YXk11n4g^PdQH4[+DVmm;LWGjS,0NNcFaGJ9F:,$f#J"/%F:H8j[g)6RoccJGoHJnmo=0W.\oK.'
%"*p"t2eWlXY&0*`,oI@6Se=\GM$u'*od-p91n"D*"\iM4nfg0Z(0PsPFF:\qA?LtgA2c\^_'A"nA+^qbGGMeN>EA)e82#geW:5[(
%_rJB\G^u;[&"Sm;o5t)\.B%tAjEg%:2&'-J)R+#/M9>M=M(17<ipG@HQ*W@Yj?#0RTWQhX[QV!aA<t<P+AXYQJURO1"r&'%UYY5F
%Y+RY$+Q(@pmbs]$p7S02F[UELkX>]2f%UUcF%/oKOWDMe-G)QJYBOi1BJ7JpaRGi#BaH8o.UL+h@Mee^Xqadta0"TY\1ShA%E6l*
%#(5-HdW4/bdY`k<hJYXHY+.@h+Q&IP`bSl:[I%D9KX.Bg&5h^AXY?#pj<gu_PsN>gMt"'pgJT$N\p2"J'N`m)n7g?ElZCHG$h90n
%:-F,&5nhk$]XX[TY_h[F\)m8qMognQPb'pc5p3YfT(52pc$YjZ3os%A)tELQi0MuoCWe6#6<dd!HVRn'^D(T+"$icW[;d>HQg+ck
%I6Q3KJ\AuGH"H'a#u=`27^.j@0`>X=41ZH;H+$Y3D*-hNd=F1k?e8D&oi#Psd!'E<SkS3`T!r'&=4#Y\ORLA7"1CCclLr#"@Ti7g
%d['fo(Xg.=Vn<Q]iO5Xq3haSugDf[2gu'6sWG@PSSjGqRVgD`VYe/Gt]Ws&$D&gXk-+a1^T20TV?n\dP]F_8a4<;-k_G!,k<ro1=
%4(L,k0\kGb*THp?^blm/f,F0ne&fdUccM)"fPdt-JGT5Ml65&OmKRKU51T%O]u75;KcmMX.Bfn=KQh]I+B-_!C6;m_H]u33>TXKd
%`o?8e,<fsjH(FAKGst+/\]ZM7JgRZ'H$Mh;@$B3ADTh>l(6_fiVS)D]fCP9hQb^X/9CD&/1O3iUb:B,2+HtFCWQ;L3jQ3u9j97K#
%]6aONEPJ;qaS2OB!F)0lFaILLZ'`0Bo.<2gKoGbG5"to?F1WHu\M[GbXZOUHe"LP>Y.?K*f<,dUl_>+3'>`S/OFU(lCZIap2q*c?
%\p^U5K6t^P#q[<#btDa?8`fgqoYK\5/\$D`qLO#Q&%]dpT;4m4Xr#gVUDFh2mJ:+%fbLk`%chu#h5II1Vn,%$QY]?/p%m)7hY<Ga
%#Q#OtXS#/8#BU<QFU,Hp3cpA%<OYHbg3#`'I<7ecL>!RK!RSJd=Zthme(pt)gS_W+HLm6C&fT1O4G.2*)P4*@k[p5YD_XMTTNZQ$
%l_[&$G[,B<eD]Z^p@I-20/NfnMg(j@=3uVD+>:+_7VtIReSV"nA7IqV86GL`ai_fCRPK6c=9CSf9kFY$1<[rFggp,!(&.)VR@Prk
%OVR$W\r!Mq;pLiaM!mqt,IT4s](Wq2@PMk6KGT!^$8M[!jR<j"K5B>'>sP<\g3/SDUI3X8>]jhtY$EEXdmYXeN;-E?0!909RCG07
%`>-[SXimWF4g:hdQFQKMimWf>,IU';06'EK"homF\q8N,J\8K&]#AflgYti.e.L=#U)+W/^#'mTF"XA\26dbNQ#]?1>s<DuJN^t]
%i^2S!gH:(t&FM!ukCkZ77dfZV"`t*OD$RU83cpA#<OW2!g3)C9?$,'urCM:VL_P!(^^'C8)/$n=jo/fN]Z%1pKhU:JrB;B)A:KIe
%1)nn@>]I?,C>2%WNt,H*ERjFW#?U2HCNn0a.m>DV3Mf["`3g11Y&m-LiegP*l<>edXp?r*_jI&@o7=WoKo9`]M^uDk-E[GrE?0.Z
%lVt=tm+QUA3aHjeU-HVV#aAg\jfF;upo^t[@dETaCCfb\()%LS'_6mNSrmUTcJ1Yq"+gUN3g$=L(K8KeE]nO.)Tf-u%G%rO7!6*(
%6j56$qaE!PMrK1m4bsnS32<kkT=Xa#Sg%=3\o)W'5;t3JC`Q:V\BGBS2f0;g@n4';lTecY#Mm8N[;BV(=6N3@o[&LH,B^gs>k"B<
%"g*adq9B[5B'],hDNF02)2Tmf(@h@S#^upZ*^>(l'8));dkrj=aj!i@6]TUQd)CDm[4Qu`CXqr*>Rqji!muSrc'k79"nd=MooSXd
%E+?=_TBc.&?BSG86[kBs&m9H?QD9q.$0k;g+:gDR&%Q"-F:IE_[`9AZDY-0^4nKr12"Xo<5>SGTM<mK6ABBha7!>Tb,'uo$7#$@m
%pDY>FL'1j<p8>uNAXtcBAQR/FFs&HDK5Qh=g=DWsX%m3.LJDANQW7s-)5);jWd;a1VR\EcY>9:fCbNntaSJk"pq+WDGXaIc,rFCV
%f$sRQ/t.Q#0-.WYF)"ohG-*ff\K6'Z0dG[`AAK!;OWDN$/@[F(aA-l)CbNm]O_#g8H\i.;qOY?.T_J3>e>"O,,!1l&fg3*gdc9`K
%\*?D*HK[cJ$\GS>7#(=bpNroqHtS<UZh=/o\&\3*N/=Y/lcT$&oi#WsXSW\LU1rCmUS_'t6+-,'f1h%'n[Rl8W*R#1BWdCkBFUq>
%Df-eMgASJF+lAdJ7W$sFea:2dA@$rD9^5DLbLDWh/\HakC[:BG9m+%!C>D1YRh"973S!Lo#?U0rmI\d6NKN>k6;+JS20'fm[,a\n
%69E_7TtOuH6A%?dHj1rh'tG:4;eWR$+,a(BY+Q*g5[J+/?/oqTX\l]RS^:U`S^>/lCc;kY5lH.QooSW:F/-0]TBc..?Eu;Z(!ACT
%(Ks,5_t&$Z#Pr[":8PRSC>D1YRgr`aERh0g]69al>T^Z+OS.rU1DNa$hd8P-KbiIB9k^H94h-hpQI(`cG.rWqPS3U31gFS7?"hV#
%1nbr2$gjTkBW&En[,ah"Tq+A.Tn2<-DiUuNqY_2q+lAdK7W$sFea:2dA7IsLrTOXhU#gHko-q'%Sk^R\='&5#432QnTkccn\i"6S
%XqR8iUD$g#V"o<M)L.;:gT60XDh]4=Fo,.I#PXD+'&#2FmPdcG/c9,&BClb.NsFa1VCQ=BmfRi%pd+Y!_Xi'-\*J`kqWNWf82L2s
%[,_Qt,7!d+95`6+Zr>crg.O=N["NPP:Gu0EjgqeT*^Y;^I7,_Z#elF>;><97Km(g;[snQ-nEi91\NW'JJb.OWS^ZJ\UrG?6+Q&Z@
%mV\Z^p>B8_q73%f9$8<`'qjfOJrPH$HJUd)!2Va``']QEjNp>"En)a^PAAciUK[ZTY*;tYg_E*QfgtqsY'>&4]0*VS+0t_<?_=#X
%Bc,bu&X@m\,1ea$c!O1u;Z%W11W)-1Begjgq[]K:^jkc'p&Epar_&.TpHX3<d+AT:WISR:,0484ksn+f'ZFi:@(omd8>C"".hq-"
%=2't.%8>31!+2F,T;k0g9OGbj!I89cLJ3*\.L6\mQp7?7"DVD"r1k_GCDLW`"e:RHI'g<O/-2po_'FL\O&'3DSUN0bOH=i#:@"1Z
%=U>TK86C`(7H@UIJ7LnB2F,`a#+"7k9Hj!s@htIVBS&>W-n4isir*slq-FrBQYdGtTKmZmUo@rdAD-9MD,Ba(qmIV($YFPBm<52<
%J0s=qc2QlDm)8+W87:6"&F'(DQNOth-OtN1jcI0C7+sdZ#(Y^a$kXo`'u2rA,oB1K1FT.k>'g,7\g9)#-GY13_AGU)-pa<VZ1/u_
%.s'Q%a!SMqN&CW#^?6(V@[qLB\b(DIn^-3I#eMq"5\p:Bh8;>ZPj>C\_YQY5d`NMc0A%#[gfLD6+>ea,dPKnt1G</Gb_258fH(73
%6cK$">/h:1TZfI,+\;Re_082B_rcNVW^Cge,lcQJmVbamb^B-N0lpfaIk]n5JK?E%nXAf5WAGj*#'0K@'So82Q'9[!9*`SF,4`eE
%7YDN-;I$9/-UqQ32A#Y'r=V.1q-!s4UE_6.8A,Gm&fd2N$gD1R@qQNk&HVV\Y/YQo8@>&?T_]s_*-+ep$i6uN;O+Y$Th+^B!jCF\
%]$ce=Sb1/.NJ3m]eNXh.%#MP"!U/6urFk`/Hhg0fGrWqD&iqi3,Eu3(;*o2QY%A5[*.X-lKd/l!OJi<=aB(Gbh[3*SW,45^&Si<h
%"3JUs<UX-5d+/uT]b+*-]O@l^'E`&AK7[!t2%AW*f_4BA00mTD)d>Th<^M+L`G>\%RI)b0UZU+>4oic;B(J?B\eM6SQ8EB>*a2c"
%clP&["-V,Fho;K8FsOimcp7$/p!^0QI]4MHBpBk\L24dQH#sKd165"\&3qI@m?]aG1])`23o$Deou0):4Ed7f9LR&C8/i6>jRnLo
%_NF@K)M0?S$KIdp3n0tDfFDc>H9SNXO(Xaeq6fNb#WS#`U_U-q#kL7>niCXl'2h#&,<aQtaL1?\JSa<d^Vr["=?:dGQ]c<Y(mmT/
%0/C7-$:%2L"54<8quItsj;mOIp!]e.>hJ6bX?tIa3'!(RFE.s)18#fX(:.CV\hkaX[="`7#JUPSjK5cDFUS[E!Jsq[<Os+mY#2_T
%+W4P.]@pn5)4CH+6`!2`VBV7#@&hY'\o%eUmZVmj(e5V1W^j$%0WjGN"Dfqb^1WP(Bq#sh4heD1f9*&7&XGuj7`mANLsjFa1mo?:
%ZLM@KQ_DNIh-:l-h)o5$#>5b$_L^!!nfVrQ%fNa_?>kSKU'eIGMQUI`g,@MX027d@5mk*BEjP:8\9<K)IH%(=rh^=O>^G&jY#CsJ
%dPV>NdR!iPDCO3&N$l?XrNjQS$i+>;5!=#P;og?X><b!0pWM6>\D$.2`=6oJHO6DkLtYXIVUkMn(ce$`gHoe[DK,>ff<pD')QL1?
%$5Y#EecGo^?;p['4,O+F\\HVMOTV0mZ+n-R8fe$AqQ8;4jPRESnj:2LBijI?CY-!/6P5On=n,7(&\0?Qd.]B/+KhTt^Jf*4@b(/n
%XldOS=ZbgT#bh%F*<j>o@Uk/KJ'uPdl&XH=_LC0tM^jB@!=fA=#$]'."B;WNG?kHZ7etMc?<RKK:&<S*\.O%XCXjR,p@N5=4Cd$o
%]`ou90R[>cVIs8fe&hi6d)c.R5EN4T0C*OEi_F+UgO[u`;3OE]jCJ\&K$7[BI:X@#NUitP`@dU.\B;U-6MbHKl@Q*;;s&;71Tja2
%CSY_i+G2Fm1;%9:)?b$WW@pLMnu;\Y,;_\09q4L?%,?DA?Z3N>!K8HFarHO&W8fs%+C'jI^Wd$eXKr6tm(M.;NHrCTi0#MpM6,K`
%]qF7$a/(3>$A&U_PHSg2^lEu<+%#erfK8fSIbQpqIk)^^fQFO5m_dN]O?Ao.oBtOgD#-$oRb=XF0rpttk+J1jZVb8:^g.^+BkEt&
%ptV2_GsR8OP^.c_,g=g.ON8>A?,kPb[TVhdJVg`GiboP1PjT^:5pi%R'X%c?,ud2-cd*iA:!Toe+Pj"!cuo6J#K-hC4R*/>8eIkb
%FU_SPKA"]GA3oS>J2Z6m:!NMnb`q=?I[rpV&12u$^auBE"-J=D<t7ud/2[m'87\)Xs2Hak1&&;LP6Q#%Y,S\LSb[p!UR)Vmj("h:
%C;#kPhQra_(!0#H\td=cMo?!0W#aCQ>#\S"K5&VhK@$5VA(S4*KRIOhX#lENbMO?TA%e22X"I4=Y.i]qn[H,_Vr/H4Y3n/R#m+gs
%>EEh.=_G#d^cj0V;cQu2X.jfC6G3^SU\C_"\LcsRjY-)i<Y!uVZGPt^%V3iTV]3T('W)K^n%;M/QL7s_cu7+!]n;5F_**TQgM=/C
%#+4*+0EnQO/hn>F#5rP@Ka\DkUe+i.WD)MRd\HH5JGTQ\%1-GHqlO874R'#[%BXfuVQeG5go.Slm-7uo64[>5(DKO"m90`j_)&T,
%h.s[30WlAJBVjud;l7hp#=8`MOb6sWeJ;`9ZugMM"l68-)`9.<9NC9=)/Ru.Hm9,!B3=*o&QQG]Zf+4/I17cG[t0T'WPCKWUHu@^
%d7/C1=sH-ohf:]9366F;dgM,D(oRGLKO,Vbr%mWXj%ro:4%5a*1FjV`%9.p`cNu`CX+i7EC8f8S*7M,FTrAV/\aaKXI>D6S&=/kB
%J"/Fd=_H!gHg$(LpX"V_a>Lj+o.>aHLkF!S3:arc:bH>@fBkYIU2Dg]Z=@U@Z'W8kO&Iiol\+8E!TLcsJB5tFRlhc,Qk4R.-X^K0
%@M0nokd;nNJtOZli_X_"n)gHm[$F?f0fCe.g_C@9'\]C(H5*doBM5879/-`t2/qq8ki](/$iMCDWfT(R7:$4`.lV"=rq1gfjSH.h
%Kl5Gj.Z@tnTrr__n">=jWLV%lIYen<SoI%eLk6NW9lSUZ)B2.GnNoq;LkFou4WhEB)G>9&TM%#.:T2h=rb]q(4UMDG-8Z-[&f;I_
%WU,&!]eT2&KaM2lrORR06EBE./i(M*Y%<foLF?+uHBdF3:^V?%lhp[.PMM%IX>@?3`!rZ(Ys-W&CY-"(1EeO0r/ZnArGtIgj3([n
%E9:-e8S7,3F9UGJEgX_.aqp)u4GlR6^^Qbq\9?-o3d.X>HU5:\ghU-8CA#%gSd%)p^]&1piTY%,>GDT&D=9.Ch'mS<[]=`aerEQ(
%BAL&p5+6@I#K8#ZK*%d+Xlnf#LHF3D2ID@Roiq^L.^t$!'p8]$FUk^#q:gl5kQ1q&h:5fsp\Oj\m4O3,OkmiZn-if.pE$NEPJL@j
%B<\pMJf\!Ei]Yk1njD!c9BW9uU`56.IehHO^LOtR\!g8M[qZS)>ak9eg2hb==N.C9/Pl4+2-\g@2V3iQMoD@7JRA9t<k4l3]BFsg
%]!dL^c=/\?=s;.f=_GUl\V/HL?kN7ueK1oNf.GC1X/h=bq"rbMOC`OlYQH.__?HbWSl",7ab(c@7,0GX"sRPd:s7I]hs^N16?nKR
%lbsqY8EW5eqD7.-42u=@2=LFqSHtK5%XdAg7R-NIMMI4h-T^*.6fgt%mbX`\i4Xq",Xn%,5dTgDSgg5=Q_[\;MtiC,Vrc4HEob^3
%K$6>,[b<0cE,a9"`sjpn#;PY6hC1PoLS,i4W+sK]R1DBsBlu_mhqIj=G7&4L@rALOl")>gT$A389=F#oG^\dl:K&_3C%$W\"8!BT
%NYm)2.LJI?19t`jomE:sr=jFh<,(hpOk!_RZ@okD\/(.5//qp'Cc[o[(a$7#BR*iU^Fu\4g9`tSZ;[`%>HElsY/>eq"-&%$n^.n?
%9a?;@Z)#BI7pAU*3@L$@'H#2o6YN\iaq!9>(Q-hCR9)QTf&e,ket/uZRP9cfgRma41J\M4lp>Aqg>+jPc603sO4!s`as@P@G3tKe
%-*o@5.rt!GVQgL;jX&:AWd(((Cto+YpV*edqmL/d:%\%4X6uFe*JR)9mXf\#Au+JL$O/T>CY#]S*9>g:kjIB.mL8,5?@P:,'uqlU
%XpcDk^HB*:P[@3cas_WiF1u@in4;J'n+SSjZ*0\)IPV)$756:ohS,\4!t+?F*9l2W!6&..+D_;kbo2ohQX,9aaF\MGJMhJ*7'g\h
%a@_URgSTdKN9nto+[29!a+E^U0uJap&5lH5bom!$bS%)!?*H+_A$VfIG_b(.iLj$+&tW0"FU7.Gg9'07rR<'aFmp)5Wo%W2!LF-9
%L/:Ue]`N*;@M^W$`%2-B-TdiW)8"$'El80pIq^!7WM/L57I4b`NS::QR]2b\rk<O;bLUJ'SD(QX8#R[4]ZiUCgu$IUGi=6%r4&^S
%FXM0mEjPV/VJ3?fbYuE]/B*'*^"%N1ks.YGC=]ae!tS^V>$8mI8_bbtbAGhp&;lFbLTA8lk=M.:T@MMB]rj-eWH+9_%1nXRmAF$0
%X9h"KZX=Y+B13ZdD@g+qTh!jU%>A:D=>cB;?A:(_%YK[$Ajs"L&>s%^,O4J#jjQRcVPIgN7d#^$HQ-rP&B#7)H72D;6C3]'TJ/jr
%8^jD&Q%jcKmR3=#Qu[0Xf$\\QU`&0o@)[CQ>]h*nG59mP@a]chl)KA^*o!gQ"dtWsKtTCo%:`E41#?L77b1e_\>0>%UY)7G,6rM2
%'s=aNfV,^gJfJQ$%\iV6`fN3.5t&WUAbt[3AF4D)3[ii6E1]AF5saZ)_J+3[Cj1*m'Kj:ce\/tL%V)(p_(7O-rs*=743Dk(:5tgj
%H5Zq@$G+M9*T]js)lsd93"A1d>0%Vt>.L<;/<aI8or];Mgl`3bX(u`77Z^0pADrl<n^(LU;lL8cXUaffCj)KU//Q:s>.'VZ=5ls+
%/EpAQ&cL?HW3fVrOrFRHg*1aA2;G$\/()t3bV(EeXX%DX>o0EW.n3.DG(MpnRif^<C]]8Tf&]4ip)CYeY1c''LbTHE?3+jR969A1
%Z0gAj5b)LbUtS(+^`B]_P$?0s8I#rnA_#ABZ2-qDr4H2,%/_F@dbXk?CV\EBoF3e$ou*Q)bH<`BQYTRAcS(^aq?l?QpsbX,OXq97
%pDIW&+4gu3L@qr!_8'`mc2W%?>sZ6Q5)N>oLHS[C+0&0#CQjKDK`g`a\uDh;Kg(]L\Ct=)lh.EkJe`.k.sQS>4o9h^#AnRj3Q*GN
%)r9=3[J<,D#Q+,VXWO#,?T7VUllV,`QU^nL3e&U2J"qiBQ2Ri;J):7?XpQ6eMQ`M)]@PV#b;\DX4D57oFZ<HC'<<.>UO^e[%U+Lp
%9jW0UNONrg;I6mmS_=S7ce4;0h5)>RXRI[0N&Gn$)J!\gk8*?;TXm<Vl>AJ/X)OSmqK8BZ+8h`L_M93&2[[UQ9Kr*801G%k,PooZ
%rh+5cAd?WJ9:Lu<mGjl37iQhs%m*#N2)kD,q_3i+0MGs!mF2KK"8D'jjKoGQ?=u?em_1`$4A*5nCX>kj\ZZM2JnGq4]%;3*c1c.!
%Z)trlW&ifsd9Cnm:pL"#(Y_"/>IF?\%eu_KI]/M26l.q+`7_qGXmTIWWWj9ukg7I[j3]K<%@b%d]FB7`J[FJ5_c:me.Rs#Q=>k,N
%ptI5)\LZmBMlSm/.s118aG/9^?/6C<CV2V'q;8h3*&INI=T<6gs"aV(4;.S:CVk@?pir>(I)Yl*meD)Bq86tLk/aAc6TqcF@&QN2
%E%&87d_5'^,]V$qUBZ?k0L@RtL-IQ>9&_FjCnh^_n7sfY>:sb(b&J?WXho+oh]d,T=j1O>7"7IErH:OK[-5PKad/-MMADBJE1)%(
%f;X$[>k/?s/K<0$ha95o>mc=[V):CYXiFFhB"Xn3*CeQ^&cT@?`$Lu`:*EKf4>pK!N;6?;aht],O:AI=o&Y88`mc`E/s1dr$tP$G
%XQ"BY^ioa:eC^LT,NU%'AZ9Yd8\Ms;#NfM.!s(]%l<O#4XB+i,mC1]8Al(kh!=a&9+i!WF@a50Q7.CKbM]0?DK#cK8-cg'MIE]1(
%M>;)92:19OnCQjGpgs'l3DD[adqdOJk2H@Uo%+nqXsL`6d$,B6]1Ihl=mpYf6Vb7TQag[(p00T/o!]juDeCR5A"N"qe'*?o5QXOA
%X:R<n)d_hLKgEr+!U1m*m9]p!P(^rW9M'Xb^?u$*d_i/@Qr8@G&X(P]dDX#`X\auV?BDVFJ%`:IpRZ>INfP'"RP'IAaUSe"$GGKW
%UO/&J+R<Hc%f9.d8(L1(+e'lQ*;>_0T6`(69sX*OVa2)6ZE5e9k?:t0;rV<TI*St:<;\,5ji;$0r-4:+r:<iD^UDAS>C_RsA#oCW
%:qh,pn^1KJ/GCdM.<b`EBpA/SV*=77TWdhaRO!C:O5BcbCNKC*"HDuDQKM$sVSO;b7!q(W`>1D9W7]eKi?mSR1&PJ2I`UL"*H_G\
%&F6h';lcc%P\II79m6i]1p_g8Db@%=Jk2K@Wad9(``VD%`LWI4"[@>,gB=4\`N#tdRg&2[Np00hDc:Q(2ZfE@`JeS'b6b,p.<Ol8
%5:-6OLM%Y^TJ-*Oa7n<^VgNo%qjR7TN6AF[.1QV%nuP(D821p3`AG?&\VLH&EX]HN)s<bP[CGGj0`LgIeua`%eG>P_YG%L1pK7Ac
%AZd"=N1]G$+.KebPbe%EHl^KuYe>o[&`bP@Gk/0@)S0066L,"n=\su$1]Y[.YBLjc!N)a5BI_=l2#h[UIVcpj^&!(Os4I66Nek`1
%q:\<a&c2Ku+(+u-dj'ic""E/Qdr1m)/(fbGO0A9K:/J!ee1=hIi?935])<%YRYkOYN96ohe05#HjJUdGZRf_sKeH$#Xh*4KjEV"9
%KjuKIpnp07ZQ\>WX<EhKl/"%:#%=ofN7M>e?b?^Z`J]69_:&*&3.*J)555a4]S[7!`@"==n)ta\p[M^JI'Q;7Q3[8GEFI]!M[.4.
%M=0*Ngq"Gbh0riH)MI>Us5[L(j`W>4?.hM+IIWu^@0"?K;qZI9p7+^,IYqWH]fQDD&9_ooZ+A'I[nP)bK)FP!IZl6GfU$N6k!*Et
%*l@(F/+f;pqS=ud@&*^Paa#g<^#%`CeF\3nHb\io5Q?/F'7RS@^0Vh0IQgU-;MC0eZ]F:Wmq90)F5=m3hT+s>:IT2H]G1>XkO/#=
%q!mkKq*On+b5?MRr-T@;]A"2LS2R,`#-SOX#K[JaKm8TLK6P$L+E=2<iBC<)IY@c*)qiPkOasbF%SjpYgjYO8FX8I$3N3?TITT:&
%#*OR%(Ui`u&l:mjd)Hm#lb\i[)DuY$p&sCtJu;]:i<sW/7.J1ZbRc4GN@eYjo-(]\'Uo5fSn"tLXf^5D;'_upGVg*\&urk4iX".t
%p$*MVi.^`#M4V"f_f@5!cJk8rRM:JZ>oluLY>;kT,lPN+(eQ6c+O2Z1hOKXYAX;S]]-,:SN-;E'Fo=5kBT:@>O&22O6L7l@Z10Qe
%M7HllVo<,0bCCW6$8NnP4YBu*0WjZ>#*!&U;ae[c92bl-PMo=rPn]o!Z)(lk$q5:iLuu#bfeEMk`E0U9q%W!kfp)qS,Lss#.\cS[
%ge+\kXi8Gp$0P9qO>*!2LC$Zldfn@Qgt[:qDirF=l,hN3r?\h/"2#s@TVc*bCFQKPSk\"/6#V)/l<]AVjP`pe?^U;YqK4VVMCl3n
%4;D`7Uo/*DJh`B"AfBR#&7qir!70so.*QI(^Kd&?dfH&sY#PUTfJ9m'Su:?R9lk&2ODjic]6C;22hK(HIr<$6)i;dPOrmr8%n>9*
%](Y`&s5emqp?RPf3o$2[pRp*"GjqHdh&2NMYP0C:I;o5#3J%bciA]`bK:2MN?i263^)<%T]ZIo5=DfJJ#@I'5`6JktkQaoURo&t@
%SUPWY5=hlJCtB1mm"7E9'Bh`h]e_3&,POpeIF*=Z1NIR3XMQ@<mt28JboM1q$pU\HJ'2!ejMh];j>U02K2hYY?@FRb?VJ`U]&u"(
%oUA&@5r*k/;?-#js5hKO17uN5jlh>`oQLG8c#e9\Tq8>7>6oG%eZXK$QS09.#?U6[86q_`oqmO.=]7Q"A7G8j\+A\:_:(&m&!+pf
%^WjN5n3!;8Dh$0DA*M<D+)gf70=S[)lefTKd->tf'0[B@\)6/"GN-f*&N.:.*pG9Pi>_T9TR?T=ZG*5,VH*B]h#-g5r,r5An/2,n
%/,aKRI=%uCpp5E2^4(@KIe_=)*,b5;l/jqpji%&Tl2-ju[PaQcQ1/,3A2_V1hhOQ2Q)s^njH.dc*V,eH$YA5%p!TOm[rn.l1$_SA
%2T/Ir$0Hlp<TLE$eVCeiH[1@3[@;,con;ui'F-*Ncrf1FP5@Ra@rWpp$]@2NccaaTCZY3CT\I?9W4<N/B*\ARUr4.7Do4kY3#fQ5
%?&)1n8<^i3I7Vu#M3*\qgDb6upI9"cBn5C07qB4@#C0nQTO9+J^^0g!quQIpd6ZCFgCrL=;:flAIX]T3?d>&.#6kA"RuJh&KLU"C
%'o&?K]m-JcQ*([Q)b";33#/VN%7UeCMbjTc;.BtAqCS3.i*4Y3$gA4Ml<CYVa>N9[KT&J?[aJc=/C,`Qh3^u/;(k5\R`s,L;%/(=
%3o\EN*$Y%<-W7"u.Ie+7f@c2jZ+*9c]Q-*PCmRkKS8.35N!-ntYi'Y*>!-9,ScajB=am>^Q_Gte609Gi^4qGj*Glo"M+i(H_"I&`
%KjCIB&YkK%ALM/c^E-`\0m>U&#)#5.K%:>4g>jB%TfE=fDoNr1&V@Jc3I)C.0s:e-X,D(,6F7<%/M2/FUcmIK7t32tI$b@,N=0)o
%L_"RGLJd*\q!hc<q(SXmgKZq%1ERs6%pR@F_.d!L/3eg!2DdmdDKOr?`)A5[JEJZTOGm1T[+U9DV>7jJl$K1UAn^Q<jW,a2=nFUs
%`26rIp,YchgO`2Q_XV4Ads"fJa/ln4mFTsEA&5GY@O?//<d8)d,p^LK5+@j(O0.*^[5E_N]%>7Y-Z&F7e4XM4jRW-'<31e`]SAkg
%?/PA6>&^21i&AI/_G7#1l&\eC@-H9d1P.W4Ls[7XB:;D&@p]rK>SS;#+0*I#5"i@=^1GrVX=n@d/JnVB%P%f?f+jD$8o^mBVV7,U
%WO="[?ahm1?e0N-1_`"_Mk2ONJ>D16G<eJtrYCPWI*dKP2Q!Damoce%'g^FcofX]4#kGZh(0A,3KEOanSQ-]#b2J1?%_hQF]%p:D
%MM!BjYhHqJ>N#cY:Ynp"Lc71BUI.F#>mne9i!.'1^(*4e>KCapAhpcqjaC.\"V`-:#!N'Jn.^'p]UZXo^S/8gZVXRjAo8[O)X7YA
%[2M=B`g0EI>`/piY!ZC_Fnm;C)/LtYpf_ViUpkmL*!i[tCp=/*"K0V'9cnrJ;Q-J@Q&KlNl'3@GZ3U&EPL)LlC+i?::U+p-oJ\"Q
%]kDF.A@b!g!+'2e2kf0!Gjo/j]P.e(U-!bl,+e.XcNj>3]^1-\s*kUa_"e<a.$;Q330c.rr%5##Fo0=CnkdL>G-Ok<I#FSYHX%]'
%2QRHN(86+].D;Ia+R;^8MdE[s%T'6SFWVTf2](Z/"5K-32m)84rq#1WIB\S-83?\+-[i4d^?JBG?IT4,l;'7;%mJPLC[7JHot^WW
%dtI1+@U"9lij#W#%u0W[O84_'r5"?kjA17=X^@%R&)R"%W5<kihG+@R-LfUr7;1JD<:_YN\=reFm:b.._]2.['l91JKMX!=V-+WJ
%N]X'N;.cR87d+2TPQ]5=.A>D%A9?@G>nW#<bq<nm>dIGU(9QTNS0+pW3%*:MK.t2;CHEr/ajK]CL(94j#/&V@+TCZAY'PE"TJbS0
%*V`9$R2/u>rL..J/_55"Uo[CU(.do*R-Bl23F99(#,p$Z^f5_.`P^"C\m>=oMMhmL!6HM7\V-bFFJ!T_:4n#]9XEEW$_BAcX*[XN
%ho;UA"ZuQRlfo?&kp(B"435juf^Aj//==m:EmnZKVahl.V6Sp17f@Y-41`p3%'&c(<UZS]n%`#na>ok9G!5ut4Q?#b<Tk4Na0+Zf
%!'hW7K)Q<WkWA:\7sLcs3(C*%7iu0%^>gTSj",T]A,;[n9ddU&3sO2YXJh2Q;Qml7hsm]&JZR_eY.iq*I0S'p#da14a*$,;mm4NK
%6@=1c!kS[G]5<*\[b.c2H@h6l6^>>pRb;3M,Pfr@D'C\*>o-9g6OQkJ#&$e4=VrhgAVVg-^3"f%$gI6"KS^ormMJV2I9@hu'1"E%
%,B\ob07c9=cOU9EO_g_IM+DRSC!ZQ1.gUU?offLj%KgpfJfBKr:<'Gn+SNlC<G4Y=crcI>jp9"<'"'Jhp"(aIQe\sKA%Kse$b:_Z
%s1X^>rX:9RoaR6Q(kV6hX)6jJ10uO?hNJn"0d0*oZ=77V"ssg:(\iRY<e7=?kf]#/G)693]be;$[]FgOL1XbmZ2#<L$)j\jf#"sE
%G31ZXb3%'17"bn#FkpjQf;Y(g7d@hL744lub*2(JA2ZtLYf9]U%m:g[114s2"GptGLbs%U)/7chAdY`<<Kar]1rr1P<9!s%#*>61
%E%^4og9,k]JehTAf*2VV=e+O_>>n#johfVA7/jQ*UVBQhZ@=m$!"aJt8.3?1T9mugJ,I&2f7tP36^PE.jU?jhI'MYn;UG]/n)XkJ
%EBhFXTFg<!3AJ-_@DS=Vm(dY'Eaeuoc'FlU"p+E.3nVS8;XjaHY1-iSrWQ=7G#!fLr;MgrLHj$;8t'TS6$:F/-!R-S@^&[p..[ke
%;6`SPDM2U%)'u[p_1LOsPZXu^Qm"<%f$j#VQjAD*"VBk>Pm2+>lp6J_4=3<lK_0j(rQmS.*<X=*CW0"@Mq578>rPf_HtF9,c*Bq!
%OA4Q&ne9mXY<H<C.*EOm-.qLf-#a3D'NC%CN-ug"ZpUn+-7r!PqSUP'0]l\<+#;uq86iO/d8<Q0L-lZ0:_XW01EhpqIN!RBSaJQ!
%C_Hn8Fr1Ugf9*S"N@L\[%mnd#>s[fZpd6Hr&'&+u?l1T.@j,D!=#P>nf@o=5(6quRao?uk7]nELS1%2aO`,epb%>2"N4"AC(fN?1
%Eb`.fBl#fAR.O)$IIrfEMg6g.F4@/i=P2-i[HOe):"?#umWj3s'^T9;<m6/%\/>J'%Unsdc)*5eS7-4sLtl*?N@_F\GM(KMd9aEQ
%obklGKrNEW10C9\c[s2n,WZKW;#knh6c1@:pE95fA((L#KguYF/)Yte&QNjqCI7`I$UTli.Bt+;hUHI`dC.PfVPt8C$<=i/U'%Kf
%=uk7dl,gAlNKkNs_Y?"!a+h=6p<b^]R6kF]qaOM!2uGMURKL8H.&CUPf\=B6@Se5ds1d^U(isi/Zs[e[Z#\eHH:>&Y*Usq"e5Gp6
%;%\#!0>&]"'PtCP#Of&KU?4#.E&DYSV`%4B@p!J)Y\ljBAhn4\\AQ*BC_X+MJ#Emmccm>kHupEkopX1!Sc5HCc0Z"-H8,&U<h](U
%_T7W3CB7d]nem(@9:Fr*CJV=e?5',3Vr`Y/<<CJdHiudcFkW?H37q5KqZX!bhK#c5);-WKTp8LE3k(1c#R>TS0V*q<Q`[A7[mt>>
%m@#NGnqE]:ENpJOiJl<bb)?`M;7;.@0RZK!7FH*l6Vp.oi]`JroKuHiD\Pt2C,d`OmmC"X^L;t_)<3[^d``<15>icY+DTplJsmu4
%.J.,hAcQQk@,rfN9#8HeR8q@?m@5k?-A-?%9a59(]Nl[m4QreqEm]n%07feD$OW/?#Z.s"-7!Hgq/YjR'8La>Wh<cb9t1\mX*4?I
%!ZKbca%O%<iLTpA3#DWaAK>VYjT*U8UlQI"K+4<Y)GMn(-]L>+4PZg@EpP]#;n3NUatS]0]p@B[0GA3,.=k_Y5[ra#dVu&E-cC>&
%2K<>7+!:O,F7,L9RI"fT?Z6AW?T:<]`qr-a5(\\)S4!*VCr)RmN$*f2G$#NKVLLo:.\+AATbFVkp)7"WkN.`\RHh&_@&K^%1F$J1
%luSi!J5DTX`T,ZMD^)k=Ai;8Zb*S'`K/`4ZanX>gr.ZR1qkC$J1R5sRgU.F\[rV%/PO1W$'sn_KWn)eh>1eK9A"%m9?rf-9HtC@b
%3.hQnW)lnOOo#tgN'df%%XSbYE,VA!#>`4CFgg,'>3HU!1ST%NgsY`BMe"e7.gC(tXq5t$ar42og*8Tf[qVujf1(nQ?eq\9H-%;/
%BnSPtem"6%%^bLOMk!I`.>2.<#oA`5JH'jgr%H;,c+R^3KjUil(9CHfq6"l8O3)Yij5+p=%,:nQ,TT"HgCKN@e@]3b$U][NC5c-I
%)a#"B(L8*bdRV-6Zh=1E"$0GHh/.u7N8Gs/RqP,5p^[Hg:sa-Y14B]]Q&,^IJ^cA/^CNkVcnmeF$ngSLG_3(b$Ma:HDqZrR,#+Cd
%Qj00pq2bX_ML'^;_)*KI>-kG!%aI,sp:P8U(5cpi3_kS\]QWdD2R(CC:97m'Jk\-7Y_K?n%<K%:TJE7<Xh@ON*Z`!aP13#.O%S"2
%*-eI@[t+"Q9%P,ocUPVu@N0pm1[kGZQ,K^H#$\__-I.@AXsmS]2K]dGg14;61ToVc.fEn>A[LJMMVeo,.2nA]FEmohbm_eE0'.mb
%`WOG9a9ST"<)O8iCbpd`QqPhsb&oO-VKE/@J3#Sr$n:h?YIGnl66%;#m@'jMZblh.Q((U?bq)t],81VNM$>'K.*]oV`EfWB:eMWb
%!UNU$6p!2ZdKU5)%VJb=G7G]DTW@!>qDWj2h?f$kUeG(j:Ij7oE='Gk`bcNg/u=ckKP>@FEH`7jARB;Mn$F1'IL.<XQJnpSfoE:<
%PlsR(+D(B9"69JHEAXV8f/_BD-5e723=3JF5bVMO5SeF=,l9$.:OKqBk5![B9?L@:'ol]>6</3;%RmST=IEa@<Z^gjG!<Q51Jns5
%d8H?3P8t'kCa'(188*Wi1%AJl\Q;3B`$oRUKH^jI1SsB=Y(LRj2/,_K[VQ%NTnZl(Bt/pPM_.)ZUU2<n*NW@?Tf(kqnZ3h.S^Sts
%DoeW!/f*N@g]pp*eLV1<BOlL+kg2`%[S*^qWa983_s6ZtfeZXJQ40^6Hfo3i[2a8gX,B!mK,+uB&,RN^jm0gYM3P=ap.5W28>[k$
%:+hW?^W#3qrLK1qCMVoNQ'tiH8)gt2XF/.6ULA9!<iZp43Ac6h2IMM"*t!<??GD176SoF;c_(J`3sWl9Y,>n\b(-9;17ecS\_,1p
%.E84n`X4*I(QIALQ`>JK,^[MD2YOuPAl0`sm#@`'TO@65?>M9[qs#s>/4L#sOe=!/=@%]?PhEPA;dAqZHKN,#7'st%m<Pp$"!93H
%KPCg]QoCL!D?":EXp;Sd=DkS?\Jt15!R$/XF2SL690U]D]=j`ZU+ehtLZ3+m]4f]tVnIt?,!>q>%Ukq!hadOX$VYn2qnN1$5Q.ec
%l2UQDs0)I_a1qK^s5AJ,rVJhZotUF^s62bBm(`Sj5J"`slD3n(3:up0jgK]*Bb\FX5*7o:8DTMolN!jrJJKLQ!:(EN9Io3J[Z3Qp
%EW:(O\UJi&Y6aO*QN6;F6kEr:-dl0QA4jH=R%q?;jqNtH$n]es4"D:Pn@;'77QA'kUdh<1_:`-Ua.=_'gQtUD1h&r)&I^/!.frVe
%7SNnH3Fat%Z-m71Ss!-*e0`D=`&W`#A3YmfLPEPI0m(*E?g;dol>(h7QZK0$6#h0L>mt`O2Q%:2L2&-0,do2"GHI'*c79bj?"!'/
%`d>Ok8QNB&H*Dh`PFs`49#2Wh-gd73[`.NG-*piIh&[[Pa=bisZ:lXML1>krp;<]-6Q923h$,r=j:pP4%LBf$\m!GB_KG8;g@c)3
%TF>lK]C%W3p/4acA%j!0Wb0H?$<pT?/b@\e;HQ>UgpEjNhMpU6f,ei#1RWI&21i?Hl=oYo0T\Oi_H,JnY4Fb1X!48h--OLJl`_$(
%<Qdl6a'`Q[@U>Hf45Qu?BGR@sQ**%qU351H_r.2?l*e!0@MD6Y`/*7#7S"_lZ%#\b)B:_7QR41S"d8YtSJ2=dFh!e[+/U*NECbg.
%7N*Zk3/56mWQL(C`5knG1G@2+Vh<2F:`Uc4`]1d>N]1X)`c(/O8Us/k6Z4O(&[(_($8<^%/p.5UI*a03&.9J,J_/M(dZJ2OT^J>M
%.30O/8H1,8X&'@s2fB`c(_*L=RGM5.B`\J-\k$?h16ENgMg@+ZJ&t['7^Al?)A/![(/rR5'Rg.7;D+jHA6=fk"aqOZ<K!e36#L!F
%""6N5!3^`K[pd)A9q?5Sbq9d\cRsVmd3;$hYX#GqXcH(tUY/QaAn5NBCR9W"2YBuQYdI\#J1h:#6&Q2T!#6Jm8Dm[-7F3`D#b]dl
%gLq*bK"<Rg7W7M;`Mkn!Ej\`3]W+$%XAplOm=l3j=IWBUPJ<V6Ft(O<He'MQs5<8LI9@,n\HZH<cIBG3/=k;C)&hJC^?cPnUsf1Y
%fi&!f`-(O)H0V,3*sZCs]][sQe@&PegbPS.?FsB?AI0,^:?,#ke-4*23`=lddo9]DG!EhNB8^O<bZ;A&<US6L#2)l*Fc)]7?72nX
%@^=pf2Uq6;_TQ(Z!dfA\m$P?uiUc@N=2^77['"`b%l!is&MiL[:I/H1Wjl),cgcdm@e6qiAOu&<*($QpD&pXh:fB?iR*U1)bFQ$3
%rDtImAq4jW6;k3SL@=cC-71i7Y[uM0g>QMi[8hsIm(VA?XQ+q939T"@TU1e)*pk:=6!,3OZBhn.OW)01P$3r`+3V/k0,cc&%M<nd
%g(XTQ//)72]EYa_Q0u4m.0:EpR^$7tJKebF%N=d.6[E=r<_3r>Nm"pA)7W(+?-kJ9CJW>l#mI,f1e(sXpA7L*,Ct\=aLJ%Y[CP2p
%4Z17ZiK*].s5L'X)m!#G:h?$TWh/si6RKg:E@=&-6K`X$^aS^t_g9p8aI32$A8Yps1^E!i#7kfo4baV=Km5+bc(c/6WE^oS)\0-e
%TYc>aIfI!SI+.2\k?J$'.c*rWGW\q&#_RT+0/6-*rpl]u_ZA#.S29QNjul"oPTR+qBZ(4t:s'Lhh!%ZAG0i2?1u]W*LP,GPj2%IS
%k@e8Hb2&ilo:*PP'10/SpC@^OX`??!."7d;]@r=S?_.*B"$.k.2qiYPfZeEc4]&H?*tl,:egU_"+Q5a"*liW_Dh7EG4s'i/`U<jg
%otDApp@7;f7rpq2qMlc*$=]sGWRYFq)9"8U"eh>V2pLU6?UCs<4oEXbY+l-i*@WZ`JA#?8OJ\,HX4(kA"7=TN2k"`B:H^HWF<=U4
%Fi[49d#_8]K8<skD$$4>H?AUU$[#gQ_piZ*r[-:jZ!S16Y<Pe5J%h1q:LJtWgXfO,l]9MC=8WMV:7;Vq=@.fp,X2'(VuXYo!K_f*
%KqO<24CkCe1RY#s%$VVlKp',hLS9>9BPuK)D\X,;1>]'D1p=b][MGK[o5G7*.pkZaXWTbB/0nAOk/<=akHk;sH-L+sd*J:+9O'i%
%BsXD<UtPka-UP5l]`prb2RWm<5+nognI'q#.PifhS-m*.=S!OLg0nXu'+=/][_e0cq#a13.o'0Od#C<8.CG7Ngf.,'e\Q]bnkEfe
%8bMpDZ*%FL^6em>0^u\c=/-22*,=SFD^A[gCb9tcnKAIpHpl3>Vbf2e&307W@&[A0Oq^V%kb-Zqf>GJd'[Xj"P;rB.'X_(\.4%(U
%&qjcnRfQk.];/c3E?jVGI*G+#L-Y''U&REl!4h2Ec*kJc"dD5`,G6*H:#:gh$g>2$8(F,macS4^c.ZZ4Al^:^eJ9a3d:=ab]6k6B
%?FsZFpDGgq:f%At+cIcFSC]\B[,dUkZXBQRlDd4I`$M&fm$,G0rZ%stf=oKe'A!ZWi(W,T.h=dPTS1$,q&EEdiDgI\/)@!6^c(8\
%Dd',bmnS<0Zm]r*,W_q`s/r;'A]S]4$+IZ;Y'ZcNU5\Vb@^9*;^a([FEoIY5bDC']c.i[)Aq7j&ZtgADoaAu:UYdsBK1s3</@T:-
%KS\`@MKVAanM-fa.ra-^/r=(l$+tFOO-1LZl])1[q=.sS]XThi!re\<%'Ha6i=1KhK,^8&00J4Oc-dWi$i5-1D\m.'.^7%j202P*
%_R/@&I\:eMY;_\tpiT*5LdeJ+!qrjqeEVrX]GG[26.mY9`'2FUBE,R$]oCKa2rPnF$S1l5r[87^"$CEO.Cd)O)1qLXD8aVZ!UKNL
%F+2tb\omb<D@"#?:E,gtqXi?)P)a@97+;Gorq,gG+RYG<E.<uP+rKaE^h(+DF#/=].mZ+9j#-$TB+21DS<^?os4g?@e]<*.r&cG5
%V?D;W6.N$o*WBUT;/-k^Z6F[n$3k"Y&*RD!&Yllnf-KK'%`$J;R_\kHnVk.FF=%5B,<Sm/<48R.5o_4X].!/I&GiJnX#ulSUMI5K
%L$W@piu#2i,GLW)?&a[*gBD`4BkD1lIDs#R_2aFG.trZgR%S_2G6'GR`W%#H@]gINU=lu7buD;U&2+]hDmX?!ge6=iS8`P'8r.hN
%2(C5Q\YbP@I%+Q>K/_A-I99?fTt56T.0t$Hc_;IB1Vu3*L*+eTZjKHc<'lst/!2Md'Sr&C#KE&(\r%=F3.kq8):H@"[J\C*4F.#Q
%B,a-g_eJWg!1Cm)+d(',N\tf8EJi@Uh8SDP[fc;l7YATnME8:)'+DQ(!_ii@/`sI+FNLI:Q>U<NO\GB2G`egFoiqQslY.+i:GGRF
%+d]mT&>16k80so]6M"*EeqQP8#PBe'WW5`sgOlp=3\9F2F[/G%fdrQ!a'1h`PZPIGN2.o#d&UhgWHC2bCFHZ8iAeZ[][@gjaOJ*c
%FMHW)Zu5MmA/ep_@nC4+2Sta-<`9:O[%O"[SP_<[[0Tr>&>B,0"mM="9bGrmXOrW?IIeVQ-SGuLFNQS`TZKSsD1Ep&m0[=$!fEfd
%8gA4:E9U#?.-XCrQGUT0-T:k;>lM'ET7Z'l_DSPe(+_%><+[[NDIPNcnX?eKSo3Dr$ks:I9j:[2m!J\l\!R1?Z8(NT[aVb=N`q]P
%j't%A8iE[%_-@!RBUaM)d1GDj8(*AL6X#6:$RQGPq?;JP=O=]$.03R[>RM"Qg(lsm\:b\kZ^;Q\pD"jdOq):eWrP:'+0(</8nTO!
%^*6#jN@BYeHX5"j>D>PPO'FpWk6)9'WT&`^_UW51rMZf2[LBJjMNq^eXk-3-?P)(i!QDcppfpMKjaJtNc45=Dm]Ot=d?WF.S.DSn
%kYt.N4HH?U&&h*&etu"'$mYoQnUd"s&a)1XqGVaInbEPUDtMLXH!'#]GFV@rd'-Y_S8\:AZ]O'$H$AtCPn5-lP?gr.[ee\E7"f_0
%V@9op`_En`&g/Tko_M[-,H[?nK5TE:gBL0p?eWPPmYTF#')0"PObOL=hK2M]]*cEUGLHlVF:de<XKh)5%PujMB(R63/Z!n+h;?po
%if6sn6$CIp#>k^F'+T2QBj'M/YWKkY,sVHhL=TtK`#)Mo3D^fulM'>5n\,&%F[qM4pgkZH0VlB5DL]+?@3$ahklWdpnU[PODG:jl
%`=:^uQ`Br0J))^>;gWtmfIpP.EJO%mSF=)9l^hXmHsN\bDI&<Aj-A@'AfskdGdEXF5$Tq8"R@52hDVeA0O03I7^L^C/1^l4[NDIe
%f>]R[ah_c(*D^h3+]d4"7`;050eWf60#+*`_[_b+am:&X?<;g.3[`P,):-^@*:^N@#<SLZf[X4i\clPQ7@MD\U]$hL!&nKJIp3lg
%0P)T,WMNjd0e.C9c`lo>($`=_XkbfJ`00.qU]md_96=#!Ugba`5;%n;CFEad?"*l]b^rh)WYJ,MFRMhR9boQXmH_7Drrkce4Wm%-
%OhV0F"KELc(9)Z5&#TmtZc9iHU)^"/7V"]8NtLjFgO(FJ5gX!n5)sfla!cdD@p;Gbfd`GVFO`c:c2<L*DIM-"9^4R>%r!X"8b$q7
%[Yuc(j-o\#A&jUr3ZVb[D<@BN5m7ja=q53TdqfZ^nn//+pJ4H4qOep"d7c.B4pi#-C3fB'6_DeuWFHbL`RI(C2\:BU;D)N<7f,RI
%_n(AAY*"jRps*[;ZqFnn3>$]u6OR=?.&8.K6s(n8e[I6T&&3pF`KrhVCBfL,<(g%7L2#d9p0/(gk:.l):=4GPOF=?2f<rL'2FP.I
%2j'/HniEjYQ>i<bDi=G7XSsUEqbtE2:kQOUjY+=D6i$`4dbffUV_S4pkl5St%Ze<m0Ddf64nEH!rS2s2pQCTlb9(U^YM7FES`rp3
%n8#*(f[.BVrd=nnYZk;c:/`Je>"eMQ#3g?7dqq@L<C%D"Ns/6WP*EHPSqA@Meb_\>8t1+^^u:";LFXgV]kq,c@JIeuOEC[jNO11P
%Cc#t^?XqpgKR?ON_Gq7GabJ#M84^QabLY+md^"JV4P[+d6TtFW).4Ol2gY&^!G)I(K`GR!15(P#di#L&e9,J=l:fc("/LTZ)g^gQ
%qKu/K(7\m>Y?t>`gp)oP1HbAuC^]C]MgBkG[KXtmp,+4f1FakN%<":U*C$ke)b6ZW8CpTS;WM$gUOO7f2,'d4]4(f9SL1JAU#E.[
%,l6g>O<(^B>$^Q&]APPQoCqO_p>TO9k:2baoaV1g=:D<+k.=dh;_YY\W>51'I61I3pme3UN7dK!%AL8or6a&I2plc(8gf:#Tp^"<
%c"V<8fY#5Y7B=!&R6)cYl!spe2HT,sT9_%h@9a\dYd%G4BF@'2,O+iCm)I]HedPUC$)l"Ql/G`2>oa6KS*/Y[I'BPnr-\42`LBV/
%RXLRhOI(QL"^hge'kb/3d;2-KZ&NUT.I\18jckNPSm_s_8RoDdkH]8lh"Otd:%"r:(nAGW@%.UKq2[6``GgKY/%+T@ciW-*j:-!G
%El_jkS[L\hrR5W07>6\3JS-jZ4lMu.Sc:QQSo7BmD='!G'JGC"LY;+M^@sAcI[CMXm>;tia:C)g[ls?3nG+i#rm?c&gcRg0f^HNK
%CX7HHm,'2+a&2@j:VP,FJ,?lKs)gh#PPOkSPL_O,5)sT'0"mj[F80=<YB,M5qraFTZ8k4+)fd>ZT7i=oPk3f[e1KD&+l.!QPCj?X
%b+k!)FO3In3OHTHe8`A`k[@)&7%`oQ[L_]BLCN9Tm.gDP6&h`4iq30AYCC$]]Jt[j=WVVC(PD7oFF;0XdEK<h`UeF>5O0E+s$('1
%h&/lcNUG6e"(r)cZ#qSC:S=#TQ/)E*1]e@X1.!h-Z9R8$/iThkNAf4d`h3JZ=LY0c6OY[]l&,V?4q;!^N0@KHML<<O&:P!VKNra6
%E</2rb1JN4Wu;S8PmeElfn,OHX5:mALYu_K'_[Jn[?g:*Hug7PB\5#(JrguJ,\$l89:%[[C,+%m6+@d'23,3g2h^(#OJ+SuSco^M
%/'.#lVP\.@;^NSaSY:AiKb/Z%.&K=t<@WB8#llheroh]Fi5s6*:fBK%`*F*fSO'\E+6[hTh\ua<P(P?HDa7!Q)NFb\EEM/.&Y@;o
%e9=:m^4sc-QpVDnk*I"%+G^Gg5f`@C1,_sT@PYh%>hTa%YR_+?)5/oD4B2k,jgIoI$?0ZUDNb?NFD^gb5Vs96`1Om_@ea`qVVs@k
%lTTcUE%9+[UF&+G)98`Ilj8WP2YhnjTB;6cZQ'>Ic76a(63.glQQE/aL%G(V9Dq_j1%aiBl7piP:U/PRi[GV<Vae'Bb73L/@V5^J
%nH#F`e"RO%(23[9CuH+WR*Y#M]n9.JLR1=#gMW]a%K.SpD!/9)Q*5i:B9qR_PI!.>gDoSC)-.A874nl[2D6X"9Y*4-7;Q4MkXXg3
%j!nLd"ao5%k2K?a,m>jC-N[n^^C9Mcg`<>^E_g8l!_bYfC1BbJF+peLp4VI',i&f5"h!:I6V`[b\cs`6K@*"m^Wl=\)cSt&/m.I@
%7b.=^\Q-bT1a"\ed>#]>VQ+(#G^XW;#\i&\*3;->\S-#5_J>_kE"!RNSeUnO!UoeYL*-^os"&C=O]ok[g7;!4I=:?Wj9/L<.4;#]
%VGS+*:>BOQ]o+nQKOg\cqi(Y%F9FP\B;R-#+PJ2f1R/JA0;;#.[g5JPcT%e".,:Z*![Cr__mhN3:3K(=J;S51$_VU)"phR["rK;j
%A4T9j87YsW6:!WJ7%,%r)$GQ[NH>OrZ%=PH(WL%l<#m_.OtA1KREgY3NKbcl@Z>QdFrAuJ-*(DH.D4)7gPUusd'9XeLG`9UJqU'O
%B@ER'?12s2"<<`XI71.q4@llj]^Z?T$FhB^$Y43*dt:IJCSiA8+@FG4]Tk4$5Sh9R39FIE$E?1\hH,5ZP,"RF?'1uE\-TtjK$Wrf
%=4%X!]7O6thN83\=W]#X`VgO,Ngoaddl_nhB13Y*m5`PBWpSJrC>K;Y!`o^M!HNEppEk=rW?lUJj@,NPKrK1JgkJC)q)br]Cduf>
%K>p3''O#f!bH"q9aQ&]*,TB\c)BKN97,e+Wb`?[G6k5kY6!gd6+K#J)>=NZUbY[>f^KM,acte4:`^m=MRQeWe=@S2g.oZ]T,Ug\\
%h6E?+d@:ddBlWB(N,Js"'m51,LBQ"SRa@uk.o6\i)<d?A>/LoD;H'e-Tch787VMmB3&A$<"ui2b4/1*<gr,-kN(MMii5@'s?sG-u
%=2$gHBL)e[)NS`!XVfRX/AQ@`I)p5:3+qP3me&*Y8-KY7d%krS_+3uM5`JtS(dro'k@&>NBmmNUIJKSHMT)70ad>X>Z$&K<m2i)4
%`Z.AgaUH]R"V$in!KF)8+agXWj_":[B)=0@'nf^\$Hg59i*?p1%&c=botrecp*%oj6F'uNcK4Y#^rRhBbpe%K@WeKnOMoF"-&a^C
%Yf6_*dHmd1e@e^]9GN:G/1c!ND64dQ]cZ$d6<o5'B<5?!enW-o*/JW7e%N(T,;4#f%]5qSjZe\`8hl_b"5FUlorsm]Kp+V!H&(u7
%@OkT,oMlA*0</"6"Ug>]ceNgkl#aP%mI"8B1A$g4K-r-]#j+?P"CL1;VoEdmY%'Oo:/AedK*\,_<383O!WdpulR:1hGl%,I+^#X0
%i@enE\H_Y!-bBRZ$PjLAKq]6p.]qXEnkjp[U!Wp*JD*=qCh7;$F;Q?7S4`fl0^uBu`Nis1bd$e4\Z.Hd"Eo/TV=^$d@O[beY>Qsd
%$"K2rI#<fBLt+KW`5F$V+?d!3".?tr(k_l>&LXr%jrm:UVAI3RBgqfVq9?'F<`f9_b,qCS%QuXYr$,qCI3g!"D4TfkPq-8?J>J>V
%id7t#kho005bXAB2:F_rQ;Xr=P;<;ABk;6RJ-C2Z15M_md/pW?jd]t@580<KN/qA4jVAMd)@8b`fMCOdqkpDCq^?>+]S1qAP3k<J
%LB^2W>Y(L<j/2/g6jm\DI(%5;6:*BA%@q8c:cQag[XW'GG_cY4m]1#8.hYV=3obRhose/]&otr*;`R5`V7V!-2Md*Ti!RUfXg[QV
%C?r@\!SW8$^^['S!jnUe8O8ok<ZMj/S&/_>$D?<sOg)tf*Xmo<g*CcS.97HFl0u/"pXb*7/A/j/3bsCrAHp8I_4[dK,62dh;)Ta'
%6@j?GQf'5kH4]K'')YG*/^(uoeH@kjj?kt.Y4akfj#URUNTqY`/H\*PMObZT>hn]RiZIUN]C)LXj,%5bSmCsm`DFbL[tkSSU[K9a
%<c_!_JOaXM/W-TfDilU]!<Ue"HM*kX32u;?+Ymmg@n0YSHEMG?13Rc94ClTH)Cu_jH/2InP"Jdio`gIc_/(-Je=S<j9h!D=Qp80B
%",-P@KOL643ba!JIMGL6Hc<@ZiRk%aD_$W(V)0r[%)YZ8[:F:Sl8fG#@hY:7"CXK-lR:2'EHA=8/1OH)kA0soL#V<RT8;pSTGV9#
%?*SOgrEgoto]E<dll8OCN<S<o&r(AK6UQdk"u8uNJe&@dgJ?Wo'8$P]V@6s%Te.T>.Ert_UJ&[ZMBCY:C`+?sKnB'W5i_ernHFbn
%@`4ktD]?'Q-AXB$IS/._G+quK!G"<4"^YU+N[`.H[V,mMR0MC[-Hd4T99ULN^n@'\^.K:!'6>fVBb"UF`@=#%l8gXNE$?lUgB,aH
%oS*`W?4k^3ZLZEnPbQh7.X5Rd:tBB4&nYDGisJ0!=:)Rm@41G^"_gLiQpC%A&L4L@'m\YH4qQ.mJ1K#c*JgJmJ;sY9+DW)h;`b2n
%`*JUZZDL&E"%#J79ku#)-qX,j_I+K'j=i*!P`60(-Al77!%i&1Y]eZ<5e3j$"+c7l39Wn];NSHinkn53K5SPFlktZA<^8\cC,@:-
%Z$?U)`U;9P*+]d`Qa*4^6]&*$JS&$Ho\<_hHB24_dWCY/'Z@*sP=JVPb/(/pJf^rFn,KQ<7Ic75PckWL<eT9.bKsCOAP0i9*=@Th
%k9,#DfL,ESD3t`bFF_Ps,mi"Ha9>"RUBI$4[Li39fg>cd)'?tX9kmafSj#59$t9?o*L<RoOlXmqY9B4;-0"M>\8<$F&!=hoh="R#
%##s.u8rs?5kW!)_<d\(SVg/P&4niV_q(>6qH')#+/!lSjjh)QU#jOdcbbn3@f;";VQrIN-Ub8iK4t8(p,GOX)Ff%U"W=lue2q%b+
%7JS]KB1%1uBG6]Y%f7>i6/Gi<WgTkBUtX3TMUH5`F>ka_\FX<j$c1W:(eehi,2,H?0LJACO"T,`m>R1.9GXkVo&p0?;Bd"JV+SqT
%5:Ts%@4Oio31BZ@Z=Q^H8hfjDk?X:5a)u>S;gmo!/tfLZCre'"9XftZ%0IaT%!T6h+msO*a(6C8DYY)(/HJBu(:keJ\-@D11IM9\
%WF#jUIGDobK/R"-K?])&dZh9C4#K]LbVlY$'hGC)q8fB(@:]M/<TR+c]^Gu969qB&70Q3XL#;`D)iHL9^`5a<;H\ii/$1SjE]($R
%3eI<0O%3=_(+Ji@"M75^Y:RCr!%OZ]`I4mc;G<&"(;6<o49B/QrE,HOc(o/I7*/<TEK0U`im'f-VBQ'[8/3fs^MU<U7_B3JgOYDA
%D3tk5^u#&`BQ%JX!7RU%$ro#5p+kDPQn'Y0HVuNEe.1X(2Q"<u[5O<!c&/l[-=u@$Nu-9<f^1(^Kt%p+[8@922_'KP(?/;>&ja])
%S"^NjMF'2!fX/nQNUR%&%T>;^-`#>EHW&"E$T!%X5WYdV8@a$:oFG_U^p*kIqeoW27`iZdWRr;+3i.;J)`seE;1VKk9"!5d(FdL-
%/2U/Y,E!/N+a4j5_=b%(oMf\rU>nbOrkSS$1/\cGN,d^[h=?R!4J8;Eek8<nMeb,VbG0F7GVFC:i7!G?[?H0T%LCi\2X:GZ#XW#q
%J]_"*?m:Ti^:+!KO%!sJY1+=ZD/j-.R<g>#`nF&b=J>*NC6M]\!!YJrK^lY9-UV/!aAD;8Z2t_aSkhpMIY5fqSn2lp-ngQdFW4+&
%>,f'.-B_Z>e\4sCPb!r%iRnrs*#D$ha5As*`us12'$i%p!Jbs8j:L[ZRUC*[[1i&gHRafVFqJOZ+$.56s3q3>6XFJ'E)6@(B["Z3
%ekUX\j/RC.9N]dMRFbZiHcs`>NHA3tXfBS39Q$eVGR%/k3TW)%XcSXWm]haD[*@TdAB'f<&f%bdWB@I+>4GUihFQV]M7:<.6Aq]$
%!2Bl?-*e&?Ps_Ff-:l;\+1/tpVuf9RWsetn2$FN_feU547-u5Y"?2BpD+/2eYVie<SO')=oG(1,0gu+S-#.%ZCjXV2RT?3ig^"bF
%IQ<e[kTI0ufc^cf3g=I.@.=4(V6'6=^n;#!-Ol)F"+^R.Uk$n$6)b@`(LjZ.(YuNn$9,#c#;L:o5e(mG8<I.?c2W<Y7F(=_CkG=8
%Y59Z[^#c^@P#F:L@H)iqdp(LA!.h-$)-1lsV8_:gL@XSCe)`(j6V&hZN+?#3\>Xj\\O2gD2A\:o$7g%q$>;dKN3#*XLhjb69%\8+
%`9"hUf.H2J;mrt([1Y$RMd>/EGah+=EXAfi/HKTUQfR82'<5WKX-l*%:9^=Q7G)9-rH&5l/]O\1\7u,g9&B]1A%$/PKN]!?bY<b&
%D+F,0lY)XC)3S!H*E#L,JNChrL,RkR>0rK]";fFHV76]*=!TSu8BD_!<dU4_:3#(VRs'LWW@Ym?0prN9>F$I3/Ya-QUmPR=(5mE.
%2a"?3o$3B:a$2j?V%q:o;O.B,rLJV]R\XUS"[%??5Mdja>AYJgrE#<O0hJBN3%ArH!+JJ;h*G^0N+?*r(,"_k[Gf-<=]*0!dT:09
%4Ffb?7dFe4*R-RF0PR4=WR+LN""Y]Ak!TWq/i1>lf5XF-V,Tt[CGJ1[2s!+G=:g\I=a3,(X@:gAb-E9uT#MX1f-\,f1b<u#T%f\+
%,2V*L?V/@W&2a+OBrQ3d5m2G,nrkR3#U'?OQ2-[P7d<TB8TdJu1U>kF%<-$\2E]23pB\5UeVB7(7E0kX]H.!7(1fj/I*aB:>mXNJ
%$]5+F]sEc/cpZGOOtIFqL,L..GoAK6f[o(4C$3+1daAl$+&iNA-Sk@g]U!QI`M(MO9htpT";P8E%rFk$6$5G:85/#ZZ!D?uncad"
%MTCu?P[p\8S4tKMiunBt:3EAn.]S!XZ)TES?(0%'mt6toL:qp@WbYkZN.h^!)a!-kL@ct)U#c]Pf?5NOo/a"5J.!O2HqFsjLIRd]
%NAk=!>-[tW-$MGDE;tpJ'K1\.k#DoJaZT$7@n)3cde;q^j17QP:o4!$)m.dR)=mp9,&h;WPrbC[Nc0;#682g>p`[@0pL?=no0u>b
%JX)"u-3\hK$Vn*p0tD:6^KjB_+dIAC4E20J[dc!8qEfZ</YVhB$A1pL*p'Lj=n0"Z&eA"i6e;A]M\uOuCAlPS;gJ7Y>$,/7F>IR%
%X*RZ;?5!+'Y.c#jFReuq>@c;&8DV2DUUF-bIdE_BEhO[\&c@?<86=H0``/3gg0?T+\p-h[;^E`6YhYHF5-F!GNTQLNOa\k4ArEr_
%9a$b`\RGBN1sKm"$@23d2YXa#K'D+%-Cr7G3Mf?Vc'QHJBt&Tne_/5h`l(k.#0>klp?io%#c\#^ZBU)U:1tX^A/a4OEjgi[cD?nq
%Q&Qs2pk<l&pDRiOVPp$$;1T7Z2i5@IQE.gfHMV$@:\c]3%Q9Zo7CGGg1o&$-BFV=fk@ND#E`o-n?s8?jot6Zk"YWBCKm(JVB%l>-
%D-BC@>9`8'gRVXt1[2;-:3J-(/;+t0=u=BsZ!a#=2@iB^#"?queWLmjhY0_mTWB.:DLH#WIPqHjWGIoF`DqF#@7\KLb.>)*DAPCu
%h(Aui8DGWt=dt%KWs@`flp'R@(!Uo!a9'6W`&qik>c$G+g2/]"!T^3Bj#lUI?tmlWKe;g=k!:Qa\"t[C(rh<n`hf=5liA1NQt@YT
%O8Vuf#,s3s1\r.s:q9S1&s"XoA-@<]mB(plf?([9p]q,2aBX&$?0@pAkRPJ*\p<+[bQ>?Y"`BKF&:%/J6#0&F0^H;g.0dE$=[E:'
%%aMT^7Rn6+ZHLrpfiXJ_YV;>qO6/)?E/Ipm,M>V>VYn-POCe_oWH#mFM-\]rfpch$KhOI:c]`8nQ#5!F&SYJV\J60dXLiA;9BR@l
%.oJ0;[S&>f3q(0+=sHS4q\[Ve'/H6]cYKC[P)3OInV?+CZQ_Z"mrjl'\uZ0K*G(WVIPdq4d^'IO4,Kbu-[->q_!\,A,R;j7D</-s
%*L^,J/.j>?kHKH*7F]?QaAi<+lJt+6aHhR4S0%8>UhN@NC0FMXTYcLap1g3o2CW]7.cqGg9TPmN?rhMBZM+K+&IPn?aZ219>g)&/
%79XTtAqcUh%4!KA\1gFd(4b*0n;%nIVe(-TL\:9@.[bAkfT6I9,P*!<4rN5cXh$+-+PYS53$>h@b%iNIkr*8&6j0`&2pTffml1O_
%m\/-j;Ht953:N):Y[cs19.kAT>;C8/lOo*B`_JuZ4$iS6bPGG-Eg$/()Sg';?aJ5F^l`QMVUa[P6S!7L2GO"s"=SK-!eIaaa80M/
%/'M5B[+N9<U/^4pD^h\]bZAiJTOO9t0eF@R*7MOff25jsi$ll!W6-Bm/d\CXj;HRO&cV:,FXt6rVVclc*[%$eXs&'.2i;:'<6I>.
%BCRN#&!p's\P)DW,iNn-,b<,:_6dB.'_Q!Y^qB)gJVi!K\nTMY2)Wl_e"t'1'K>h/DjA2G7Q4$eZ`-&AY5)V!@?+eY+%fdJOXgig
%'UBqHaW"u'*J_-ha#_cqX<be`&K\5JG@a6tTUGML1#6Bh7ga[gIH=+FhsW:4^Feo@+C$_`W/Z_Z[)IP)b:X>K7TOA.UFtA%$HIMZ
%r;#7C9t9,kPrm,79i/7s&h(.J=K%WS>F5+IGVm&s":EC&-5eWobn^4WjA+dA`_0UR).2H*"*Yrbil-0m$7f#\=HMKn,F&S.aZ7R9
%\m>*.?rVsh2h468mF:mRq,kB@ACu`REqQVte$s)R#hW-L>7=!rs2g:"kVKg&r<"!(Oh\/`oF^s2LbTa/cEoP-Bn]_eKYjjek`Nhh
%PUc%8L&7/+8d*tBfO*FEa9dTlSdD9&SJDMQLGO$ur`6SS)InCj`f-odmJp#t,ld##d`gAoi9Wo@>q?2C<p+3U1Mq,Ae<fKC/;VLr
%)CFj`83&8]JtuEA74>\uGM$H/AWb*p5m7oH#pCD[,)FaudOR6J>FED)<pRm_s'ZV[R.3`I535'4Vd[:2(G78h#=^ZCL?$Fs4O`Xf
%Mj[D6njoMeqtdDr[5D]m9o8%kon;3t4djN`hADYM=VM5gKGI3Ha_NH#b(i7'0#=s1a:'j.Q#+_)iC,Niib9.Am"XUE#W%,I'\(^.
%k_;Kpn`#rsSD"B5%$Ec0M\N$$PsEGBh#rF'*pff3\K[I:A401uN0-:@bTeGTVro,n-%;BnerC'5JX;=#ejYE<+X]BJ,AD*&8rch9
%PdS?eiBD-YI`2IDr:8`TZLQ&T`QHZH^]pbMM(Mh:dStBFVRXp?[9_,@9S;+:^RG]bphcEgZVS^*2QW*#<?Q2G!R1,Oj`lH1p[aq[
%[G0;ns/=1I$8VMcR@ZRMG*>#VH0,skS)lSanAIN2j!<2qL;1K$2rW-ACrbpY=E^?8;HlB!"?NpJF&N`T?;FD0EGo=<VE.'*c[Lbl
%"nKH:-H,-Mkkb>A5a%OX*_[T#N4#WiANuI+SBNOX\1CJ?[)pek"?0"b3c9p5(9`X^9+<nEB3]-=7ELeSPi'KB#mMiFX!LuhTd?uG
%o6JN+'?Qh3,XgeY2H3tK]*NFoGHn5Q=5(ii9'BOtE0Y;ofA2)`P>[cJ].>)@oI09P/IFKK;+5)6[9XnA2#u-b\t9j1(.^9+=?=sb
%:D'P0XSiT*$'@Wi-h7"bZLoElHtpf("nbHa#bXHd:.<dNfPpZOp=i5<Pu(+`6"SbgEFnOGM+77@?>#=n*>@GM-(l=@:lGWNV/QT!
%8i7c&E8=B^:?n]I<(63.5$4$ZOR5N>)kf6%3B6V&_<$W]_X1qq"UFWb!nrl%%P&N:Z@HK^Cl/s+#^,O79p+,[:Ml`D'B%A9CXr[k
%9/#ukE,8]9-]DN7&CHT*7n[^m4`j_sR=XCD-2(eo!upYJ8cf4/>>=r^$nJW-AO&C,ZWGpbS,%o*)%U%EGfta#-S5sI(L^8CV6EEi
%\l'1UV"2Yhkci47h#oN?;p;ogCANRT[nOK6!_m.W1=QGKU]=k*[&LmG)^Y"DU^<b9R_LE]f?_Ri)Wq[qiS&sQdgIsk;3$Qe0O?$>
%D=V,h"_$<52T)Lo'[l"&LP//Zh,I#Q.pjtI'emO;,Sj@6>"iSKZpWQiW4BacSr,=T`/s,="9[X@LKLd%>N7dsU)-NT"W[m@poLOP
%R-eSH4r8HfYZ$?$8C?IfFD0U@C$,L;%G#(P/AT=pWF`"mkZiZsJE.EB-)e@0iT5o%*>0)KS;o+i.r"<X[T`%,D8ashS8a#@>Y9dr
%Q1N8a6=E38[B/*QTO/Ta7UDLe/+t/0,>N;/9"h#XVh24K_?;\U0D75THHK"k%9"mJi:b8]'7H8U&:e..:gF'X>Xqd3_,(,gIK4dW
%9f\\PBJfs7>8eVn;5A7no4D+;paJfl&-$%J_!r_/`n$Ur@i=/!brEj>N\PNr?DR,mehe`gXsM1dH9D0>g9N=Gf\d>i&hsBnNJsqu
%^46QCc4I9`2b[R-U+p[I.houKYFtm!%%cf-9UNfAAaD^5R[iC<V*%h571QFj4cXJbF,*X94WYcf-Nq14`PLP39feH,1UuO/#$?ka
%N_$\XEO(\?KG'&pIl"mQe:7_B"B/bn/lFal(pc=Z=qQqt7U=EGDCp1]KVDhUInB^V/AZ*9"e>NbQa*t%3\>g'KsmG9j;EW<R@%VN
%Os_FaAEM\5]@kY&ALp#uG=Z:&M`I&b#ZgA;JDdu[hr=972.g*MIL0jp1ADbA\7I!-D$sfT-pZ1k(Z@Gf'o'A5#'4&3JTqdE^3Bd]
%!K\K/M8*u6dOm@3RNBf^M^kBo][Y$"NfFP#2+:*W[O4rTd$]Z7%a[?@4X%F'c3-u:fOJJ7#2=N:LVRQ_j!S+[nld((+/DL@">@m?
%\LLK#TJDiA6]QFnf^c$rj&OPXPcsPSU4rc<8U(37.iP<-ZRO6K,$DR[\UE-aZo=D5YT0h!B`4?lScENFiWj[o*tDoT\ND^m"WHT,
%`?7MJ?$ZMo`r)E2DT[Q31f*b?GO%*';;$P:$qX'p&t"3Z\l,kdo[DjajA:eT=Fa>+[E/XT:;3QAnb4=K`c'dZ18bi=$EBu]Pb&6h
%N\re8(oJ$3k<_f@5APb//BP%?!MV+.4kpc7_/'+Bm%L%Bd4+Xs]777V#=E`(Ai3MZbG4;CmZ,\&K5*:p>_X4Qg1:""-\p(jbH9.5
%*QD<i8U',;b8i_d1t2#T5c$dS'`!HQ8'LKkR8ZD++=CE-d1&[jqVE5?0AL4$1u):CO&:?["3<$`C2SS@(\m[VG+mi^>?#ul5T>:r
%ch2tQ?#&G>AIZ-WEW\V0a7b2hSmuuUW`1ns)bYgc:-W31mJp4upUdZr`ksH3)@?$n>B?<82Z`daBo(;H+044W6M*ZBR-n21Q.<3U
%QNNRW9"p,3%_hOkJrK(1l<JG)$H&Y0ApWsXn*AX-B1:?_ZpiK[<<`$7p]P>pTe*^]f(7`c/Ie_tj0VKNB5]K0TEsnh\"0SYqRi*@
%c)&IH<)k=1/a')q;MXhLpT`;\4\M(Z[m2IL,LpM>Od2?SZ<pNY__NXL:,aa6H[Un[_dIu:Ptmp>:b0FS.A\=`%Xgkr<,<1l&#EpU
%39oQ2kIi+"UI";`4TZc:Qt3DNad&"m!<XAg,-.-p&u?;&-<1JiKmMfM8&\SZCn3[4+EAg7*nVFP<oc!A3REL#g`N4Y_U.Z6d!<"p
%gUa3C#jlTAj01DY,EQ.7a2sR!7ZNH;iES]"#KF(-0>:t?]d#Ap\k[ffM^Je(Xm.-VW:>coC4(18`q_%4Nk0,<$oSd+GTfZli.6t*
%2n+)..6r/bm$h<0mi79a8Z*V&(4HYJ%&lK6Q>`[JA;Hf;R,A$0(hT2pZ7-l#2^L%K5aO8'iP)?clP/BGrsV:j>UkWXk5iM1ik3?(
%G4Z`spqR9DKrI2.Y(4JUj@O8e4c[^ONqje>W!4!;(,kVEOu5L[_K5t2`C=++?e=YI\(5"W#n(n&#+7?:>(M;i$<$)/D[ZeM0H@T8
%8c?_437Opi[=D=%'*=j2#*QHrTB._#"@<A83#mW5)5LUMW[BM=Jd6N[U&G=6r-h/3EW&^_!b)u8rr2eS2SKkKKgH">1HuJo;?+dC
%_sn>C1Fhabn-FhI>@Z08/pG$.+4Dif'YQ6V?X\I?:&tP&2`EN2ck7Va,';sh942t2^2O=4#Z!`b&;%o<7.GN]f7rjJn;+@FKCg^K
%?>h4u!b28/Zp?2.jA=KpFU)*^(5]$7&4AjRq:-%=_ubPoKW=&KXq-"6aO\"JU'_@dm$DSR9ejL@`"(9+:QMO60U#hOE;+`F[1;>'
%f+X/]Yt$%6N]/?:I,"<B4WC%&ZOb$=I4p=*Tb;WNEUDmrS@Ij`)u]l>/A!cXZE)CWLdT;T:)R8%8U-9V)86co*)R3ER<4lfR7-MS
%654bJ5bP,_&Up[akT\0`!'<S)'K%o;E%^aqiHSRl]7gfKNIVLjiq,3UrC<]QK4-&O<24"FDI5XQ;W80kKeQ9=9k*PAo%#,Q$Rac0
%dOoq(XBO7b<ZF9u*&2aZ<Vd@9Xm4Php:)d)C$GeS0Fo-?;[u28pF#^]iB/EF`\mYL5FYoG#<iqT:@M9-k!cQ*&@>,,#Pt9G]g&3#
%1jf:ef(sQt*.O"6#(W(@Ij(7!a=bg%;OQNu$o&g?I=Q](5Y\[@Xc$XU&4XMlX%>[<%ucQeVE7]"b"`<[O8q?8rm5<)eP"YcV!&b_
%8X#.;ae]%4OLhAaV0)2MDEu,qMCqjP#mSFbc+X]<6Z]oi4KqLm?$ODbQ^\PEq%cbZ7@k@\Da)2jT.B@p[ps)"]O,66GVA-4Bt4]@
%mP?KBhS$E%]PLAnbspRJ0sj(G,>SH@m0TsKI13f0LmiC[#!;J0Z``[[m]@#(Xh=)S1.NhM(K1*P4#shH5$go[-Q4K)%5$lc*:BhS
%4li9a"=;I#%qc!6#,#B[".rbFml6GB=WCZIbqf6="mn[U-HADlAI?hNX?_K8k+>I],BJL`T;u[HK**G,(Lm.C@t,NhmuXG[iS8_*
%e$i.N=@#K_/O4(^6c\U!AuOh)DfeZ[kdB(rN@u]&/hk8=,eq@(\Sd]<n7EZPa$\o0_2@ZEIaAuW5/91*aA'97,tP%&X],pJUj(;;
%1I.9N/9$5N8]E5]'kn.U.!7+hl"?";!-\__W$A]X<k]VK-H4h<EcJJ]MqFOV[a)9/b;ClIF9?.nis;GK=d%\($W#?^PHoAdf"ocq
%[scl1:Rtq2*cB$Ul.t/&jH:qiqKuKOhKEt]i&J<+cf_K_Dl5ScOm*,>Y+TAmeTFe\69pouKD[@u#"-+KM"UB"_HQ7AeBcp"hV1S?
%YNO%Q>t"6RD'68JQnk[%G*dJ<(iGEWPI\^j!+;KJ5;,.!]Vm8cd,;*f]QMEj^sq\H[kl31eNPlZ[^-/)QoBgTFlYe?c8k6^-@Sf!
%\86HO7F9>eMHXnJBZe(aXdQ&B6(,W=_)c]K`KKa-7Mn:]\jK4k`RG`L[Ah?8"Ka[H,@b9/AJ715-6&UeBsm/S)=V4\d1hTdA);6W
%0O?-,)ru,cMi6OYD&A):A)KSGM0Y@RLXNYE0Eb,^fQ!`<N<Xd!4<^HIMTqR:I,9e<1VI6`?6,-1p^8M[EBI<F)*\mL]$g0#W6RV@
%bI9r?`utg;"/%5H;oB=CnuZlP,er2OVa`?UStU,;`+!<bT]N-<X)[R0.N@MLXpdg1WeQ.<$eYZ-lqicKK7/`CDd::Qp?CZUn1<>#
%EM1FF!H/)s>4ta12ef4sNKNh$Z^,$866]au*0=ZhW'"aW3jI3ODF4fkNrS-p0I:[pCVN)($`h.VmQE?nr57dDN"!m[ab^4fL68r#
%'nB0IP.,K!F0c;BB:N#jNNn?a8m_SP4-p//q>QP$U5FS.Je=9g$FtsIX#?./.Wr!YV+T(P!YBgJLlsM.5`QLVd.3-*6d7$gJN90O
%eeHnYf#U;h&Q!Z]$>:%)aNM];J84jYJJshS*>.WlZuE+8,0U+N3kYq2>\K#G+gkVZa#Kt3V&`!%qCj%/5<rVL+QI#!iQ\Iml<A7K
%am?R[*<URNpTY*;TZDO!,Hk;8AE\-dp_O`91R"3)AHcat=<(.;TAc'5r8p77gWn+abcsMqV*\?VIUR`$*3:G^H#YP\cEB%BJkG-k
%c,;-EIZ`98`=>`2ihbs`gss,tH51^EOms7%2_T!9m!+-I!Q_T.`_Ane>">P7O/7Q#AsZI2-/D6Cl8+dbYa_e*<[PRoWD&8GR^S>&
%5Qi'1IeIX?[Zc`9Go:^Mop)Kp[0g*]%MkJ12ch9t3ba9/*1Ib-_E]O`+Su9uc7r:Qm3\'7ZB16]$]<:8lYa:85"$Uj%F!jF_TB6Q
%';N@$+]--pJ=bjnH[nDOkuc\!+65S[M5tGA/@V[_gM,.&2t]!3\RE@c@d?'9a9I6fh<%o`XEY`XD4E?*d+#`rod>8r9?;BD^Q^6N
%-ntD*&AFt5nS:\&:fc6/WGg\RW`%DuA#@cCCk5osliGg8EB,W"5Z)to^&IXi2]_IIAgTY2N/n&-S+!i7Q\%8WQ)PAZ.DDA`a%.kP
%*2!!WV6f(_lc146Z"8Y[lg0PaFOq!ietuR0Ei8KA%/)-*"D$f1:hp=p+n!po[q.Uc3N.Lhf"EpE*,g5@IE$??H"=T,E\#UKoXJio
%s#&8.TH?I\QmmhCTPHc[BFMCX,8Gjfhj>I3oX$CTG@hI-k8s*2&OiGpF-F/R38'e:3U]'Sr`s3$FQp76.)cN.2IOECjKDjW#Qfkc
%hQ!Me^a@=eD/;ABCB?0.+[q%?*9O*F"UZntd\"SN\/=;:k<]W!#.\6FLRLCj/`n"3RHG&jJunTqnl3`k'Du1sl#Od0Y0l[5\C5Ha
%]VO@TWMsLeA)dh]]uhnjmph4d8Q8pjif947#'7uOk3,^oV8q1R%/b(?s7jLZr9OBdq>7A/)_R\NoNGA&:%[S[9lM6WH<F1\Yed+/
%]Q`[hrQFqifC"XI!0N[2_.*=,W%[>qS1tr>>"3NlGGJ\kkR,S'jNL0A!OPR8*=AP1?AgslAVK:u8>0U.i:$uM[,qgm%81mofA90p
%60W0GOs*fo'/<\mQGs>O&,fTq&^iur2iS=D$:%7>%s%YL5qOj3\on<d(E0bCc']Q2J7=L3lp=u+U!\6o3hbQeNjRM`=$E9A6K;[=
%OX1=\$D5-RdruRTpGWi3NlSPQ:==_%cCdoNJ=7fL;KY6\2l_@C0<80V\G>Eo9ooAVC)nU+9iq18Uk["/O0#\M'VRB1,Y2l!m:&e$
%GZCT-'*>jgpT;o\18%)#/D+l<<7sjSQd5rmdW*",c!cG&ZF#!Bcl\r5`ol_ccceP#:uW+u%e=<V8ER":8M\0QBKiI]+6gGro?+S3
%d#G,(C`M(-e@tT)N&0@;U@#C3UqSLf;^.S$I\`-rVaMMpK8;[hpfB]Sekm+J`r`mO?HA'O6EU+9g0$N+D<H-l1mm9Uia/#H[Mc6$
%BW:KVd]0bAA!$]rSTZ-K5%7-WF>Z!MM(/DLOIn*PP$c5aT2]7TT5T^TUl$USP"V6fokF_Meb$Wi/48Et`AsJ[%'^FbQ2Q]%E]ThH
%WZ[Es7o+j*3Xk]8UdZ7Z%D3bJ9&Sk/Tec(-.sKa,7`r<9epJ1hU\M)JeOsL0A$r'MlP52LUP\!0_f'p'$Lcu540sNoCF:)bD&K>Z
%N_k&M/gWlt[trPuNW'4Nk>LF5G-JKJ,j;/]'t*Ag8]GggJO/@7]1rV?Ypl9!p*ae_)IZZB4(nD:i1cqojHqH%YVjTXmdI$MY[:Qo
%%:"..63@e2[)='<8;"6L]=Q$>"ak2<<Yt/t>iX._s6AYG.&!J90P)t;9p,WWrNXK71\qhiW)a5+V7Qd&*`iBIb:LKdlF(/%hg01V
%TPZ0X"49o0qW"iU'@>UF5=_$A&H*"/58l@qVkSlpYtM@\nQ\b&Vqgn:IVY%sP<Pmp:!D;;dm>0;(=tG*dQF"V6=?em<QEYl(c)C\
%%g*M<<nn((Af\&[Lk)':r0&>ULrj83Iq@t]nSk("5V=c=Rf,-0Kh4[@3C'&Q+[n\El`ABj6Uf?o)%)1"&K*$PJPQ8">NSmtg(edm
%[<r#oT`$.3HoD`S@9$sR;>9%K=C:5)X\`a0Jl(/f8@7'#<kk81k-:8;K`-F)98U'93<EkD-4[fi3VU'=S'QGVZ(79Hq2^6r@+4)i
%f6<Mqk!#hZ/%4D+6O<[sj[u%tXUJ%-e>2?6D&L--g5QRn]Kb-BCJA*'(u1j`f`V:lAm:FmGM;)^:ES1`l03<GRuJ4bBdCXD-$b$%
%?SLh,"mSuN<;*)mY*4@FqQ*q1i-1>-::k$f64"U7joM#Qd[q(Vp4SmIA)J!6\&Qu:#)9B?2dp[*$6rfm"O!%:a?6[\&"LY>I)8GJ
%9d:0D.q^hZ,uOXISI.4t+h69kHlL$iO^_sFOXG]HG]h>j3[Y6a*S<cTAp$s%nPU$05DRcXCjRg:]4!Y+YiH%H$J%uuW7LqS[JlL7
%KYQmf@K".)1WXEA=mN$d)&Wir:q,F=i*=k^,$8YaX_AW>_q&KT_5qugj4)@];kbhb4<R%NdYDLZlg,69O"RQaqOC2E1>;8gDukPm
%PnkN#.=2b[Q8+t031P9aR-9'H34Mdh*d\`W(l:R,p]E"5#QOIN3l'ido_FT#KBX3%]O^td_#/K!=JP/V<#8Y;jLG-R#)OkXKEVc\
%NNAJ`%]Z;ZnO9cF:B"p8,edZ\U9E1U4+i\Gc`S_hB=J>O"c9X(Go!s].,,`jDek[aS`[XbeOMfr_$(J;_sZ33<D,fh*tI_,aJG_;
%<t"gf<QgO>AMkV"[I4c/6G.NY(0V7@7qba\_Ya$UqId>P6g$!mlKPQhggSuU.&h)3-V)9HAf(Nh:.#DT81PiGh"tCqXZBe.dJ,n/
%_oDr(**q(CN*10R]T;0qGB=8rq`I_RbA_!J+.pHRrUZ?f,S(2b+_pU<^>XA7=6MZDlpR*8_H!YjfVJVn.-\YU%hNusXr"/UlNsV.
%pZ.@VI/k-;-&\pGK'Afo]mbu$elBud*1?T`1&#beib,*LoGm'[Hg7=7XK1-><IdCB-m\KWq,rd2O43F:<`HaPF?&Rmon:EX74?^8
%Z=.n3^1H<C\*f2'STF_]80d\9J)Z`/\;G\Z:PDU\:_)BNP%_JA:[;;3[s,V=8lM>EYZa_[?=2`RqNf1:aNC=(h*6[*7I"E]dUr7"
%0oa^)L;)+17/n$7c"MB)o'g)UbB$'sB%dAZo]ND+U!MKnqq&[]o-`E>\*,k/!t&Vus8MI+pKok)1*L5+4T%E.)WtuIA708`m0`"d
%*c>OoL::*R@Aj-kCSM\W4!M7foH#"EPmXtAj<$L;*`o<XU03FOI'!qOSiAO*''7m_OmdR>_pMSAaN1a0,$G&>"F$_e#*NmckV[7`
%A-L^m#K)_UO2lI[<N`Gh73W;%0/3-j/'/\f85k<94.)JnXDA?fP^Hsj1/l3HA;3Fa:m:j!g,$sti^Z40auRe',7Grt.P";6!^lLm
%%aN;HoPj9Brj5#tlW*1E!gTpJ[8ZQjGBXZq!26l]a@^#i.N)djjr2_ST3;)I&d^O,^S#GMk+_?N#CIOVJ"U$c59\\/KT[9$XMF[X
%h.G3Z-\P[!&*0OSoK\P!LQrX[$M*k`G$r2MHUm"JIVZpOM<K@2[Kk3+(Q/mSICc7E#%(0ocagLeV:H>(-?p.A4R5/(lBJM3H5lP?
%&!X3BLLg.ZO75%?VL<V7:-3O-M[*p>BkbfX\V:A[-boTQc]uoHa^MTJCBB0/dP+KXk:t@@%:RCj]SC6d4.E7[n^H8kSM*jtH^'?&
%U<k'!qbV0i:amuuMC,kY'XG^/@:2(d(h*:kMe$.[TUqqBF4'&trO%ZWr<Li83([`J>,djF&mU[+rqf(c"j>)c]JrQcmCJe?l+l&:
%RS_hb*;a74)=eDPq74/@1DnL;CIlA0,aIM_LroH@P9<f*?-1i^_pKkuK=4;u+/j4_M\<HZai7tC5^.5):\7.`Rm"(BVW-6cSO0n,
%9(S>03jdT_m&0/eO4s8gGs&X6_o'2E/"EHPBM^"gWmZ1R]jHd!hA`jUio"VkJKYe`It_c/$'?B0C#Y5`i?e^DRI,9<(HL75;&mlc
%)Z:mYK/.57iZhA1>q,N("X./fcf\FQ%bdLeKphI<Z=<[e@`Kd^\@5p&'%0**_26*<Ng&O;:#;<+5Rkq*UfB&U*EDZed-*bhF.%5_
%G*,GE+ui.L;S^9WHXLU/KsMR]2?lu+3^[R0*nk=Oed'jlpW=T4F9s/es#sG)rUfdYm,44_%pnQ2^S&[&4r%7dcG9s*37Ep52dP`E
%0gN>c=Ws1sJd-,aL*l9+KRsJq!YW=\@O#Z$\l?CVG+l;#]'(DW"sh)8%B`A(*4]@H51ZTI#>T%[V`uk]G+C&9,^@Y7H#?5Yo6Pr^
%<t<N5ErqoV4VLZtVB-c-,Df]8XR"_\.oQ\uK^0$J+so!p;B",Q6"+1,)ooB]6e)@\)IIYqj`OL%qe0hkV>KaUY"UciVDf(BU19^Y
%nOE`PGKI'&CF9F">\gEhn*O\!%#g&/%qr43lM55><PMsmbX\CrkXocBMse(s,DgO3[gOp>McI5s3;A4XaX3FjfT-tt3"'YmP2Xg^
%96It_2rnYC,RWhLn@7?engb%W<(TM6-ric,&QWG(DR9,&RPDoNL:%c;P$8Ylob\\pc#VRf$&G8k/%N5*?REP73"P3W$q`Y/T?f4.
%j7Y.iJ$`Vu;\2*1LPr[_a6bb[&Y@A>Oba0Es.AhV5@R?I0)dHbpd]_[BSJ+#hiCA3r+#RTl%CDC<TXmG#J)\`L4ZAMjbSUK$A.mh
%^ZXt*OPmYt&r4&c@6Dd]C1=a9g!<"-j.?""dYG(c+mFrZ89o@j7:\@Z'?&!UTP_k^ek1d9Q=Cr<aOAG$mTLI7AS1+;r!om%1RnV;
%eNTGACDlDhmR].,N44^N1!uW.U5s^KU&XBh?VBkF[l5#&[#`t@9:LiJdGFQMit?(_+9.[Hr?%_]T@ph+,1&H.aVd8'=q7CPCY(.u
%5/`$RBM#^r>u9tWI!"YfIJ#MN8S$YjZ.k^t$0UUL`VQf4\j!P&<;X[sE`:-$=)LR_0V<V95C]>a7`HfTc8RTWgF=-)4O>_eXNY%5
%Fk;Gp[)VfWT,(Gp.C@*0;R4jI@mA5M+1qGY0KJm-K"oQB?RBKl<:h7Ua!G..(]8s/EMgQ"g5#.A1+[2<&o!2ihFmj;A@e_`.R6G<
%:.<l"69^X/%)guPIPccj<DFU'Wi:C;0/eDnbX4[`6$7%!Co8@$mjID9nWr2JWhN%>_=k4YS!F7e6fd>X57YW1?&Bsg1n;ruFiB"Q
%S1X"\AVVJr9JK9hNmm@O"DUPb;"t]c4[7j=7ItpMg$heAk%14g%3T1=&?8=r8mc^)FBoM]qPsFSnXtcQ.R]G+]#^dA8E$OO&f`(=
%X+5Y.T38@P0I%Q,FuXD$.;E$uXt0Q?%S0#M8`,jr*;*.p*BEX5b.ORn6Z[D4Fe.km#]J&%OMk%%CNjgU[&$`A%'%^=nDt?+R[RqR
%R/!Bj@b49=Ob$(PfrXj['oZ\V^73u<q9PZhb0KZEE[C]"pm"lgRqo!Hpa4W%#3MHJ6/HBDF_)K:,:-hZ0"t;[5cEii9dLA(CMB3A
%&U\N#bF)_!Ac&k6Jj&\&R@&0\Vb+u@@6/.@%nn`fdV?s4m'J,X2>/P=]:T9/JDj`;%jO+ur4riZVAsFLk."M@$Kt2)U0'@Oj>LEl
%C:`ZC46@'`.7(^ri:jAeiqijX-"MuuSr"5Rh4=p<e_<6pH889K"6rD?C)Ik&LTW[q5RO3XI&A_l-?kL/\lj(?('fu%-76U7)?6Yo
%Q))sS5NnJ\>_KnBRPFdG[O\jUCE$$(?O6JDS[t@"5@M<?S:e"MAN%UD^`c'A7b\.M_B7-04u35)Lj"NSIm-`Zdk9Ii1AoD7.c)JZ
%R!79EIs1toh-URtNZ!3SQGjq'6WGpQ:u>q&O!#19ful@[F&TY1!hE;(s1ECZId'n(@1djq5ldu\[mYbESriLmd9bQlGC%9YgT5CE
%n"T%0Y7'#4KTsL[a<ca?'NR`\qhA;S6MC(/F8'd)?I3?4].=aaX?^FGbB1Fh(W#O1Nh_Cf$J[5Wq:em=KlJ"\(!0#GD\)&/*4W+I
%o"trHLXdm>9?s\_MeY#C`G$0Wn:TP`V&./qZZUqsB*\EfP;fYc=Z"15T"S6o5D6?,k8J?9o>$oE:ZmTin&W[F0?JOA!#_%ZDi#<D
%.d@LIL>Y[kE<+].D[p&BMBK'i+gX&9%;)SLVHEff>2#F+D2kNOn0jOFGiLROk:WOckPpqEhP"L.*CWB=i@;k8eOWRCcROWB?t"T[
%@oG>hMZQe"3q\Sh+\un#q^bXp@'"pf#ER4a!,*SRTMpQ$_BHFh3_idQ._&kO1HQ2CN%@;hmL#$L+?CjU'G=Mg@t6fIdm3^H-q<X'
%dQAf/JV+]F=WK=O7k]hBLZA:XGG0[#"6(0YJ0^Y;Hc^ep.`f/KeSA+R]gu(-IQp<VH<i!*I'c/8ZjV?no1jD>r"/*%ZK>id_P9@)
%4QZJL1fYE2]lM?#Lc1OV(OgA.08eh(.CTA.,BU%5!O;J_ZP.QZdm,E?H!P33O+tTkY%D;i\`=^r,/e,5Bq\;FdWJ:LG^'AD-3.'.
%_"'pO4^Z^Gc>RPJk![[$7LokF?18t^@7;>.kAk07A0Nn?nURADO9B;X.[mrHp#WFl`=>aE"&Df>Tjio^$L0ZXT5a!M6SToJad=-!
%m\c6%QtSooJi_<22,NeHQ,n^%M_#g#k(LVoBN;^"ICKI-rQf8hf`3MVZtpl0.2p-\-0Y_'g9iV[F,3A8RsBfMKW,7h68thE!)5=J
%29S@`*r,5OR-Pe&;D][rTSKuC-sZLSD9P\PbhQlmhW(.dYu(^IOg>OGMK%$c%"`WgX;i?cgO^X5gZE=^?DmRHfHB,2`9SnO9<"%9
%Aja&(/u'sR!jk'RTT6k_f_,<!E^SaE<ru\BkgArV[=Vg+cod)S\.--[J3-i5e2JaDr:GH=E.(#!m*psC/K$-._sQn9;]6HI8d03k
%5S]OEN/n=c#\cii9t!FAPudb,ro]BYWO8b"-9\OIjQY.2E/ejaLE>Sm"f9fiK2gS50r6cITjYG&rAi_m&[$m',_p6^<mfmsPr\S+
%79KI?b51pLLIKOu,=2)]2_n!2qf^jh2%1j<O8fP?O&XG>4#Ag89b$b*Z]$,:8p`]h=m^QooS.@/JO>""5MX07bi[O:Q*kAdLiV*U
%7b3SrD0FjJf2Q1,6O4!TVSP^Rn+,AD4\_4sC[3r+g2iJnoI(Hfa:I:<#n_8+;;@SpMktaLmO3[4SaN:hY?A*Bb@7m.Ef0$8op5df
%a,N#S<J>Y"eq[Q=8c!M?G1gtpo&HNH`[[LX+Y'?YHK7d\M9_AU%uWrX7_u02"R*.olL3<")EfBnji8F=%Z!)OD+[m+2!hH3F#Bts
%Ii$j'?LSJgTnpS[4BJ4shrANF14W1liuViJH\'7Ra(9o<%U@u.q,KnE;/?VJIp<V6`0+Nk>/=okje-7UJmD#il7hh6o7F#9^$BgV
%Z`b@KRphC&NuO9t=st=u$!<md)+X\[pZ`$>4LY@$6o>EoFek4c<mZM$YR2k(]s*k2V>YQI!c<1$$u;Yh<(UPP9cdn2<Lg?[H*.<M
%R?^#T7iX?9P#m%U2Rc(%;+'2ckc1P@ZsMB_Q+W!]aadJ_l'8.$4tAbkK@at<qY<Od#>Im[\'LnJKPU/*`dtIE#LEF?DYCn)/rLF*
%muDA-DVmL?o(0:3-C'KU1Wn_pKtI'/<ZVS'HIVM^&P03&6:alT1oGFMS+\YIe>\mu31`'g!7/;-%8*e1Z2tS3163?G6"Xo*M]l-$
%CMSkpclCqMRB>$CmEBFM?$17:880op:dhAh5a!FElCga3ouLP]<gi;tbS8P0'G!<dIi&a9lg1oXlKdr(,@sHL"j#mfA'a.\2k:&p
%.5@@A!0TGrN3#J2.S.*<\$5Y*.AjBBV;+C#S7Z]*)=?L3YH3'&L;8PZDj?D+_tpnrP(EfQ,%=og/pp#lepW\s5dW;+K*Kb<@uDe3
%GWQ;b_@E@:KkO9rZI?F?;ha?pQoMME+pGO<6SU`LPuP7*/N5[%)PqX\&QPP@kR2).EOLKkXFh-YQE8SkF=['e>`:U`huT+KFtUdj
%4b@flV=JHg2N?,A[X5e"KJNtT`68Es=tiHAOh;q3a7=!R8Z%)k@\L!m$l]k[8#N^Onu<+\?sAnX+V[h&7O),mP^I%Z^71.aAG<''
%@`*gl&t<g;;R'UF6-)r@S!sK%f'e1tg3Lf+,1(XXDimF<1eP<*eE$01f!jBs!Ic@Q'EZPE%(Orsc*/*7fZ5pjJS$J=mmVDR2Y\nM
%AjBj%6P[TKT^!+S-+/l+41_kT,!R^3`DFH[U[+FI[AKg9]B^Z;7-6^7Q)pR'*hc6k_e]@F8.hY9jXq:2PbB9Olc&tI2Aj[5PD+(R
%EBT$h0DsJe?URelp>_pC("4b=gm,#.4l)PB(ku?(>ZU4m(g8?t4$`K@BGS?dKYp^,_'jK\5m.mMZ"&,LXgBuPQ"GXO/CuleC(;"q
%%BSeHe/VB4*`gaAT<)e(XHEX+c\@H]+KOU5biDG.`XT3WDJdV^UI&U>NNk1gC]SR/F:t#<16%I$E"3%iHeeS&Br`),cn;^to.VM,
%E'/TN.pp-=m+TP=bie3oK?67cb+@QTQ6ssdZ<t%YRjm-MI'la\9g_9pm-%N7[ZbZp$P15sK:a"GX@K!UG>ttgYshN4'R\a6qTRQc
%Q$mmB!<T4eiOr^Zi7l$MIWD&_G/Sq[cL48s,X0aop2l`2;JW+eN"BFG/2DX=gF4%kejGkNb3+Id]`YXL`$4+4cFK3@ej+\5dtMFM
%<23E%C?:h(>?(<f&$^[@+@<JAAi#?hcM+d4GA^)a"E_gkYi&1/'t+BB,p:6H;TU=_-(O,c+4D*hPVkKCA;;U;"b[FlFKd73i^+S7
%(RK``919LZD5'oTp[Gbo9cG$)#!3rsG$$f5Bf3-EFtHk$d0mOJ/$Q5CG[j"Hj]0B#cDSB;dQ>@@J"_r4\9Xt@OB\Y5^""I7Hp5Ik
%.*'TA_+Vg;gJ\*0eY0CGbGo.Z3FRc_Q.bf;q8-:25[6^&!Q\:q!aJm2!<j\SHG`r]^LSK@>h+O^]W@?S&hn,*+WHa.P5prN2CdU<
%h?.:X]Pi.aFK_R/.8&<J:V(521r'&'nR2Mi.C4>6aHYro??[Z4AaQnCba^Kjp'F(AA"=4@aEpA&8=fI@iPhLsMq9/YTQ@Q*_giij
%`%6]PGZB:\maS6JIK\*+S"OUS%^(t@>H,bY@5+@RQ&9mV<)93!I?Jfqo%5Od.rPOBUsQnj3Do*?>^LNs_bnj(B4#k*.L`E[>W@!/
%;Al[LRB6s71PZ6]%<MH2<Jp)p<#aKTqfm[,aO=qG"&;d*S`*dCHK?kCiIYc?+1RV2_u+GsKTB^9l"H^-^#Ar3@W64\j@Np)]K=te
%Witqu*rS@5*nr+nVX[W^6&o-F51J1f.+(d9hj?aY_sIaT"45E_%(7VrP>]q<Y']nAV[NQ[T_PdrMZk(Oli9A<'7T9>R0.Fal[oP\
%_%DUpG'ECOG`0J)j<;?!<OeITS*lkEJV7+3>hNOqL\-K6.Q8EfMc;OGQ"k\):^77])^TltXjO"'Z)/=oBs)IHhPDR7SsnIP+aNN+
%.g@Y.r6"mtei=]$<K5$k`&Xl\7jW*0\g*KQa[;<A>phR'^2bdM4;^F&(1Ai(M/rKU-F7bF7]%d)n]n3>[FC;'Kj9$GAH9D[*CI0A
%3uCn=)AF';\Wr(C$M^\.[Bi"\8NFe;iH8I4ZYC_KMTm\*3G]CkW\b@*%pP:W`<,6O3i5TANZ&TZFOh3\`[!Ae$k@&0*r"Cd`'KO'
%%h<iP4[h(^FQ>!#41(qFBoX"_3/KP.KW+\hL/<_KeNokipPJh'f3p)_VFsk%HS&J$#lO[&n%uYsO\ZuY]lksmC\!HDcXaNqFX]Qk
%A)e9i[csYdg1igZ$sko9gjTcm.S_-RCX/%O("ju=4p*WTfNt"S0P_dDo0W.7"99J!TngKb%B0F*<ifJ@FJoM2C%HU,V):(V4`ssg
%"lZSLOp,%5\:@E+.:9SRmJ4W4jhfHMSMa"qFV"9LK8H4s]b_.>WXgq;pTmW:hQ70nDg.N?01,%_6d$3LGT38+;9K,E"eb"/18PZ-
%cd54;bdt2]n\(i;p[*KhL_k@T?#nI[Ih(O)3gJ^]XoJO`nQ=/2^81FaAgDkd=ge45m."C%..^hE:jq#YVU]N?+1+ZcRJBDVUh1Eo
%46E>Q"e%nG_'4=\bHsp@+=68tn/ckm"UTV!`aA5-j""l8DAOW;EtF9MhUU[Z**,e7-JJ**r7.0PB)DoR5lN&`=-bT3Z.48_N&H\G
%4MU\e3.`+6k*LRIRdGh=FW\FCc3nJH^d$-]=l=8kf+)!jUmB@*:j0sP\[(3S_!W(aj7b!]\"XpX\2,J?d["?fKR!+m1urf!H>*^M
%TIQV1EQJO4S3HBcLrKESZh;?dn4mL;Fn\X`/I?+5kah:O"-H$)?>-c+U&?mXVa0>jo"K1dPmtYNE6!Mim\`g>6nl_@^M^;j_*#uh
%f?<OF0Wf@"^hTUWN@mT.K,<6T5h[A#*TMVD@r(<Vmp3K310"<FX7?h,/.c_$"(Ab_RUsisp0QQfN97QCEX*hSDiD!>im+6P&9"Br
%Uj"tjaS<.uVVd%0%?29m4@jT.+T&FS9M^ociK[&r@Whs;lCK:D>(18!/K\A.`fD,d?hE<j(/Ld6&tmga#DK?i9b6*Q8hTB\30=2`
%s7C;eLmSWJm)DJ<%MG<%?+99]RZhkYRRi*tBTKTEC[(8R`P&%Z>pCq&2"ChJo02cTJ=F-R05)be1qFCZE,._kVtGE;G0)]Z_raU"
%GmFblHN`cl,W@`Th,Ak<,p6sCBfhum\8h4&mM(Napg2#:0HX+2!(`ojCiQU9Gcm'IS^Se?37gKYI_N7Ff4'nIm%$WIL5=g63k<e[
%cLW(QLANsuNH9+[@;Q>3P&u2m[RVEQBf[qa74\1Th@A=&!V<_QZ"3l5K:$LIVc;]Z&]8q&gk/EHgH_=`dmlFI]FEpe*#ip?Ac`S]
%'"sn5Ln6A0YhO5?#30mY[cZ$i1tm:;4UX5K)flG\fVSe*hlg7Pg>9LO<A&_[A!<HEOI-$[YE:W,D:dFEbeS!4,C*mSc.c?[;1*QO
%0VOtVVYJqC4r*KS:@q)LbS],BMH.ui'Z@m92R&khS#)LlDk."@je@BeL<RD!6?M!%;drVJ'p0Gt2:6__qWm7D!Ke$1D\+4W>7rsL
%Ub!_.Z)gjKI\Vq/:f,D^(j&'@otE*C"<'`;PfQnm1k$_(:o@813dpeSarI?E1ZNpIWh'TCEK:c;"p-a`b0RZ+5I)Vjm[fXA#iq%&
%mS+]LG![l?Nbq'n&V83CE-N*H',4t8C@^(L\d[XQ0H/aN>CD2tD)hf8-8jaUI:OB6g%>%Z//#_*:;7!g5@\cN@bq[pVl[)hS2R2l
%W^M%Rmf\&>?1tTWg93$&<@cr/LX@ke25eN;+rSaBmr%5eeCMms!Ttb,i^V5rQ_U457CD)79rE,D&jt<X[1NUX/4(@`+Qt5l$cCfW
%e"+M<d)I9Ii\e1ie[ij=aK(D#3;'PO8JG.Y5$Jjlh+_)[p2qo>Ybqs?hi8E=V9-^*+e,u%l_T_0RJ4-dS>.g)<'7-g`qks3]2AA8
%CG)Y7\:Pk5*(9N178dp0I(,lS-1B%JE_qk)d?+%OdhJ<kn$%/Ulf#XY`iDD-c-';0G)X_lND1S,#3''<B]7AW=q$!fj>XlpTp'rG
%+VPYBb;gH9CG:'`bF\$?.'P"BPbOP*6f.G2(uta.BXk!M)D47ViA]Ek%+,D4,%!<>?sb_`pLgHf)RmrY^?9hAYL'82L_BnNf,Lcu
%dr;K]!5^c;7qXcVGY1^D]iq;G=>*S[/mJei1;jf7ar/3hGZ&N7rU.>Mol*;Xh5;gX=Pbn?,,orV^#tk)l4E>dp4*=`;gd\l:(j#i
%It$eRs(b(YW#8nDejS@8KI6_JUBPOXl=Q&UbTk@=<=u\P.U'M44M]O2Br42)K7\!(V8D1.T#!kYo1;+f0tpNq:9(i=pjDJ!PZZ_(
%NFr:T5@dJ"SNSBD]!d+Z0T>)WiTYC)V<#dP144#2ag=ETGManm16i2$P:?.8>WBYA..WW[WK88NE;EV>R*>Op8QjJW?<GiTnFL4&
%;@:'u`T.`j90u-l_9SdPN=Cib-7>Ftf>q1^a>_u<87GY'38Q&E`q$uBBWq;c;[+?@FI_eAKX&;;a6U+63-p&pMI*2Rejp(b+%/fq
%IP^>%aka,iJGuSWG=b(]3qWMB;CSl;.#Zh`6<2#[WIn0HboUd&#a%BA&3o,2CNF;C?e;J,VM>OLX2d];,D-)!U_"qm3DtMHWQHtR
%9>q6T[,*OYEue*PTgo%L^rb</lBhUdeoLmM+%6''c4"F4!89K3OX!J%L\+jn?IrHmR+$dVT.*>-Z4gm-=s]c]O"#BEOeN(u!>2g5
%"*5<5$bfWufNfmdd2,#:X*?Z;FiMUX]`upSHgP9q<+c4Rb>bR%>([U*$QW#lKZ7EU(<-8ZCC8V/k;3ka<oGR1AS<-UZRDh7[OXEE
%E]Wtr.okA3gX@:p+sd8pGNZY>dNP]VX=N0t3J"8-KPs/aQ"i["fcN%/V5]0Qba:VN#h_%lq=Z$e;RW0+ZU!T7V*b,hqd\6Y^69F>
%rk6^cOHnfGr]tN/_f$0858m'Fh#a,g?i;83l'Qo_ZB<ot:fV1+&$RtDr?;j)TJW`.,7'LJB[0+1+*8e+("\2NU&C3!0kn/=/;hS_
%03<B.KTXqU,J.YVj-aaeV0>S`OSldtNr+6qF+7!N,A:CoFh+u%'Z&>lBEa2ESnul]c6#FCh1DgrJL,m)<5TrJ\dO17<nm=ND_Lc>
%I3HLDr5^CE\St1!(\JdEZ.9qI9mZ5rPVn5(H`q*Q9]jZpmaWL/:Wom1T]D"E1fDVgC`cW_hsA_->euj"qlF=tH<I5<CVu6ketJ:h
%aALJ3\_YtF,>4FH[iY,%p_a>!(0AO]1/FD6<k/8+0=9o'(@5VKH4i`-7("NFKGlbX%fad>Lqe._lW+cWamDKo!u/BL\[D*p4t$7(
%eTs)cf%Sh.<QblNT96mu_``T]Jq%_-e6D+$7_SaIb"__Qpq<BmrJZaMnp\61GPF(CdX'.]]0pdET?t;J?.VtW-+0'UJiitJ&_T-[
%#,>,^+ljK@Z:rhA"t`;=C&:;U]-idr/Z2P&A-:"*mAlO6p9U:\1rQ\TD29pQ:Js!<L)?tFI.'P,.ohEZVcp@4->^o#MSVXe0XU-]
%Pqh[TM2XTt0ZPrT>R`>:<%X\243gBM<&kI;N2W<[NTRNBrh.@[]B"DWKAPl*[,VbJ:R]aJQ$Y1M>t'JQ?cJ/R2OXs=G$Xs+R`'E/
%&HF7tHR]ce*uo1KTrRc-[ELY"g$FLtGL1q0=0s/%4_?XkbQL2SK+#Udo/?:6."hZ!pU1b8l$g]UeQ0G1o*-Ta/"sO<?80!o/Q8`&
%P[<tUYl@N!,"$-rkc+ck(E7OSs+JaegT/I`bpG(HT8e`CnaGrJAu_efda]S=XoenYrf6(%E,p*;+^7>sXABW!3W-;Pi(ZLra8YKN
%!/*ncgK<oF"qM;qE?:0T.$ebQ<A\ciQFJhu<?K%ma9G$NQNd]m$Sq_H&2b_Xh!.I(YE4tL-u#8!)c&stl)MIHYPE]\jK;$(5(kO"
%bS"[He:9*8Pki)mF/Q(9a+j^o9+LdCICL/H.KXrX9pjtH*fhck0pYY#[Fr:LjAZ.>I-Usu>2ouo/+'Mf\j6Mma6t$:&>%2O6cf*j
%;BP`)d`dO4p\4T*<2K-R.Cr'HfJ<JP[L,n@f=R(nP@!21R(_\!5R'6qL!aG<P3.Z*TQQf`:@X9PA5s-FAHs>8<5!Z7A;*]U(D2OQ
%Q7gmC[A:PJ.pO0Qid6*X$'fUt/WPfDoNgN2OYGo[;s^sK?W_>GU@s?%nW8ni57&3+g^?k7<1Tq!_kj>$7N[b2qYE=`hO*UmB.1(h
%K"TQ>V4Fm'MbQ_>5/_Fl+H$1&IJlmNJ7%1mY/p;)M'DNgKs^+eoUEW6526%P7;jc45/NEWK2dR*g.(iR03#EMn[3:^g=0^rP`kSZ
%F7+l!SuY&:Pt1*r#_L0a6OV^1>"rGoE7qq]QEs$GTA-jI9s>53U"+7el3f%*`jNEl#pY;Ph>/]2JXm+rJnt)n-0ebpkC;]$k=2au
%qgac'G\oX.jon;X[@uX%8Do<WRI]gW^gc5a`W1V]D4]P(U_^`fk+2S<&t-FtN;ppO\\(S2ooGZPj`[s(HUB.mV)B2:Y-9Y!6NWSj
%Z:/F8B`FkACu#P+EW@qBI-@=OZ?%7k72A3\"UV;c.KD^L#s5(0H2lk9[0BH$HU9e9?'3?+kgY_kD<]`SP)+ck`hi5[!bg06K.o*S
%5/Q(R2HM3O+ncfAn^V]8"3Mt2SGX"q*N$5"TNe1nY1c'I;WKLA-rges!K*HCdq]8*oe5/r7>,dP3$q9FQc6_sBNaXRBo/SW\eYX.
%02\(UD<M(ZF7)HobL64\AJS%/Xq_NQhjK?#IA-XDe8t5;j!?^#[+qHt6V!]5\%"EV<Ot&+;JR7*Zc@`95[E&sm:`$%NV9?L08W8a
%F/aNFAR[e_QP_PEq2q)aj9nRPBbHp1a=Ro$.'B2LZbc>=A`i34ki*7nn,Y>l6Uf0Z9i)gcJq+M.q=I2pL=;$u@8"39P)[(j"N6+,
%=<j3tp-rU/?(i+AS0<]i8q@0;N*@#`hbs$]iaBn_TV[h?mB@f&2(TS9QPiG>q+bUkclE$=&OZ[@+Ymei]4hoaA8i"tR2bRa5k&B4
%Bj7bG""C+`7jYQKdfDYAeK7H@O3iu@ie;Qc*WSdkoT56C':I:)3U\G.YQZ$ROluqFhh0*@Ft7ED]HHR,]6N7BJB%#fEhj!S8=MZN
%GYFT?JRZ$UCB>""&3O6==j*`#$2(`SOsoHQ#24Culu^*##^WIj8`KZ$?nYJZ\!VU8kd?dlOOW?lH`mZoP'$g;d"UG>?nW03kqPF=
%.?n4Ed9;HlAmo)%ZJ\Gm*g.[d1gd?_p<S:#',oR&B_>qnL,tB3da_m['c%1M,5.fK<7l77f9"/ohY'e&#PFT\0FdRem"_PW7;/DR
%S?aT,b+UIng:="=//bFd4N=);;3\Y2*+?3,<2AoPN-)KJ&8$<2[(RAh:iXi'j3BLpiRUlm-+prnUdJkbhi.>Gj:BOUqd()afRSj,
%$h-DjUDhXP0iEqs.2HeH,oupGMZjC2e5H__'qf/71J49fSnB*[$;WOH(^iA'e[JSL8/GFQMd<@%/AnY7K>j1Z!qcUO5mL2:)@HBN
%(jSY*difK@;Q09O]dTW,KiKFGM])iF:o1K8ksKW@6fQ.ar_=,YY7*#$W@`kHDTh8+#Y,#\j+9ikHO>o71mYZ14c:aRl8Wfhchp*)
%XcS&)Z>4`p`K?9a27jF)0l8E1bksWdLB+F)?ImEn]&0\6O:>mH)IOU$%VM>;PJ^5MDCq[<aNI2`(]>JVGt,*,%?]cS*As;eVg0Iq
%D;1:E(kh%m(0j#WonCZr7R2\^)A$r`s.dbD*Bl\+)B:ZS%7=D>5[0i/?*CgRcm-jcqKPOoN2UnB#WSUA(16EOXV*R$)`TN_70C"m
%>=k^#MCi"Bmn'gMWJ+&`9g0F]0B98LRbA30@Wu.8OI9hW23P*/_C*No)*&XVU"GuXV',@AG!#U"jK6mfFGhT7@HpTWF#nFqLM()8
%S[:V&U/,\m/E^a0OF/Y?Pr#[h9bNEZTuf<1/eZA")k=i&_`"D-XU.@MKNsH9m1kY(N9[Vb;OC1Hl)4]WdkdF(>j\!8?4IPq7s@gC
%]JpffNkMT+R]IB.72b/Q6#1D!iA(=-."cXkrC_*:*?;3hW6;1Y,2Yq4,;ct6UYAMY4HQ/d+atX;hdKUO`,V#6@=*5`g,Lls?Q`';
%[B#H:S7J/]2@'C:Zl_/PB&R4)@g<WkG0A?!VS-eP.?B0dF6nP=P>k(Y'7K6nhdetn)aDcr,^>ej5BbpfBA*DfA>]oa$_J?uiImS&
%)hpDpquFDKfabrKdZ2,K?IQ$dGqTham2(/p(Kh0[Vc?Z.3I1',V6PV_bEMqHVKE"77U(.q)`28d&$8s]NsqZ4Td:5@bmhf0]fb-%
%C55?q[3YVQ(-&s\!ChjO*rA,hG3#d3^Fd&ScYS]s&<h@G*4_>H>g,$%7q:;WX/o_Y>hbjH=$&b#G$'<+Nm60nSf33$2Lb4JirP6a
%1b`6aZ@:Q,YV,L);6-R+"ZIMS':?Y&gn;9.b$I8W<LgG^^euN`TgKGamr`'ba$3h,`Sc=d_j,*qKUCh._Rd:+At\!hk[`-#e%jsD
%.!l`28Da,1/Al6d]Vms-O@@-$T0<tch#5l2eW;T*Kh&3cn.jOH[N`4aHoTmR*PX]d><ko/D$ko^\Au9<'pMe8S*mblD[?;Qq"rnO
%Vn:uHPJT4?CsJ*7I'>)K#msZjJsp?El\Bm_cJ^!jb<t[:#)]=BXs$-"#`Mpf>)PmKV?SnF]>Y4<desbgXKX(1o,>\<@LQP!^*L$,
%#dFsA0)O+p3"#`2-9mpo8-"Y&n%Hs&XV?t_pMuR`+&M=N["fL,b.)Xb@F?Z>)8ML`T7B&o=Kq`-U8gQJW@OVJ%_71PPRn*T*(Hka
%ru,MNTK1kK<Mc5eD"Pn)_!58G,@BL@V5*qHa?U5UotAs164p333)JsEq(oA8?_O)`#T:.=RNYe2dgJJKnnh;GM\S0k/LN(Pkt5\-
%-OHiO=b$*4g\h4jjg6+O4pA;cF7qr*\M7?N`q+hqFKDP-]!mKK'bJZ7bc,:7He\$J`VQ+lYA8i;*JdiMIp.O1/"r)<O;_G]nG5oA
%Jua(Y_ERO3.ETg6PLp>;OuX\I'@(r]$EE7i+Ti'/0Tmnnl-#6NAGI59qH'5>,e1W6(L+^0dW@#eq>/IdenjM(ZEN:`fL0g:5Q37J
%L&G'-U*8`?@'VjuOD$)m"OKPL=j/f(msl(8$RN(n\p93<d'%s..0/"7[J['ZRJZi#/H+rX@Hdbuq<\AP$9TdSkk&95%A:.H:h(kO
%AdT0^gQ43YqdQqf@SGDXKS<gj</Y45'Zch.GA.]6'<U3aVg"oa9`Sm)k+Z9;(R7(TbYnYE6'*Kh!Ti]7SJ^PDs07+t^$AWU-Ifs-
%0(A3=P1^Nb1%@WBfQ31CIbd-<&>:SACl;'/09jYAge!10c[bj(h<JH10b%@BBej]iC,@&QD=q<HW"d>3:kAY!;"8I)q-'ZKG8<VP
%CVI2G4Z1lh>.)^q'<^FB157GcVPp/uVQ?9"n4.Ag.6:s$Ut1H-74tP(e1W;ZG.dKWCNllLc__g1;#gr.HI[kt.'C.3.A/rWEZ;r*
%;g5JZWo)jd]_-h"R?3Nc.fkW%X9W+Z^:/t>*Qkc`qLca;Sn!^PGbGGg3Z\CUmH%7LV/+&5:K7.S5[d:uP!9Upd,UXo%1OC_3VO=9
%Adf5r,"+sj7L5FFKV\F$=]_,(MU%D5'e$'tBPZ5t[QjjMTq*:2VpF3chBMtD7<Ri0PY6h<cS[i=MV!lNCYN@aFHn>&pkJS/fr\7)
%KCXfE)O2>[SF8%C\6,;6Zjp#Z/QcC_H)d0?][l3R$Pdf!_)(*jh8rQ>_:+e.MIO!4XA8[#%m!g27<BVjeFer>lH?7QH;II_rirrS
%Nh3)+:lO'!=maH*JVRYMmf]gPcNQL$(sk%nP0u>P*Xe#Or\'d88nFol>Knd34]"HA)l]6,8T&%qHCQ`!-Pph(h`E"49r9+Rch>%.
%*'_AbCN&/V;ffH*q0EX_;pU^?^!Nu[[)RTkILaaG<Tbm8r5H@t0<sbFKf(U5Tcp<:ClY+X*%,Rnr\[pOs!L!LoNYB/..tYf'Bies
%h.g2jm@#"0IA_#p$"%q\(%1#8Cj3c*9c3.,%;h+<<ro?Ei[9dc.*0Yp_>W*rJYh9qe6hGnQ]D_pBb7Z4@b4L?B<Lat#*7=(ld>^P
%8h"$].chX;.oi9DDXca[5iFbWJC_92fQet]M6+$<Q"!2.#0o-[H;nIP93sYCTb&H>'9]jQQ$YPMP+.agn8OX(Z5a]2L9VjeOOU""
%>P;kopoF2\&Kl[R#c1,WIEj(s+[FaN89&BO1&NJ%rV\U!-QOkD4e'CgE.)5uG_ZYBq2Y$F6^cT"N^iH2+q<>V(-FZOXr,S,i;ZtZ
%`>ZKB(m0>VC\ZJ_1Gg9r=R5d53kZ=>P:f])U=RCk*30L48a=B6%N@=kUu_!](?4t5OLg.[,/f9D%p30qH9iL1Ik@tGd6.L/lbYEN
%L&._oan#A\JJsO_V@O_X:c^7@7Bfl)T?0rZWiSS1M5)#h"->hT*@D"U4/D_^.Jrm5O%m$#&t)_5?H@Ue2J#?Si(<I0'i":(^:c+X
%*/lZMnQs5N&V?^5@S^-M?qVNch'J\jk3EZ5/fS]+HjhdgLhKa@;-3Qg-&#)0/d@qE]9F,Ib)TTe+A)#!R]_8hQCc\5irItCjlZ]_
%/]til(7h%OV`H&_]G#Sqe2QSd/Z^E*E$cM?JXE4aNNb-o^l+./9(ZpgB:;f[d3?fo!L(Aq24<8??gYrObVlq,$%1&RQMW!gr5f!a
%#or;g3&74)CG'i1)/d+4/<f>_M7U/b8es&/THZmK%mrE?7FTk+mhj7?.uq$sl-RK+^j3"+QDe\lU7T:Okr9YSOGI@oGWkPrB:g2j
%cl:HT]Wa2;"]'!^09?ee4RJ)=@I0emAoO2\AleCqT^^YLc#!#=o-'d47N]%?V,^?I^!p0`YoXIKMrU,Cn`.Jt.Ja9[2<T@=n*TGt
%Mps[NbpkshW.p&9+l5j$ooJE`U@t^Q:B/=tnBpD?m!JY8HEaI(ARi4Ml?dj00'6$<m`KMZaE5cek%))F-WVW>.@1aq`<4VMe-D\m
%-K[@`gV].r$NM_U!^DTm9_;g7NQj*PesuXJ%7?YqJ>C&?8VV@"hZH_bUnIKe<J=0?+B3-NSXOSZZ+&Z/d$T4t6YH2le54(YgQ4kH
%0Gb[d+@8m.1I%O"hNT>>hNhHZ'uWU-!,SQo+iQS\dCI7P-gs073>neNpRWes,;F'T;hqCH,Ll8cffMtoEU3sYTuUb%WBcf)]HkL9
%idb$#B^6)iP<\4^(d`@#T+W<fKTs4Y:24CMG8:HDC=tB1"]jZ!C(CL_bst?=PbC*ej<Off,&0LKMekn04@0(fHA5pgAMOD_7g/I6
%&!k'q[JcIuc].3a:)BEBE9ST@8?N1%98?'[H&t!IA%XcjEucR#7-NJs7m<$7!9:-Wp-3Ik:PLFV)sI0<Cf>HV-uC%npK%/nY`<@8
%P!#:'Z1/:2IF/BAYcb&'B,$sbl*1!FAQ7Z]5u"N$$gl;#n?CsAXs+ffSNUnmWZRGX3I%6l\-q-F[&VRJL/qoY3HDVe';W2L+b_D>
%[&HlDOcup$0\n`u7Es$o7@3@VU.c"D.Tk[)g.4-627\e43&($Xf!:X0[F[)a;fHIqpCG_tWG`P3><Gd@>&@RtRMJ"VoF.oF7ghc;
%J>EC6rQeS0QnV9n$qJ_MMW8GuFD*tV_q>3OjGYk8)nisDH5e%QJ5gA[X86qO8&Xr#>1;0]W1Prq?@iL>L=n#S8lrLih,g\]7]sB`
%T2jVg><;r"]m86Y_0a:RmScoRfheJbS<#7TMr9il-Xru5IUXZ4]j29^]GJEK;]50)&R9%7hhWp6pJjSn(RC$(NI0VRG(s?Mi#guU
%kp;rUZAUnCUp(K[E>HnUZAKa9Dc:MEcZJ`QaT]V\W;[ln,oV\*6c_+I&"DJajDG7QTV5D^mVHD4?:+_!\17nK:VYH$_b,mG$>I)\
%=N)7$%qOg3Cs*bf0b6?UJLZWeBQt.H$.iVX0mTA:V9=_u13]052+bpf+i0StL:>R1Pak6bJph4&gJUoOKUaK=Gn'TFHp+DG0rZ$[
%R2e@$gaRU3Pi#XHJRYKdD5c<+6/[Ek77T[hcG!a7:7tOB&kMqpEu+XRBL9RcL62O..\/[E[J'mWQ]Hq;M-l<,%jEhg39S[E5h5^[
%+"JXTL`[,K&ehYq?_0sm0e!/2ZGe?Q:p2J#&(k\$WmC`WJt1lYRIPa3j'WH")W=G(SdhB^QM@KGraN3E4LS=p\8?-@CNCR:jc6^Y
%>_g\*!9LQc6,`jJl'G;t`NN1bZirBEm?P[Z9$N?`].eErinJf%e[G5G]%2rb968'QluT.9=a;'/JlD\Q44)\lKT@Z0,u)e<Y3fae
%M#sQWgqYnVp,B?2RmsHdUHo($^IK=p8J^H,lcnA;mWZ-2.[>b^ee@j'[FkH1)&i8'9Wq?l@[`d^+_&8mURDrPH)cA[!&\oM`/*Y?
%[ihebqnujP$3?$S>A8$V$_,,r7t3j9/"Ic+ii)KE[C[RD*OGCX[PqZfW<6L-N>A>8C3M0_+ZO=T\.*[Xe^4bb(A8OS\D,$q*\NUE
%mZQH;<_c_j;H"2C+Daa?CaL:UoO-ONX<BW?@$Z@BmW=rXMZN'dg(XBCSgn9rY'-g]Alk)1\pB??HkC`nFDpKpABM6e.R=i?HJ#Ha
%*Qb"=CBIaN/*i4QC1Cg:KlT;,<gnYZ#XgL*^7fBV&H&9fdT;P:eKT9V*p,DBRG\^(91DsO8PkrD69Vr1e:)83RB^uVTtKI](nm^^
%,=QZ.pH"HVV&Q-]k*Mdpm*llN>^a2KOF;P*840AKO@A/L#&h[Ep=-=fPPJI1po9OW9@W#nJ`/pf#,^^`H\gu&>rj?uJ+$n;4fSBA
%R/;eNZhO(s+d<6]k0bkJ[hU+MiQG?%5t@D4CF?Y`.mO!63?O1.Dm`HO-Q(qpU!u+^)hdb$1[CB:I-rXIQF_Hh\Y4R^C/);q4-PN"
%\e$cKWBp5^Y,`0*T_]p,[oZ;uAjtPnHt/jbUM&cq.Qu2\7RRctWHMZ[e/>N"3Z!f#RF%o*[#j.16d2)K<;@jseAV[uAu]@P%SYR/
%gfep?\r_dN-\RVEZOJ6:Sg.ikW,!@p>&anspLa&@OXQ/E*X2p_);O877s(=Wkk;tJFQI$n!C5nX4Q?s,1QYHI.d=%P)m;*&!l[C:
%nDqkjDqF$/F#X,q`t%@Ge&?m+!_U2cD7ZD"Q.^^=2rnS52La@2Sr=&8,bTRc\#@7L"S%%$e(YY`Y$>'3Cgg5qLZ)SD^+jg9b:R*)
%h'lRpe&3\Uj>KP<9_N/'lf704!)-V*OaW-Yjk>_\9Z8P#WV#9>.X>]1co%`NWuT<*:*XT:)9qE#/]0)%b9]XN8VWsj%+ZOOE7o0.
%*,!1tm=7h'mj%N^<;"8o,.GdWXZ0$0[37:62)@X2ce>2Ri7Mbsa'MKkkp*oF_S=&.HU^:oScBt@j>GuQ`as6L8pI#%*!U!TS3"]'
%K$iu26`5pnlAjgMeo_\O>j@lo[/CKQ2LG.X]917IAjoR-qImIeF@4qX-!`5?]h5Xoc.A)?H^qs=4TXrI=<M$K\"eg/'."cu+9N]#
%7ns;fb4,[7i80'SE`X%%5q?0?[Hf!*aq&/K*>Lj=qu?StW=FDRMmt49n9sZt[7e58]MS"iH]D"1JS'$>_qVo4[>Qom)_gh^G2>Go
%QNM+'SS4\gj@'Ep$X.Zn-E'iKb1u0bRQ2[-WZS#(G6WfJ4&Bm6\(N.jEO\7i78Jb,2D/V'p]_\D>R%F2Hd*+8M=-1QXBLR%LM5Ys
%j<S<Z;VL'VhZZ^I3[9@0Be*`Bis7jNR!:*RHJ(Z+m9&6>-OY=\4PSWfH.*`4&M*kRB#pd-VD'gfLDL'7@-\RK&^9@iAYlPt?K=Rb
%!^a>5bOVVOC&Dj(F?:g-*ms0G\/!RlnZeAqTl%>!\eo>f,i4B36uji`+&G2`g4<7QN(!buTaUbkOdJ0aKPJZ(O($0T1@%YQGg"D=
%e['6'<.O5>S^`H(\qi%qR_D.gO,\;]*]OG65Ct]D0;jhJRVb#/>Bp@sK>+KKgZ/Ol2>nOWK-o'j.CGc!os9T6;L?c!Lm@q7FiS%q
%pPrLNl!R2?PVWP0_Yha/6\S,`"LS4iGi9r1rV>#a#>OEU=/75n*O[*t2VL'!/rugm5K:/r,Bc;g`]-.=e#>tn9=`)1U`V^)<'FK`
%Me]'H^68g&BXUnAErqHe3JA@7D'V8;(W"0h"Ueqke$SLC992uXd$O->nuQ7/(o"$NU`?J=@jk;oNHOktB.O:Xa7AK^cggXKq(Mc/
%.e9C]PZ*WWfSs'N*3T?2[Vh1%:%P'A66DI;i%-(E-D4&NQqerUUHa7&$r;M8B_S];HpCGPr4J<`nlJ5rR%H=+es[XadqI+ma=eLl
%Fs4_;ok:d#'^m9)-euh3p\)7BJCs6ZLB2N:csE)tJC9o97-l!T+*IV=kVd",e%@koD_Rg)G99d/(nHS]d$S338LHpp#C(%'.DU=d
%D)tUYg1EBtWlK*eMYAcI12>b2!]n@)Xd?\b0^CL<,%9`XHHrY#I]%5XCL0c=OaTdTdh$pan0ZYGlX8VIZu>3&8i1Q#$VKl0B3KC>
%:kk@IIt'_#8/1L`hP/MAm!HWLKrFmtYf>6T>hX]FHV6rs%L7hfCE>2\+?c-KL.h7Qli<o])4C=,<pSuncS@'bk(%Ok8\6qpDXm56
%$j/j*f1tQU"=9OM*^VEoK-E/Og_YXYH(a0S'gBh@qXi2qQ8_`)FQ'+3SIfs!(/Q`7(X1!F3%VSW*2-!U"E-/5nr],:6AM8P;V45e
%>][IqE_%)&-41-<&?XMk,!IK!!DSS,5fkJ^PSFZ.kHIrm8j\?g&RlA,Tbc62n+:c)<Ga<=E,i`CEF*9)d3KiQE7u,K6=-D-]f,*p
%QjHm18Et)?&:*Ib4s!.e3ipj]_]7h;E`&ngD>bLn/AIlsk;eE=D-S7R*-#LVd&YXbP7:7c+n7*G7P[POmTc6U,UGa9KXhNn$,+di
%Z*#X>W`R7:ETUi"Of3)"dZhq#Mit#NRE`eM-9]Isc?_5W0MhF+8PrU!o:feTTBJW(f+Na0`F&.?XiUMgW>DaSM+Rt$=$SHt0W=qV
%-V6,&g1*GA_rkb*C[ku(?qn#C$&*].qgH(=X-/_/6HH\B\oTBhql%l;NngZ2FP0:2rV#T+X&e;WO1$)U;Q'Z?*@r%?B&Y4c!O4?"
%?8,#OUGhjIrZ[kt9445n'g/MiC*ZOk8P7bHSYV?7.C@e?Z,J$_i[J`$ieS>L4"#gQF/q;PkM>$dLCBS84.<`]?X(eP#O"$mZPn&<
%Xs&mJl(8M@kKr6l^rJ>Y.eCT2fbmAF"U>7f&9/rg9\\\dL*mI'Rlh<VIfndPX5@I2-+TN>KueW'E4eC?:XeTia3nFqBp\<(SRV]3
%r2oqinMs"Te+[5i-$k<8WRgesSGMF:IBWV%ki$+4KR-Ca5pj8;lr$(WZFp&T<Q]aD+</:S3h4,l<\S>\(BQnRP9[%Mo9n_a8\d>;
%,CQI3FsP:!)Oi9HGSl%i7d8rh9#`G3k27MuQIs>WqgGiG;R%@r&de%YOp#*+;=X88<"5'SDCtER@W\]-dQWF+P"af,a%(J*El4'5
%V2:=fk^q-2S!s$Vat+]hMY&-ui3STIGk]*BRi>QP/.\\YWrRr5mQki0,N3pj'^FIKW>MT1R[G+(-!(Ld7DhsFJd\BF*,h#l&-eps
%n0#g_^&mmlb';-IpN+rKTVTqO=6a1I:N4EBVE(<`rGt'K%?1`ENkoi3F(lS*RTa@K9BNHZRUrs$@4H$f7-B?k?"(37(in#5k\5SO
%MpeQi6*_'Kk=_\1mh`'T+4MoPjcu#Z-uC-^9pG7V^u.N;7Y9EqF6(OT\sS(C*c?k<Xa*:pEF5nif4qd/6#KuL"To#d"R.1qnHPgu
%-iPZ3pe7@^]BEr:_Riq*"5<YRNI0u%=T^s7jl@C,q9l-Yj0P*N-GF]GqW8_U>t:&3,%]u;U#K3SonA7X0JFea^+&TR[8m>ea>Hmr
%dWBM@^dmL,f1c=?WnnjATIY^p_?Qps,4]o`;8V/0$mF-NCB1/Bje"&WcHc>#nO:8>/hWK8YPpef=b;KNX!_ZUpWm2k?MjQ15G)C"
%XE:gE-*"7W"4*7;V+Da3Zna1<=e\Nc//hZe*l\0n*,^[g(7NO#5g`hTWI`4Z,hf?%;>t_,<jai5%hLGoKPL.?>=1UQCTlrP]L7"B
%a(kK:o()<\5HPj]qe6&`e>Ztu`MKuI()9j>4;f:?Ae(0IW)+PG<QGs;&,-#oRi5EZX\X"d8R80\_WO']'8$%;XgUdu,ql&9XP9bF
%0u]8PCtKn9Ot$-5SZ9-D%_2G(#1(5(m[#K1rR2.::5od>`LfnglOirNhrN8&iZJ)=`qUA9i\$9+.i*.K3K$(Hp*Y']fpr_-:1qoO
%p:ZTgDKLIb40(rh1<1h\'r_IJ5WdJIA'L,30V^I,mL\cLiXZ+O99`DuLk^Eplg0+:m2_[5#kaDAi*pD`19-/q4tSW7n4`i47U3F2
%$ssgP%iN\86^jrBH65olkN_C+<*tY>Deb'l,Q=4I^E5mHW*8AB,L?k9BGP#"7":dVlgVEF^^j/NmPb3<Xd4*T_PVa=O.Yu`p3<Bq
%gq70,]iRAJhiQOhh@%Ba/G8gh2tV?U#FM^lriu>pmtW7^l`X%Ro8#7Hp?6k-:[FbZ1Fic/Ys3h^7!_82OG-1Hcn+e:ah?*@ll6^D
%7e]9E0!Wm5XtMQkHcr*Ws1T&1s/>rJoR?3AAc.X^/m;XL/gPj4D680R)l6"XInmEQZX%m"#`)G*$2ImWX+"C-7CJ><q?7leP^fA#
%SY]92Q>c;IS;`dt^e(d7,4X@-%%f_QPLGK)f$=`/5gK9fnd9e1,IoKl:sq"t&t)rETP4nNVUG[:F-^%iSSnUf%[1A@O;o"_g%NPa
%h]ZYa#GU*P]A/8[AWgd&6KZbuMWoI4h1]Y#Eqj<ghAiF<UI)[m?4)dooq,&Fo<Jul:ms`G1iZ&2;fQo=T.XU@KX0@n#C^#NJqEs9
%6LX)$;/pIYX$4B3ZS<;_e0tgWj1^f,&^C&>rE?ZQ^3S!;_G7@GI4l`4_K`0(iIjB.isulKKu>R"raTrQnV=K/4ahU,eaosK=4`9m
%;,qRj0-iX;-Zj*O<:Jc[98Ng8`ShV))<?S.9^KAf-3CEMiT%cu*Ek"'iBuBLD*/rqft6C(FYA\#77=X69MB/94<`VJUVZQ=^.q!G
%o_<snX5+G+4@A&;AW2\HisF8Mmb,D>U^?":pd>?YJB95p4hA#A4HLW+7IU:?J=1#\5+q4)rg43*4L=qN_JiTZ]]rih:R]<7eC,-M
%+sk!S,o2$rMB(^UhJ3f-D4:"W'@lSfc<K=^W6M]E1<C1"0.pt45;.stp$:eTL:nh__;*lB4WfRI1EXA^9e3[qc\En?Se#c3c3Mu8
%I=)HEA7tB+Se&&O5%Y*')"Lhe@?-O,o0tt,"7f#qDY<b@]&n)'1USQ1s6"Ge/F"@*?FWoFp!/='kg"qo[,m^eb.Vu]_Zt;H_]+$L
%LC[AU!>!ki4X\/QFD&MsWaWRhS[lM.\a%e*^_s,#:5IM^QTN4bq"$WdhO(/AU.]\3C+<%.2E-@P(#J.q.X[s1H2PVu+!VcUHFs4K
%2&5WLI_IFN<i`n9q2Z-VWIU4#YstLH5]$#[2`fIV@<pQVRab-s3AB<gXIVf%de*cDbJ$0adC$r-r4F`3(%Ik7:Zr^1+".R^k'nja
%I-9Pq<*"DpMAeqB]j4te?l),G]13\5YXr>0q?-<W'bSL"03h7gV!1:An2H$.AS(bP;,i=;l\F5W>G`bQ;L>^C)j5G1Tkd#ETW<b6
%oaAJQHAUMPX%2AgBce/./NO?catJ$,@lYV/J]`.)-K4jGE1n]J\)L<9#AE`#k7<eK&0Q\*4Uo5NQ5MR+H9f5d5c7WI$h"p&QY_h3
%^5"j?%9F%_Y:5Vu21umkF2RcSY?A&Gk/khlCN_SEOUpYn,7jDV=V<r1a(P[5"6=M>5p"pnLVCF([I^phFK(+FDBeSo[.\Xu*9F_@
%Y`sh*DkEL)Unb)\Q5A,CV^ua1:[#Jm4Ag#@Lq;DpE/RNQ]nIa,Z%G/(cOgM>jfq/la:il<+A^M!"a%IRqgsi<fZtQ@Go-GN68H(s
%1r"RQNI7DU85NBVLCS5JE$Ma`]ocRl@jCe72>6GkhYdHd';.QJ&iu^]qmt.s1s_fk)Y:_Xr4U28/SVJ,<1j3fNNP86RAGFD%0?gB
%lZS[,aO]5#B7+"[2BM$VK),kWq+`\@['FfJk8U3uiY0`Ea3<]&*ftm@eOo5h_Y:O5f$DD4Y=<c+SqBG7T<7]Qh)ZYpcNV0-NHC*l
%?`aE'JXXIE$U<ta[E]#!>N^RO>NZ)fl[1tsBQS`m\*qn!QsUe>(Zr3_f(l'QIbb`][lfi1f(hS]3Z*T\6[aG@b(nPlj%qbpla$7!
%ESEULGMBdX8)$-l\'5SlBuHgSphCaCSQK58k*KZ6r7M4fri^(g)_V%c13<OpRt$,%o(i@rKN/&t<R^7Ei]c3LbnP,'$up5!/^;T=
%M;p"WWm=%g*,GIAO?d:3N/+GF!9bXi!9shV=pZ.j3R/labh=Go</S1gY[9/P&PPiJVI+9j09M@2QaQ0-n*N_K6II*1A6XTe+T_.Z
%+@Wh`XL7fSP4q+\,>n(98;soOA14Ph:_OAY"qb^s9H*J0r;_i/9"t7V$Ulb]:fI&i@GXn35eh;ScZ&IP66pTl-cGEDnPmF2&ZTc;
%B,O'n[1)Af"@9^%`.uLJ%T"VI4KdZS2R-rN`_ldr?Y.-H"4VIF#8A@l"Bn6JN%S;DY%#:kRKT]C+QK=e%-ruUV.)7pK[>O29qNB*
%CA:t!V`?MFEP0W`%Yu\+@mtZ(NPpHRORkNm(5VR]>LC3Ip(nseP4(]e5<9c\QOY$FM*p]KIRhNHU1OLjhn+cL4_b%o:seJo<H>NS
%Tl's!Etqppr^F*4+p9r9%t:c#(5&tCEt`<b3,)7:'Lk(Y.!)^JBsofa:&9k5'])uE3qFY#@Tt&Fh2;LC0Sgke9+NH])/[kp52$lc
%K3JMC9Ga)e`IbP&CLkYJj<0e@A$P//8];\+8c:/i+SW#5=@<_.8:j]V!<V5EQ=7:[Vn6f6duSKje?Aff>rlY:SOe^>/fd11qpoi"
%&k$,4U+h5A,;"sn!E+m6RRH=f$HN[-FM"YPCGQ102uVplHJC(09jhIjX\pc:6_:'(WpqC6.3T)#Dd^BN]rr5SlAgSKnhFGnec5eQ
%;iM/1\e8a)H10gnVP@V8H_r8-YV29<.M79G$df[\R_Q9ZqM^)mdJ1,m"0s?m_5pWGk)P;H4Vu2_jmd__:%S`q=d:+t<&#7/b'#cV
%`lX'jr!;C&.0tkFQCR20F:(@H*qNJJ6aCM.)_+<5I<%.ZG6+g<5=/6o8g.P24*9`cn;^]QbtuXblFKqi$$7H6Z:eN%?nQ`Fjrq*R
%]HHmc\@2\(AshG3fWcJ::.3l.#lq>8Z-5,]OgjaQDdMTm]'28DBRml*"R*p0hRSSkB*@D:oS#Zu'>Pj5;MX`8[<cYnK2'@qqp8a_
%cn=(Rai(Xe>8u^$Xqc`I=kk(!RSS(_^/mT'MLItB]hk^H:7Yq$g*V<9i]U3Q+8h5m`K6>X\([M"a=oEIlYE!9?$SGGjgAUsa)MHr
%7@RMQAGT'2l-1FW?)dI5AjYnC]*r9/U+Qd%;0_+be)(h;h8qR:6[CMr8_]sWH1_Sh,oSru^rG_Z7AOu]V-:%$4ClRl;IggmdX0_(
%;i;hhIr??3Ba@-a%"p+.#V*>\3m@n+q?">7Zh(ZnZGesJ8j:mh*cI!:)cSEJZ[*/6@'lrN%\TQn$PDMA2;^)b%8kX4IR1Rf6^iR*
%2m)n6<APJ3[Foh2e*(R;PX9n45JFOaFn4+Na2o?Q`!VrURPH:]!f`_o6#HS!p3msJPOnq3eCX52n2<a'MQ!n!MlTcI^A9[:OX*0?
%:p,s,!.>s?b0AG-]cT/Q?OV#or>:&RIDYR;11[q*L3&667=&]X(JTAn@Y02sOA+>8(@9.oINh^;.3Ssfjk7]Ym?ND\*20s$iAF>m
%MPFc@3`%N4a[F/f85;1hlQL<T'89dof#h2[7t>&q-?P\4MDpp+!=aaI!1=<3BIJ@c^Sq'BUAMIQ"A:2*Xi_U4Fhi;GFB2G<4PHHm
%j4*;(^#"laaE`q]ZDYLQdtL3C>#&D$L_l*aZ8.69nX6pIeUUrAGE15Kk:\?E^[6(snu#3FO>pf-&fp75VPEGBqFI)g60ekSe#+cm
%-9hZGNh"eLI6eCqSRGHejPdrXAEDYr2s5?cE.r0g@>BUK:_#DIL:kOJXt.7>gE'![V8_ok"LlFSaD3I.2/]-'<AW)1O9K4N]G#3K
%o82P=Y?bU)*`O(/Ka4kC(*#nAHU'\;_:l#`(F"]<4^Q)GMh@6Bh"V!Xqn]Xj/e4/DLdKrB%R%rUiW["7LP3kMg24.R5gFiMGXQ`3
%lbJG'd1D];JkF,?/]V&Fh_nQW]G-;U"fs(bY"h=fM+N6OcC@_rm*aAaj&l"6W/?-WS]WoAl6b"^?8]p;\!F@:*;?jP73C3?XAl)t
%pkK/m_tqR3[L(c#ZS@'bont'M;B=g@5h=4h`p)iVBreaTQuhq1FOY-C'Df?g"mm:DKPHf"*5sQ*br&!01]`.9lBLiO.,4n]V4iO%
%XA5LD_N9^iN0[3`HK?Rk$f]`M'V2+h]b!A;:Jm/b%1n@NAR+1RXLS*2C-0!<A#skE?C%f/APs<fjiSh:BDG4FKh-(fqo!oc:/5?9
%(H4QU;HX/l#S6C\.ORnM7&BKq]MO;Z$hg?J_0Fj!YH*PqD!NXV<TH9X!@?mP>N\*>Hh'^[Rf.-fkW<\^i&EG\G1u@V_=!nD<8COa
%HC&:XT^;mDG.3jZPQ?XbM2>6^)`W1Y(/[iQYIpe!_)<2`mu>;M`PIJh[.1-;HS8Q&d1`894Bgje^ScT&%V1PnE71r*1Km"l^#hh(
%P37$;bWp9L%<aaWiLt;q7GYqT<mr^P:t>';N(%^9d%CW./Ut->,a;#11[4mFaP%.(gsPJXj.*<n^:I2e*3V<bPC_)HMEInRr!8E2
%S^*I>Dj<pH*>ip7Z$JcKNG3(hkT4m&-,[%p1Ed;'9_KHt1.Z=/'[9RRBN;[J9IbuUmt\sh"d=dq*_41aF,>K4CkDI8Bl3T3NiL"<
%[lW&.U%(J"S"W+Z?BfCARjU^5Gd.J]lWLeq/+s5/Q`CaXot@9cXse?+qi8>G=ICL*DR4F8ONdq<>(G]2a&c4s.CV!5V#Gc22/h]<
%a)O2_.`02.BGRGDq+H1Y\a+X9JG)Tg7k\\rhSKa#OuJV'W6YiI)VjPJ=0'54BKF?mDbZf/QkMuU;NR(D<X]8'H/&]]Hr_.5iE?X@
%;qiY`69_^pV=>GuqW0oBNOQb0W;R*Ib%YQ'SU4d4<]c8<606d]TM$Z>>PA(GnmB7#@h;e\#Q"_m39>``=JZD:B)3B;/uAq'5<2mS
%UfrFd[QBg`6':bJf(Zj=4s@0H2IIGgDH:ua@4Tb%j<bAMW&=70Gr/Vg.Wqn"SqYt(.Vuo@G],Q958QAU@E1C7?(5/u05N[+OR[CS
%2)GQLRqr83HIR$+SP>[hVP`,;GE]mtKuq3?hml0tb<429<P]j+DKD;A'mVAJ[/`)LD=Si0C8/npqL4cH)q1?iQP*,?EH9_87!WH!
%i3\02#+Fu^=1H<3UhG?BDe&#:iE9Ghquha=ra<p_L]J_c;oL!:'n$pJThD<Lgj/jU7if1QN,Di!ICQ*A[CPNeTWBJ."H"&0g">>Z
%-qIdm\[9Wunu+O/5PSc9iLm!oQJ3s`flI\b$('i&;f$b"(Yf,C6:?gjWl*Iq`>_Dg>DK<IC.3BjlMJfkDTYf_8::W\nOYYLSCKCY
%[a(ZB?J7]4%JO240G]*"=hCZ'dZ_j<\`,%sBS-52K+lq*T;R(:A,kZKs6GtVnGK+C%mD5&9)Yf!>[,c!;qr3+VL'`lER\!:%bu"?
%oist!/jS?0"DJp;DUgThQ/NR]^rgBZ/u[d##_NmSQR8(n)"Q)T+o<Y<NtUGUVS?iW!!OOLWYkdi'HVgeQQ?M4#R!C(gc?bD"6,Vt
%[*Wm./o7g*!&;,fTN<-/F6ZSnnA;?3MIH54;c.`ZJc^XO!AR`7J)D7]%\h`!LG[6MYmXu'm&[3@#@/bu+kV15pB6oX,16HnM,Tm&
%-m;BQEG?lo?p)lWWM3(J9%e6#dZ2]MB&KqQ/o5;0+dB2LcZnC"i>t2q;CEoRQC=3iqAcr#I3sJ6$Gr6V\ZN_K8?gag:Rbd(2E>7c
%B8U)fiK+&S,?f.:d`o:p%e$6i\Vf`"qI'bFkI=hM`)L8:bbNgJ&0K`aA+qa[`0!j20qH#ZkCYIZa_UbY>.AF7qbTZ[UC60g:%1Z-
%`9;MYXN'lQc1H1Q7Mh;oJ!kPrho.`81R'RK.CH'-H_jb^<PQ=I,>sbC6tm\d6T7bc-Tih2T?DfY#c'=!8PgLf_u=/715ek5%"(e6
%R8q;=>tibuX8UUQFt,;'*8MN#V1k;NgC4X&UfYfS&[*<WC_oCNG!g8p:.t"38*Y=E`Z-(q\f>J.nM4uojj8cCY$GV5JkHP+KB_.f
%H&O>6[RE2Bf"BueCp]dTUNEH[`r$j8bPU9_3]VGcXDniP?D#JKR7Pb8b?3Wl`ir'O01*YN*"H!JQC2$#"J_X9k!WB6Dk]4rd*BWc
%4'^O\C=Q\"d!NblON9b8ga+]bX?r+Ia>kusr2+uf-_[Tp:m$^_ml._?5DBJ((UnSqY:.^3lWfW8.a]UHIc_,0SPQIVRgr7XgpAEG
%)Fol2$^&J4DdS;[Bj_lF./@7S*,dGM<_uV:SO]Wp:u'/^)2_K+E*"#2VS."'6"N-41n^kDoq4mbDhG(=Seo*NK)'I9_;`dT!=-[6
%D3nk:CrTMKik^mdR3Ab&HrQ+,aq0=%5DNXodTtagcoKs;`uZONoM>gZ-_0:#lffl-j#TTBE;gtrU"ZVFJX.LL,3JXI4<((54Lm;e
%k33WA`6`\h&lM=kOt+cY."IlRMDONk$e*8B'[,M+@t>0,6ZdDhVdE*MYKo&?^K@LBlopE_+2)NZc&O%>Nkq"u>)c'ZJnSPg'"P,)
%C)aL-TbPMf#j$'bod4BLZR%S'mNpRFE1/bs%5H+B4tadH9i'B&-PmcKZ[G$&r`sf2oC_=jh;&R#?)P-U:X;hJK0Gho59=9Scb]+)
%KZF*sh7'fIOrW/g$hPOd97o]Yg3LFq8fqOsHlup'i4#TJC!-VX>,J.$n\9:M[3Do^p9$2nDfsC5&NY>BVlFoPA7T6+1'53&h*XTf
%pc]Jee'LofQTMdJN91W4-(,8Ljc2b0eYkenKs2QU/[fnLE2X57+IS-8iRcCRfiuH!/O$B_gNR<@e'>'#-Et![XBq-lZGo9JGMoJa
%,s!ME8(tNC7g==%[42Jss.C-MCDMZ?IFI.I&<&RW.#G.#/Tl+I-p3-tBi;Wmbh;d'0QUD:Ou5>feL;NHC@bG3aN8n*=Zcj6mLVb%
%q,MNQU)mU9>ab#P.^T\\o3[in"6g[X>iH=i>ps&^UhZYl7*C>?SY=H:$tfs@W"m.R"G8?]jDS4kdg6bom.A/tLLD3""Fo(;l4!,G
%VkpHY:]em&$c<kdie*5n!61*HiX<=L6&dSaYO_NkF`+0VZu?C9di'g@Hf9dE4F1Ioc)(fsBW]cT6i->.a[d'cL11:NAYWD,"TIj1
%K#c<&&2pnprRpm)hFN>TGQ+a47`EhReZF=cNe%%\eeR9q*r(:NZBjmUGN^%,NnS$PchWg7hf["'DC4uaID;W=qlZXtFY>pKnSq!Q
%.\'DudfI7MWXk=Lkj:tU6V.puL:EqEQe=h,,<N9]j@#Jk.(7I\$;"to9cSJkbhg`k9>\'X(qNMrIcQ5Ah`RESLCr"eY"[IY+3#g*
%)\]dpXDCkU;gberPmO27LfV2tfh(DmX#k74pTKc3Xlj66"N2a2Pmp2^aDM"p=c[B#fUFF"`Ucp_!fAKNX09E)LL[E0PqZC"`2!h,
%gpX3PG?*Ip(9%IU[knYGnY7l9fMt24JTXXLF:%?Mj:'L97\2ZfPDOI-(@2/*ET@ied%3cq\C%,]20I`,$tN(@I]Z^75-Q8W0sl^Z
%OjNeO:Y&58:rB;W[4-2$q$EkA/MpI#%r-!)7s8jp#,3)+O(er:K;7ZZY3Qb,,n<fjm9N'egD_WaiBVaWgJQ&0?\.`^9n>Tr+D&\=
%>:AZhmD3P-)Vn;A3oX`$iYi6\GghmF\deG-l)$M=SebSJI%rN#%Sb&0K_A*k!Le.s*-[_LMu>T>CXBrWh6A:>m(tQa%,pi5@n.:V
%qN6c1N9?nIBN/unk%4h*jEU7_KOraUj,3<RLP)<Lh-QWqGP;b6biAY?9uP(<GDI)@@mdq?Zp.(Rgk.d.-W="%5U=Srk:3.'3o[*,
%%c6-U$sm*D"Kkc8LleY,'j;n\k%/5J6`iY0>5UFMMj9u"[&i;#THm8iG+bmO$F66o-rqoqEi,S*5"MV/IMfeLnl.XD-C55c7a/!R
%KR+eSgAL68"RRgib&m<1iI)`0TE*e6>o:/iTfF5iM9jRTF$,1FEGs>fEG[7^@#';ZbUIBNBW1bKWcoJrS_ub0q.a`"6R`&145#:e
%<1u_#Y55T28idbQZ/r/m[G%sAf'I8C.LN?ZMDb6TTNil;Q8>I0?'7mHr>;GE(Z=dTQ!)kd-B.5o#uu>X=tUUOFRa6WbE$16m?)Dm
%-sN<FGR9B8'.YjD>G>k\/5k`hD$:<6q'01YgpOfaqZ(XdYblot]+$:B<OTS9V2M3[91C8(U.ge'4Js%)Wjl1]37*QQqI,G7,*LVJ
%K-b4YIN-J54uCL7ek`&W/'6>pKtQn8hBXCH;;E-eV(WA+(hp[aKPVD=W`9QNbL?^#[NU./BP\fp]p^4ke\i/f#"QmQ#ja4%!'=PY
%/E`#rG[:.H=XIp.1aSD(Z&G2M79SqY./IBaAZ1/1TO+$;*BU;E*WRVgk3`#TT^!MV>.oak!h/c82/6)nbb,U8ZRIWGph6nAc*;8q
%EaZDnJ-hm*6QVa9R,X/&\$[&MU!*pg<gZ6_-ntM&+G?UEmJr^@aYD1Ug\)JKPStN1C(RieD&beI[lq:bkeSTV"W7uL=./b,Be!=8
%YqH,^ThQ:EX:+,m%2::8ih]XeF?sjgW1W96Uh_ilA#ZELqo/3s_(gq6bCn@g\Ub6!*0(d4"CY.Wc!#l4r?WW\VkORb6"E6bAa9*%
%JQtG]8,Ma!IAG<h^];4"9H:!#R=UJ5;K7/X/RATDe2#M;oe*V31cH,q<)6:TaL-`;9I9Rn1gO#`3`ne*$]9Zs&A\NeI'i7*+rG;o
%DMZCe>K)<*fR2VsH)?Nb7bYga&TKLp(bC:EVMqcL5AZKGLZ16;o/R#V`8VW]FsP=41_npS^1X`di8]cTXAH\#6_:3lHNt'dk'>Q]
%*7^EifUWsI_'M>q3f?L0&$)C=\Sq=RmlI-I!qV6Z*_4$$":lV5K;F6iYmu8mWD*e:pNA^@*$mp#OBbTX_qSn`;&<o`P_O_Gp^gWY
%p^@n"E!ucIg87h/`ZULK085[Enn:\.TQEGaZ<8*<402)=ecV$X5U#Wm5_l.M["-1`h3$<ic+BkK:N6-[0aC.iV?mJ5YNYEfIFljk
%-$6hl:r9^;n.:k]aCQ\Aa'u.UGWsC3K9"TEn-4`SnLg"$#cUfdIioGT\#Ru`du"]8d&b6OTN4_?88kE&aucqpQYC(pd8u+Gfh5SK
%Fj]8Y4=Q-Y<!+gr&`]k0cJ\CK2p%QGmFF1KTu0Dq,.)0d=@UcJ6jKpic'k+9:GGtPPB_mgMX2`TWpIW28rYmK_C$(&F=GN/%ReuJ
%1f7VWY[MJ)/g9)`5883N"Yr#>ZeWHO`YGKIX6N\1;G;T]+sq27E3X"\K'\gH*CCi2*6PY8e`[^l._9IS?APl>*S`1@<P@2rDR9B]
%=\[6[EZ$LW%ct_fVhEW.J98IpNBd"We9."^oheqnm'*pW>t5*lBmlUN\p$oK_:9Knc8(^j*Mtc$j]185-WLkt^8+/ORKZW`Yotp'
%SZaSh,:R0\E%bjqeunD-#`2-BALbH3PGru1b<*01A<hD=7C+S&XJYBpfV0SGeE[4ke'Si3_T3kre1s^(h6'od[A\hh%).p!X-GJ]
%rTR&F*f!%fdpOGh$4Np8Bo!1L+/Y!Kaio=pB,idQ*C=Ee%k(&@6ScHn]Gke6VI5r8\4sX<JPoiF:d!E,A=+kDW=4'FK\s_4:]hC)
%R.Gfh]#(2$Vs2TNW7e?kgA;'0<@E_qBiS<Lc2_#,?t-D3m_=cmLSUNtp:6!`&tmacl'9_t/CSF/o8.R3ZXoBh`!8RVCl0m/[1i\0
%9=>#L?lE32C-+>!_,#kJ5(PYo3AaQ=V+,J&M*$G[9I7bpJkD`72KL;>hrdmu'9geYK"OrLH!Ag7<SUbVF%aMQG#X$lG,4WA.A246
%>_JJ^!Tp#^Y*3=p>BdP?gjfmR@b<<TG#AaGaTLhqHrh=84'OYuF6\&&=`&OMr%'e)s/_Z`ZIN)/4;SlAC.`*d8QeM:LjdD3Hj[QS
%=d3l*0@<-fc(peAUr)0%fTA5<(sAkMDJ'P=(W.4R)=;8HTYW2Yoc"GVV79FaK)s]V^C$_?@45!Qc<dR,F!I?R!MtA"#L,W'/V1K/
%6;I0;T%hd^i*C"skL7P/fWe-TA)(\>0MD$F<Fn5o9VIj5*+;\H@SKT?*S*,JrLphj:o];Xg;I#-FMJ&LU@9XqK]l288[(sZ3?\OV
%">3sD2Q]2u,#1bD=l3sN#eU&6<BX&I]W`F>UI.A%m4Y*K#+\\(R>hc%P#r**dB+F]"]DA=U(NcrU'DTb(:G"I#%k;q"c/Z/M-X;k
%0*I;E6HQ<`(k!/j=`F6oU]/XUC:MU2=/3tDG^"$!ZXY8e\NEG7YpF*Bl=G57G.JV\1QIVAmgfnupWT=8T4>4#O<8q<f@7jr#C(eT
%EXf2?Y5'-O4OkaKFFd'floihQWV=@$[M,HU)b8=`r#q8gfC=PQoaCg*(1i`GXNQ\\SS#GFX<E^<ViF&R9;I$TH$So?<&g;^Qajns
%@buS.m<4F!V;p%#!PsbU/'ij:#ga:8!?1oWZ`O'6mHPO8a9ic9;%W+_5WQ@SZe?_M`/r_IQNq5@[`di/aF;atc1:2r(uGd6;][i5
%6</:rSIHgn^%IJ((sO3bdK]6"W9C>&b3Qm()f"X.\L6+`d\CdkDo?">QIRVaJS6E'HOJ`UQMa*Ri/VG:-K'3-&;Q+<q0@7GjnR$\
%CF=d.o-PE<+t9uULDW_(5LIEf$N,R&DE?UbO\dj'd\&PD,I1.rp>ALHs4S,pr7IBD:3dap1aEq+LmG]5r;DNL'F.9R>R5nV9:ZVU
%_:Y>mN6?iEeO^R7D9tbWo,ua9[\5TLr^OCoCakc6_;J^iFAVGP9n,pqH6eE4X/SY\Q!Uu`(XjVB2KVZTC:A+IM8ZusWCq79lh5'(
%1#CkY&ZVhscq^QLW<cQtSZ&C[Ddo&5a66BQF2X[pA7M#`VTXT>$(P*n6uctXG?g\taOG?(*0]&nfrWj9>]W;lXm^AIeXpr[(%NkY
%]0$bdPuJ.=YJ'1.S$SDt@..0=&W-WQ?KR;V>HNs>6EiJobCf!EfB8_2ib'%?_"iOZIC^l3;/-2]MGP.dK,GCb28!oP(#f8!jm=3t
%$14&iS^9s0hSio)@VmNFXf:mYDE;c8rH/Moft94P+hTMHc>,KBS64)oEFRm9BQXoEP1UjC>P-eA/2[0O7FrfIB>!WJ:@55kM$96'
%pM/hXfkqHWG_fMjOT"+,Ba(h\@sbt@McN@\>,"TqJgst`jA"ZqF7dXskOdBXSg`To@^()@Ot,-2nLLS6FA4J6NR+O'`W-WsV/ejA
%-.6Yq]KBl$U&AaSZkG"[!nmam(:^5tlclb@#_Aq&NfOlA?uFJL#Fu4fF&.HDMP9#YX1RmD&2jJA1rf;UYmp@d[UJ9/:J.9O..>Mi
%8B*]t*bVndgR%<dCC;"0*PaVu,T5>Bhlj!)&T+b>7=S2:@p)SZP/21+,@;KSafmu'6l@?iZJ/<),[&NknoO<h<tpidPa;.9Y&6!O
%#k-u91N&<M9T,D`qh$%u^BPsB8".9QQKf^>:6_$5&mm<W9[>cc8`?pgdkf(h_n9NNSib&u^@jr4-Q+BgV".&3[OueKfnlk'ikiF1
%@R^[T=.^!K6eTtR0-k&T+BQPS\II8+VCJ[U1]'"9g^3g&nJe1H$Rq1mPKG,lJd:\g#>[B3RQZeQBSI4\OO?.\%g/T9#L?,H&U/?A
%&Tn_DZ'9hHn6!"VpOYAA<!CG/nfU8mrnnVeBfI:5?+p\V.`DXUSR>pD(4Uq&Y"/g4=lWW86`kWk"S5sSjh[,frj>8-]Y0o;o>_sH
%pE,UoZeCK#Ag9((;$K(S5C3)=5;<@jlm#K.@Euc?qtepZW[\m,Cs6&p@8_]*7B?M?\A3a.jfiP^mgh"WN,!@Rb.BeA#Ak#)*odmk
%@DQk1b:=RI^3pJM>gP(br)lPH/gGK1(ed(LaMP=#o5-JAR'EuH@tV5+CoED@qjc""L,)s9oGf?NEqoG@:^C*JY8^YaX3N%5(&-LV
%$\]?gs4SWZ\'MmZk+L"R)/DqC8B4o:$It2[MU&\$>na^)fUrV+(@%[O53I"AIb1:&43F)mQGoL%"]64M_BZ'i]3nMN"$jILP\uB?
%Y`Jqd7m;W2$jd*Xcr&>#?IoP1=GP8*hII6T7lCHKl[."9-VG!2A'E8n#c2_[7cJ?kYMp9cWdWTnXiP8s>W+#+E*hs/L!,]KhE]$L
%Nl?OL)kiW$8TMLqR_76G-mKCU1e,N#&pYGj%?94gNa5UuE.o)?E.M.lqtZe=jOs'Z676Fc#c&F4;*38%dii%NdmR!9kup,4`kuYQ
%#/<4)374D.]2>3UZrj<e*WrUG>a])qqgtN-"5=Q>%`JmTSi#Qn)t5X3C*?7WUr^R<nagFG#C\dai>-!=Yc(oe.)F9RkL#h$T'1-i
%<b7-/:`ft^b&!JuK^)p',lLBm?+GR.[N+u!G9a8XcUW/s9l\`'\Pa?TcuOS#;3!BVLQ-O7gmt-9DN$I$I8bQ-e.Z%]qk_D#KGat>
%lX%u:&)?[jMZ5CspI_`F?=nbH0B&&&1/!P%>sr3]ehkChE*D]AqEn#t"a1SY37R'WF$?8aG9)"A*ViGn2V`,WZO2SJHsBKe)k?NO
%H0o9W*`q&lN%Haf&#,DSfV*_"-d'^JG]8)V#IMt/TXW[<hlRhQ@VFD#ed^"u@h1st'qqa`\,VYjS;+!["UY"TT67$QW5pn>G<kS?
%3ro"/gQS^)Z-jT`*!7-k7%r-iiVk6gBqIY8FQ\;G^S/Ms6pNL=n(4`(q7*0ET=Ap,VB(/spLAK1:W"Z*$c:?__Jm(Ka66mEI-lSF
%Y1QS6p@U:Fc=kq9rMi54FU`7P\4siTp,q)J[Oo=]n*Q5Q)sTPFFG7^0]Q_&Marl]OR4*Ji*^kE+ahRMZ'AA:_U:s(Acf$]Kje.#2
%%-"m5gIq7u3K<^BVtkd_Z]WV@8*mg*,T>dT4XaHmXjuEDd@E.a>roM$GLjcP[@/.6,Y$mRk1,QbgtSuWD:#8-D4kTLn.AYl)V;W*
%Z\$aEbmSBc=L.``lmE_=U3<<SVL!+CVId/Oq4:ZP)6!G=J;,Y+.pj6;.UO.YaqqdX;VdTkG[@%I>a;MUJ_s%&2DhUu9#ZYTMoL[4
%q/LsEFORQWDst-\URRj/jK_H>pDJ)%ZaMOBU:[#I;8Th+l=:jF1Vj_F:22N9I$c\hq!2:p4%oUiJH*NJ[?"uO-:TO2$ZEC`O:"Fr
%>Eg.hL`=O*hLdg[7[k]g=;#@=@=9OEd_Qi!,DfaFb_e_KJdUC62.e`\.c\?u[!B7R++<(4Bl`hS3qRSW_ekHOs,,OPWV)&B8+TZ!
%<j%&B.'41P"WXYg"_X&<WZq#u2@/oSb+%']jLu@(/$VOf)GccE"J!inmD*Z6(nMX]+[Q#:X]\d7=jD^PCE^ac6B5n+41gk5ZpqJH
%[?XEV38:+L;D&[&,LH;o<9VJ97((k6V$u*VNjY+fQL]<]Qh:f'Y'CUeQM!^R"?8]sVm2<O"5-PYN\)1U%eXNZP*C1OJWlX"61pSS
%/K1h:j="d2A2i`>1)EI<mq/N_g\U@i)o8&rq)`mK!;'paW1Ef\<,>/s^S=oM\TjOo>'K2QoQ0D[JNM-KL<qh]"1fBGgND9I%)t3/
%o:</KKal`k"$Van@:DU>jchKDkVC^&ATq\pPq<0Dn+-&Sc.`FCCP/5>HlDdp/F5$mY9,FT@<c!ORgJJC$b2,X>]>o(;.uRMlG6!@
%!2kOqqOF0F;;X"<)*;r@nJ4OS%-?&YYMXrUnMV$nQ2d7CEY#>El$<7=G"dXCfj?4(+/hp5;XlClE#45Kqfre@#"=0:73:6;0'Vt@
%AB,R:!:GU3=YM$qY<9IH$aSj/U/,,a])eOW-]$r-=Mb^[iGU8mZ\*[S)cZrV'R([Xr=rrMT@k6P_P4mBqE<J,_WJ->i>17&kVgn:
%oHIIgY.]]ChfQc<:%`Kl2mt=ei@mJ(m[FiSTCV#;?/WHI)jB1"B@6Y[cXVCU=L`4\L@)WPYe%/G\8;?BD37ZtkAd[VE8PI;[B<rq
%T_eu>;;J!+RfH`SCs;&hW,]LjDLrPW)%OL77DBd`B=L'OIWs`Lr].!*oO!;\dIE+VAIGRkP2+!BmLh+sj&UA6IVG0aquOF-kdDLp
%`[>8/fpl1Q_BI^J^@q7C3gU<iE%oTs"@$\R>^$n,TFM&A`n_KU]SaoT5AUY'XYPe=<=P)'s,B_GW58^WBqr<EbhX'5oH#Di]0Yd=
%A'V.bAbj)1^ORX)B"71SI^`E=AjICmP1drHlTpiu*@A-31:.XoCeE5DMl*3U(Q;`[l"(S5X3C"MA_Lmf)/=#=Uo=feNNC&p=cJi%
%EJT65`@0lsXU!MeUt^M63NG6[Nda>`374PEG'*3"K>M[=fg:u"K8CleU9Bu4U/9.f2@"4jjUeS[3"bIDC#MR5/5XlcW2'hZ>e`U"
%&\;jLg`[W;r.*s_BFu8Q1l6RroLM/%r7b6:D'+fg(@r\ERZVgV*6#s>$23n>iY17<cD:K[4*FNuJ^W.81rZ'B[?Wd/QQmFg2g>!!
%jlo0<f9V2]:8Yk_+]K@H9.S5p:>\q?H0`__ou9R#HO^j$[.C.i`soUr]b<hf(iIi`Squ*F#oV%DG_=+5XGa7)U0s-e>gKD&6:c44
%EQfhj?Fcn7<Sb)n789QeHJ"7<U5BdS%LofGAR]4N2qka96,"AY#4"Q\T!oAgA^A/*KB:DBaf+%(,ArMK"e4dp,G):H@Cn"3%'$Cn
%?#AX32r\Z><on\&q^HE!;]LZ>d'W%_n#!L:;1)i]rBW"4g:IBbl8s+D]63LH#4T0IFcD<]gBRC)Zo-UR1WJPrGSDJSUOG:f8$Ok>
%Dr@3jgQCe+DJK>)3<L",R<>jEcLW+3'.hKF=qZo<U1@"t>U%[0laYmsVjhHG:Z"mIckA/sm*=C4E;0IS$APc48%G,5!ZURB'qS97
%l%<>_UoeSKBf1hEs4K_iZ\H_XEat1S^*"#smOuYqE$pN$U2X#*."m6WHAOd?bh*a:SAg`'o0FAEd13I>md"91-9iQ_N+H9OjiK=F
%3+C,Wnh_hq(>BQ1-%W=l!o*!Kml^!LFRHc\_CBDP&7p"1;\`RsGA,n&$Y;JMLmg5,!K$028E#b3$j"c?Tq&]o>:i_9Td*Y5ga;Oq
%X=R?H!bG.&-7@[T?$-^FR*C=5_K/CS5G;$T[T!12I5[9Df7ONF3&:r9qOg4_jaNCOMX)>.64QdQiJ7;qn,E9DYPrhGnQYua`=`.G
%"97tfPfGGk](\?pnC+m-i&gu1"l?<rI-&WYrP_jAH_HLErrt^[m<gpgs,K=<89sZb^:nsjSq5epUbU'E^!_0&A\[m)'[CFlp5`#)
%F6fUP\itD=0CWT@4YHK=/GH3ZC+T/GhWi;.2LkDUN,SLL`bu=]`cHQZ2_R$8J*4KLri6!%Hf.m7p17R"M0h2=P9c&^mX3^>ae.GV
%$bgnhopo`V2Mgq8:Kq&c<Nl,&#^H&[?fsY^H2]DpD9_oG&,0Y6RudGi$BHChO'5[,0jf>$Gf]dskKC!rqZ:+8L0O]P"lEQj#Cbt@
%^Z*GqNR-DT_(Y<BoY,_61[sZ(`^aqEiE(7c0lML"2tHdq2icL.]]0h'.Y)G#j;32b`F4XJ?LfV\>iPP&NMl[UT5O2B7m7$IY44"C
%4p-:(I,B7q`C`q?o./V*hmr?N?f9C9/k10XTjQa,@=J$nkMX&fs43Nc_(XgGhOf6eQ[]CRE9h/Oi0WhOkA.iJfBn(NDr9NSE4PYP
%?h!AoDZ0!IS+k5.Y#.E/i%OSBe(o<.GPJbGDa!V,r;)gcDuAGDT/YDn<uu;:puO0uQ$mS!o,%>I^3BSP*PR!aejk3Kp4%upE9k+P
%roC`tr4;q-Gl)Uo5$i]oLQ@#$m`!6$YP[iEo%-&#a4n);I*ptCDa%KVh4G3u]]@JlQs]ILK+9P]oek`1rVC_9p"$l2/pl-d0.qVF
%nS9dAHhi6Mq>%Ei?hO&L>@7$qlfHa2rHS(^hiI$7mdV)j?hO6LepYs3&!jp#qeJhhHiATRq>P6c]]f;1ZbG`)f?SY!!hb[j('Dp<
%Ik_<"THr=4!phUf.2m`Q]c%Cm>J(dbY[-g'9L/15eYn!=h_2tQll:A2$ik`>2P;@D2*)l"GVMCT,P3u_!;uL,JMt`Q;$(Uc=5sFm
%qrENJUjkejm5MfWma'd=MD:?^4&9Za-pQ]43d<.F66hPiT^jN:TlDO8%`4$"9n9MiDeQJ)*(++GeP?ELe`i4_*7sG2&r,$oELH!2
%*4uK!;I`2/)Uc]Q(I^&\C^]I3.%^JCoZ%]"(2XV\8JN<K3N_LNGV=Y_e&VL[-g^Hb\2#J*gF:eJ@!H1<1fORJ9[*&;/DRDj"qW3%
%7U;]+a%m*I'^?,UaquiFFQ"apQ9HAD"pYgB)C:l,dd\H+CN:XdCHBb\:N1'8edZ(O9YMIne_>Nu_\*!J+4eQ\:a4%@2E!d:"s!rE
%#`,=FmdV,Bab%;"-6b\p*]+*99/$nS6-6'L;9"fr)C'PW9K^tSA'8tUN\3_qjQO$t_berj6`Zt.IsQbtH;F)sC<N!#a4k,F?;dZ$
%Z\#AW5@%9T?si,4(!&/!A10DSj?mp"qK!<RZ1Ys;.]Up\E.oW5]o"l!<!&`@'X/Z_#jGh:*KDY\C1J)4UV#BM$Jh,JJN]8jAe():
%3^,<mcd4^i//s3of%;q=BFh)i*I^5M_sC:27&Lb<>TA)%:_2V/#X-\X^q3F)>4;Lo6m3U^2`dLd3+["$XoeFnU>n05Ku<L%J+r3b
%s-LKLs%hPNl-jR"s81]%o?BLLr9$<EokQ\eGG"lj-=j%Y@!uY8To7n5lLdYs?=\%!X9/=#J4;$.58Ej#Aa8PS88*/j#sm7D!"a%=
%*N\,MUp)N2!l>rCh1ljFi1r!E#iB';G4+5pUB"+hfkn/6NnS9J8(T/2+c@^=$23._"sn<:?kWc1"]d6&Br=#7>#-RI@,\*i!>HJU
%Z62$)QIn0)-?*a.k?hBV1/EF4p0cmO<5gnP(!'M8J$9mF>%%M<8;EK=%Qf@)'\(ORKT(WUfSX1C"T4pW*4A^ajc]P#Sikgspp$;^
%3eMd39*;PDPoi\?%bHQDTK-,>$,NXsL,3pOS_pA"0,ZH4$[P7kL=OD^M4pX(O9*PBUTj5')jDD.V"lQEH4VJj\m]PHe&@>5N0*M6
%BRSM#8dGi6\p_Y+7rR_K\:(FC1pR41=GK5ca[ANXoJrKC?']S!9?O!*SCr&SQ<iFaq-REg%-/4<XN>!QLD6Bo,,Hls6tpf[T2d$\
%<8_JYHQfA)52==@8T2&gg[0`Bs!`0bDa1:,r:j'ug;3`go8[R1N=llj,]DZP]kBF8iM"6mY%qi=O\Ka&,o?YEMB6D-lS.Pn-_4&`
%#aitUN*EZ2HRb]t1uDk9DKFlOSLD![W?5j>9aSnJ#Rh251uH:/)TJ$[N?@@NmEriN&3bWk3`rI\]?3@eN`+"bJm`IQ6@m^Tm;P$!
%!.5AYh59]lX,AlZ//WPJ`A[[I=4"Zo_+""'$&.iVP2,ga70@A7B+DbDV74o6d`dI1[HW&\DVt`c7Z*sU"uBF&4$.YOM,,N*%ik_G
%4&]can/ul]lt"+QQ3-3h[]95@j&L*o*mh8]29>+4QmNqe!Ca*5oQOdo[KFu,qH<LmP\MoJ]2-*6F.@j5SQBTX1[W(V3U7=G/6?jl
%c9.&iZmZ"]W/8>(QYpJRd;2M!$d0/n/M:cb%V)SCpj,4b7jGmU7%KG&VG+DtiZc4\ae&bX3oh"okc!T9Utn$;9fjd.\\V60?*5N1
%A`[g9"+Hnu[oC,DL*Me/bu@t,R`MAgj@K4^m8)ed6V[JZ#Z[/ZKnr1<2rcDH4-FhX;1(^\ZR/$$FQ(0#TaaLa=RW!OT@f.jiQ/XA
%RWjSD&#fHXkmes1X0_Vfmc_Ri)VBkX)E[OIU/"JT26h(mhIMV%-Es8eLfbn3H9#1.FMf\K[lj<_JRCtqY%HE)>s(:R*rKSs?_QNN
%nE[1KQrq4Ocn_&dgN6r4di9FOgAF?.0+]UFd66E-fKlQm1=3:a.r^`Kp9T0D>Dqd?_.?9!2Hp#VFakS1Y`Rc+I%$$U%KmWc4G6\j
%0(GgQA4uZIH;lU8b.5n//CfD7@lr4G-#D@)9rW@.n\c^u`@GU62O?\9DEJd_QG>,oAuinf@`O*uetO.!FRJeh`1&!>bGX<hipMa4
%+JU,(<2%C(d;:/J"n@6pA^Wdb@\41.U]Ug=o-@?"]&#Z(/>X,Y&.4[#,%UdJY,[cmg=eC.55@T]aYK9"n)e^BdEEp1S$1su$g=2"
%#?s&Um9tt;F6Y4W(LG6rqBrb>i?:\:WHT;Ug5I:HX7Z+Q*m+qO-9smR!9:)A9FaE)<`^2#3LVoiWPJd,$">cB:?fWqB7-&2`9_SA
%Hki4U2dR$R<X;E"c__aGNDZ=pGAYkYSXic;Cl*M"(/.Jcp(E>SOdoP!D+N?;7fH`8jNpGuZ#lh]NB1e,OGkef7Y>GI;5jDUq-5UR
%")$2(D>M*S5:Nr;/FlUL5*Q"L/YX+Q1s[p\Q9ltZ*p[u]2>B+p*gUVXPtl8]1\`T+_oTZIC$=5$*a,KSVBs>m0l7q.F_5a)Ggtjh
%ha="bk,0WY$X[(4nq%=AjP\&jQA!=#6^_WP:5pL.`lS-^pf^Lh.'O&c/cKKMUN9'7/;"-ECd_Y"K)XPIdo]?ibXrOBQr*PHm6J!h
%dS.lJ;4S^("c'_r$IP4$a&Wn1)Aj(oj;ip&G?F,r6Y.V8Gor>l$+nU_PcZp'%Q%PBfU)IVDF+]%QqST>e[uGYF0hCO4Q25km!W>o
%K.,rG=+1?V$<:;YG!T[fKc`WsU`l;]Oe[b^3[iC%ZOk2T]+<GacGf!EV?un+fZi7;WCun,2]$K_$].i^D6[E>(2k:N"Xp00bRQq?
%#=qje$p#e3kNtQ[;nig=6!dlD=EQS4E]f8cq.Uqp]*DWfi\5&?7OCQoaJE32HOlqQ"T*l]`Qbhub[E&%65/;oq:4u.9Reo?5d!?T
%cD88sZBB6U-bq=A11FqOiH%09RFRHTBkZK_858gq_L0hh684%.O#D48ep!d'1M7SA?hNcm7j+',6bGH?j=I4-A2RP/gi1Fi<T="^
%gU9<jcqujCV8r9]ciKB.dM_6K'U'mr1=/m#,edLc*Mj"Nnb5:=5o)g@H_BEGV4_aU]#6T9Jo?LIj)L*2E`'-14O*uKU3Tt5UEK20
%/bhU^]:e&`3?9!u-nTkHG%Os;"(5NQe31lM:l<srCdF*0O@`29_Lig3-*c!0E!p\#F<4M&h1H]D14`mFEYS0G<^6%)aALU(Z.b6m
%aAL=<:-KR,EW?H_?+(g8.$`o_pE7L2\76Do*oo:[s5Pco+ij\k(!kZJO98<[;aV(9!'7LVLEMAG`R2S0IY8R!^gQA45(agl1-:np
%6&rfOb1Y!]$Z^bK9oTK3aDm_q38r'qidSlKV7?Fi(?E:-AiGJ_j8c*2T"?M:#>9]G4N+ma*+70Yo,crm,7d^[/B@j8[n-B3j<uS5
%Sb=2H0grL+4idY[GmK`Z#LI0k#7GPPb1[[RjLEmP5Q*<op$'o7[NGfO.iRkB%R<b%Y!'i,aD?P^aFWG)nje%g"5KDf>_3-46%;e?
%$/'nM5j+)QO9<+nN3s<1jM5(0d`'NT7q%>(Z3ND*5u!=>4ii2F>PiXNEaY5Hh=U4[#?WRVkGAJE!*R%i(?BucM1&]_*+6meI_Hla
%J?2Aj"3V*nJ5$Poo+9s_VcMP,(?C"qCmIk)5n:,:cg`1"+mua'$=b%ZiVcmP(^KiHHc3ii*+63[Pa\6V#MCc`H8EFS,@fei#R=.b
%;U#s$#R>gPQK;j3,TclNoc_1LfFcFMU5X&!Y#W7&&IqXU3o4ZbNhXb04i.6*f9,e5#8XGBVrAKNTE+G<ZW`"aI+FPGlOaW2D.._'
%4i.7!mM=Wc#R@"6RftqliOIQBDn!@G([hXijq[Qu#R@5SL]^G!i<b;E"[%W(_?&j[-6FEO3$jGCP'DXILXS']1;\#N`3;9D+rnW-
%LOHO"3!stEf=ja7!1Ehj76$=(7'Cjq8k(c?,t04F_GSr3FZ`&O$<q9.LBn.3XN7b=3(e`p0CKJ_6G]4b(?'KBhZ]HIfHM=1Ki4@P
%AJItCY/pMYi;d:QZd`=&7NUtR>IlF3*'B/8VY(3"(:*YD7l[H.'XnM_iIG/Cb#[:A*'eji':odG6?]),KEG&8&[4\`n/J]m4i.6@
%4F\F2\Db,ni<VOOHE@$3KL=t-KF3Gn$ElLD4i@B"Lr6\5#?fJ-]q$;V/lAjs0h+-QU`)r90u<t4P=!P#7q%n@YX^[W5I0YZMf8[]
%h1N'Mi;at<k-k^9iS\U[e(l2ffTT/=3Eq/hqmZ5]_Eh%c`ZF*35,ZD5>D.V1_TZ;DE"Hc0O)XSo[I`2u*;J?hTUQ*EaL^&A@Knfj
%q<Cl<(?!!`d`>XC"17CAD-@-'YWf1sCOh%1R2fafK019i^]PQ8bjor#6GIoYI[l?kNEFL,#Jb0,ZirFf$2(h631qqt)BT##L!=Xi
%.I7I^:ao&b;MH%H^c>U^jP^+LaG:hlBug8Z78>Jt9P/eWdQj8Z(>o2F>;>"C!uutlEpkie,dbcJf)Q&pgq"!S!=g1I@<tOfW)?ut
%q%53o_0=?b5EeSs3+djS4i2d7AgM)9KS-.2bmtBr:p74Fr/,I?6rgP,7lUKC-(/Q]%d6&t_o*;KT[B8#*oV?Mn=RUgJ/1#ej5U^]
%Y'DQVC.:1]egGI&76!gfA\i6r%U.9FE:+;J51o!=iSZAf:Xp6?+KD+*(?46hCTqqoLkF(H,\Mik!$1p(qt)GX!HadnhEi3h7dNVr
%_uZec>BUBo^`82"Z;)PQWhI7i<JEKS#191j*oa[qhds7?;YL_-f!tFbLH#9:#5f7r^q7kN)&D5IO$n+GZk*JOYCuu&&-pQu:4IsW
%5a>chL4qU)(u^hHE'#?iMY<NlEJ6A[\?t?VTMF'WU..5N(u^#$eT<t8N,Un3n$72,M)C31d,L1Ul4FM.4P^(,B7p@&:\$l-&IoYC
%ER[.g6!9kEI#Dsj+KZta);tRYPeuc!%R=N05kPBf%G*?/#Y/=FGRo3W_L\uB^7qmc"V[-b\jn_6[DM4u/&G/.6SL\l3'aGkcaZJ)
%5g`\7'GqDl/;D#YB7PUES!s$N#Q0r\mPtes!4'!"/\jZZLb'>"^upG4Qn6&CbUGc/.)hIQ<%N"I!=kc*[u3Aa61RJ%NoWYHU!rqs
%*oN\u+ltl&+[9bq!utFJAsjoWJ:j@NnfH^3ABMXg*/+h?g-^CC+"T$!);lVFUhg0FJ-/.KfgEe$huGh!XmlAr\>$@<(`5B+#hd*<
%*oJaE+i"*glLLp"J--dU>M0)uKM$XuE"KE"N!235\[i#*n@P"D^BHSVm$`n[);loZ!7>Y3);sG#m7iX[d.]?=*oEX+OD4(ON>lL*
%V2F$Re;sIB/I[-g#N(#\!5JDlorET;mN:?$rkI?>s7_"m!+5Z%YQ+7^J,TB4J,5epIfJ_@rTPtBs6jkjIJquGR*`>BlhIARJ,90!
%^\mcNhgbOf0E:(Yrs&g9=tb9n`BX:Z5Q(@ZrsoKZ:ZM~>
%AI9_PrivateDataEnd
